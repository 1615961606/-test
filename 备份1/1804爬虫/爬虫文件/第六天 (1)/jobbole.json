{"publishtime": "2018/08/24·", "title": "2018 年最受欢迎的 VS Code 扩展插件合集", "desc": "VS Code 是一个出色的代码编辑器，但真正使它强大的是它可用的扩展。 在这篇文章中，我分享了一些我最喜欢的 VS Code 扩展，同时使用 VS Code 开发 Web 应用程序。"}
{"publishtime": "2018/08/23·", "title": "Linux cgroups 命令简介", "desc": "cgroups (Control Groups) 是 Linux 内核提供的一种机制，这种机制可以根据需求把一系列系统任务及其子任务整合(或分隔)到按资源划分等级的不同组内，从而为系统资源管理提供一个统一的框架。"}
{"publishtime": "2018/08/23·", "title": "设计微服务的最佳实践", "desc": "要了解微服务是什么，你必须了解如何将单体应用程序，拆解为独立打包和部署的微型应用程序。本文章将帮助你清晰化的理解，开发者如何根据需求使用微服务来构建他们的应用程序。"}
{"publishtime": "2018/08/22··", "title": "献给命令行重度用户的一组实用 BASH 脚本", "desc": "今天，我偶然发现了一组适用于命令行重度用户的实用 BASH 脚本，这些脚本被称为 Bash-Snippets，它们对于那些整天都与终端打交道的人来说可能会很有帮助。 "}
{"publishtime": "2018/08/22·", "title": "泪流满面的 11 个 Git 面试题", "desc": "在今年的 Stack Overflow 开发者调查报告中，超过 70% 的开发者使用 Git，使其成为世界上使用人数最多的版本控制系统。Git 通常用于开源和商业软件开发，对个人、团队和企业都颇有益处。"}
{"publishtime": "2018/08/20·", "title": "软件的未来是无码", "desc": "现今，公司大多喜欢Quick Base, Mendix, 和 Zudy 这种创新性产品（工具），他们的运作的方式都是类似的，试图将代码转换为可视化界面。就像从汇编代码转换到FORTRAN一样，底层代码还是存在的，但它可以更简单地来表示。这些低代码/无代码平台开始瓦解企业中软件运行的方式。"}
{"publishtime": "2018/08/19·", "title": "目标跟踪算法分类", "desc": "本文对目标跟踪算法进行了分类。"}
{"publishtime": "2018/08/19·", "title": "面向系统管理员的 Bash 指南", "desc": "使 Bash 工作的更好的技巧。 "}
{"publishtime": "2018/08/16··", "title": "从 Linux 源码看 socket 的 close", "desc": "笔者一直觉得如果能知道从应用到框架再到操作系统的每一处代码，是一件Exciting的事情。"}
{"publishtime": "2018/08/15·", "title": "MySQL多版本并发控制机制(MVCC)-源码浅析", "desc": "MySQL多版本并发控制机制(MVCC)-源码浅析 前言 作为一个数据库爱好者，自己动手写过简单的SQL解析器以及存储引擎，但感觉还是不够过瘾。"}
{"publishtime": "2018/08/14·", "title": "Redis 架构演变与 Redis-cluster 群集读写方案", "desc": "Redis-cluster 是近年来 Redis 架构不断改进中的相对较好的 Redis 高可用方案。本文涉及到近年来 Redis 多实例架构的演变过程，包括普通主从架构（Master、slave 可进行写读分离）、哨兵模式下的主从架构、Redis-cluster 高可用架构（Redis 官方默认 cluster 下不进行读写分离）的简介。"}
{"publishtime": "2018/08/11·", "title": "4 款酷炫的终端应用", "desc": "许多 Linux 用户认为在终端中工作太复杂、无聊，并试图逃避它。但这里有个改善方法 —— 四款终端下很棒的开源程序。它们既有趣又易于使用，甚至可以在你需要在命令行中工作时照亮你的生活。 "}
{"publishtime": "2018/08/10·", "title": "回归树的原理及其 Python 实现", "desc": "我们用人话而不是大段的数学公式，来讲讲回归树是怎么一回事。"}
{"publishtime": "2018/08/08·", "title": "2 年面试 900 多位工程师后，我总结了这些经验", "desc": "两年面试超过 900 位工程师，用数据说话，总结公司面试方式及建议，对工程师也有借鉴作用。"}
{"publishtime": "2018/08/08··", "title": "Linux 内核 Git 历史记录中，最大最奇怪的提交信息是这样的", "desc": "我们通常认为 git merges 有两个父节点。Git 还支持章鱼式的合并，这意味着可以有超过两个父节点的合并。这对于我们那些从事小型项目开发的人来说，这似乎很奇怪：与三四个父节点合并会不会令人感到困惑？"}
{"publishtime": "2018/08/06·", "title": "三款 Linux 下的 Git 图形客户端", "desc": "了解这三个 Git 图形客户端工具如何增强你的开发流程。 "}
{"publishtime": "2018/08/05··", "title": "Linux 下 cut 命令的 4 个基础实用的示例", "desc": "在本文中，我将解释 linux 下 cut 命令的 4 个本质且实用的例子，有时这些例子将帮你节省很多时间。 "}
{"publishtime": "2018/07/30··", "title": "推荐系统概述", "desc": "许多人把推荐系统视为一种神秘的存在，他们觉得推荐系统似乎知道我们的想法是什么。比如：视频网站向我们推荐电影，还有电商网站向我们推荐该买什么样的商品。推荐系统从早期发展到现在，已经得到了很大的改进和完善，以不断地提高用户体验。尽管推荐系统中许多都是非常复杂的系统，但其背后的基本思想依然十分简单。"}
{"publishtime": "2018/07/29·", "title": "MySQL 事务隔离级别", "desc": "本文会根据实际工作中碰到的例子，梳理清楚数据库事务的隔离级别。内容很简单，如果你能静下心来看完，一定会对你理解隔离级别有很大的帮助。"}
{"publishtime": "2018/07/27··", "title": "数据科学家的命令行技巧", "desc": "有意掌握命令行应该在每个开发人员的技能链上，特别是数据科学家。学习shell中的来龙去脉无可否认地会让你更高效。"}
{"publishtime": "", "title": "未知", "desc": "暂无简介"}
{"publishtime": "2018/09/16··", "title": "当你「ping 一下」的时候，你知道它背后的逻辑吗？", "desc": "我们在遇到网络不通的情况，大家都知道去 ping 一下，看一下网络状况。那你知道「ping」命令后背的逻辑是什么吗？知道它是如何实现的吗？"}
{"publishtime": "2018/09/16··", "title": "哪门编程语言更赚钱？看看 Stack Overflow 的最新调查", "desc": "Stack Overflow 2018 年最新的薪资计算器已正式推出。最新的计算器除了增加新的国家和地区之外，还更新了数字数据。更新后的薪资计算器新增了 8 个国家和地区的数据，以及更能反映开发者收入的最新数据。"}
{"publishtime": "2018/09/15·", "title": "差异文件（diff）和补丁文件（patch）简介", "desc": "这篇文章介绍差异文件（diff）和补丁文件（patch），以及它们如何在开源项目中使用的例子。 "}
{"publishtime": "2018/09/13·", "title": "深入学习 Redis（4）：哨兵", "desc": "本文将要介绍的哨兵，它基于 Redis 主从复制，主要作用便是解决主节点故障恢复的自动化问题，进一步提高系统的高可用性。"}
{"publishtime": "2018/09/12·", "title": "介绍 Linux 中的管道和命名管道", "desc": "要在命令间移动数据？使用管道可使此过程便捷。 "}
{"publishtime": "2018/09/12·", "title": "深入理解 ext4 等 Linux 文件系统", "desc": "了解 ext4 的历史，包括其与 ext3 和之前的其它文件系统之间的区别。 "}
{"publishtime": "2018/09/12·", "title": "图像主题色提取算法", "desc": "许多从自然场景中拍摄的图像，其色彩分布上会给人一种和谐、一致的感觉；反过来，在许多界面设计应用中，我们也希望选择的颜色可以达到这样的效果，但对一般人来说却并不那么容易，这属于色彩心理学的范畴。"}
{"publishtime": "2018/09/09··", "title": "走近北京后厂村程序员的真实生活：“拿命换钱”", "desc": "北京的西北角是个特别的区域，这里汇集了众多互联网及IT企业，实力雄厚的上市公司将自家logo悬挂在大厦的顶端，而刚起步的创业公司也会选择在这里租下一亩三分地。"}
{"publishtime": "2018/09/09··", "title": "彼之蜜糖，吾之砒霜 —— 聊聊软件开发中的最佳实践", "desc": "描述一个事物，唯有一个名词定义它的概念，唯有一个动词揭露它的行为，唯有一个形容词表现它的特征。要做的，就是用心去寻找那个名词、那个动词、那个形容词……”"}
{"publishtime": "2018/09/07·", "title": "基于海量词库的单词拼写检查、推荐到底是咋做的？", "desc": "本文就来介绍一个能够完成单词拼写检查、推荐任务的算法。"}
{"publishtime": "2018/09/05·", "title": "程序员找工作面试会遇到哪些坑", "desc": "今天这篇文章，我们就来聊一聊校招找工作时会遇到哪些坑。需要注意的是，这些坑不一定是用人单位让我们踩的，也有可能是我们自己给自己挖的坑。而最大的坑就是：我们什么都没做，不闻不问，让机会悄悄溜走。"}
{"publishtime": "2018/09/05·", "title": "GBDT 回归的原理与 Python 实现", "desc": "有问题，上知乎。知乎是中文互联网知名知识分享平台，以「知识连接一切」为愿景，致力于构建一个人人都可以便捷接入的知识分享网络，让人们便捷地与世界分享知识、经验和见解，发现更大的世界。"}
{"publishtime": "2018/09/04··", "title": "从技术转管理，我做了什么来拯救自己？", "desc": "我是一名新手项目经理，转项目管理岗1年半。在做管理之前，我是一名开发。也就是说，我是最常见的技术转管理了。"}
{"publishtime": "2018/09/04··", "title": "一名 IT 经理是怎么把一个项目带崩的", "desc": "我是一名项目经理，在过去的四个月里，我把一个项目带崩了（上线后频出问题，用户无法使用）。在最近的几天，我每天都在反思……"}
{"publishtime": "2018/09/03·", "title": "Vim 代码片段插件 Ultisnips 使用教程", "desc": "Ultisnips 插件安装分两部分，一个是 ultisnips 插件本身，另外一个是代码片段仓库。"}
{"publishtime": "2018/08/31·", "title": "受 SQLite 多年青睐，C 语言到底好在哪儿？", "desc": "SQLite 近日发表了一篇博文，解释了为什么多年来 SQLite 一直坚持用 C 语言来实现。"}
{"publishtime": "2018/08/29·", "title": "如何在 Linux Shell 编程中定义和使用函数", "desc": "函数是一段可复用的代码。我们通常把重复的代码放进函数中并且在不同的地方去调用它。库是函数的集合。我们可以在库中定义经常使用的函数，这样其它脚本便可以不再重复代码而使用这些函数。 "}
{"publishtime": "2018/08/27·", "title": "对比 Ubuntu 18.04 和 Fedora 28", "desc": "Ubuntu 和 Fedora 是两个主流的 Linux 发行版。两者都各自有一些华而不实的特性，因而新接触 Linux 的人很难抉择。我的建议是同时尝试二者，这样你在试用后可以发现哪个发行版提供的工具更适合你。 "}
{"publishtime": "2018/08/27·", "title": "死磕一周算法，我让服务性能提高50%", "desc": "我们的检索服务中用到了最小编辑距离算法，这个算法本身是平方量级的时间复杂度。但是我无意中发现了另外一个更牛的算法：列划分算法，使得这个本就很牛的算法性能直接提高一倍 ！"}
{"publishtime": "2018/08/26·", "title": "Linux 27 周年，这 27 件相关的有趣事实你可能不知道", "desc": "许多人认为10月5日是 Linux 系统的周年纪念日，因为这是 Linux 在1991年首次对外公布的时间。不过，你可能不知道的是，早在1991年8月25日，当年还是大学生的 Linus Torvalds 就向 comp.os.minix 新闻组的人透露了由于“业余爱好”他正在研究操作系统的消息。因此，该时间也被许多爱好者视为 Linux 的真正诞生日期。"}
{"publishtime": "", "title": "未知", "desc": "暂无简介"}
{"publishtime": "2018/06/25··", "title": "听说你立志要做数据分析，不如先听听老司机的建议？", "desc": "方向很重要，而人生很短暂。往哪里走，怎么走，再怎么也得花点时间思考一下，不是吗？"}
{"publishtime": "2018/06/23·", "title": "在 Linux 上复制和重命名文件", "desc": "cp 和 mv 之外，在 Linux 上有更多的复制和重命名文件的命令。试试这些命令或许会惊艳到你，并能节省一些时间。 "}
{"publishtime": "2018/06/22·", "title": "8 个基本的 Docker 容器管理命令", "desc": "利用这 8 个命令可以学习 Docker 容器的基本管理方式。这是一个为 Docker 初学者准备的，带有示范命令输出的指南。 "}
{"publishtime": "2018/06/22··", "title": "计算机专业太难不适合女生学？来看 N 多小姐姐的回应", "desc": "高考结束了，填志愿选专业的时候也要来了。最近我们微博收到一位女生发私信求助，是否该选计算机专业。"}
{"publishtime": "2018/06/21··", "title": "IT程序员的抉择：我要离开帝都了", "desc": "反正选择在哪个地方发展坏处都不少。但是这么多年在北京奋斗，我感觉除了看上北京的工作机会，就再也没有让我留恋的东西了。"}
{"publishtime": "2018/06/19·", "title": "PacVim：一个学习 vim 命令的命令行游戏", "desc": "PacVim 的灵感来源于经典游戏 PacMan，它以一种好玩有趣的方式为你提供了大量的 Vim 命令练习。 "}
{"publishtime": "2018/06/17·", "title": "Vim-plug：极简 Vim 插件管理器", "desc": "Vim 插件管理器就可以派上用场。插件管理器将安装插件的文件保存在单独的目录中，因此管理所有插件变得非常容易。 "}
{"publishtime": "2018/06/17·", "title": "2018 年 Java 程序员必读的十本书", "desc": "书单里的书介绍了 Java 9、Spring 5、Kotlin、软件架构、微服务、云以及 Java 8 的一些特性。这里的书都很棒，都挺适合在上下班路上读。"}
{"publishtime": "2018/06/15·", "title": "RabbitMQ 发布订阅实战：实现延时重试队列", "desc": "本文带领大家逐步实现一个带有失败重试功能的发布订阅组件，使用该组件后可以非常简单的实现消息的发布订阅，在进行业务开发的时候，业务开发人员可以将主要精力放在业务逻辑实现上，而不需要花费时间去理解RabbitMQ的一些复杂概念。"}
{"publishtime": "2018/06/14··", "title": "九年程序人生", "desc": "时间一晃而过，大学毕业转眼间已经工作9年了，总结一下自己这些年来感受。"}
{"publishtime": "2018/06/13·", "title": "Linux 权限控制的基本原理", "desc": "这里，我们主要介绍 Linux 系统中，权限控制的基本原理。"}
{"publishtime": "2018/06/12·", "title": "为什么码农要了解业务？", "desc": " 最近一位分析界的老前辈对我很无奈地摇摇头，“这帮程序员，不食人间烟火哪！”我也深有感触，全世界的码农都一个样。"}
{"publishtime": "2018/06/10·", "title": "Git 分支操作介绍", "desc": "在这个 Git 入门系列的第三篇中，我们来学习一下如何添加和删除 Git 分支。 "}
{"publishtime": "2018/06/09·", "title": "在 Git 中怎样克隆、修改、添加和删除文件？", "desc": "在本文中，我们将学习一些关于 Git 的其他内容，即如何克隆（下载）、修改、添加和删除 Git 仓库中的文件。 "}
{"publishtime": "2018/06/08·", "title": "手把手指导您使用 Git", "desc": "如果您从未使用过 Git，甚至可能从未听说过它。莫慌张，只需要一步步地跟着这篇入门教程，很快您就会在 GitHub 上拥有一个全新的 Git 仓库。 "}
{"publishtime": "2018/06/08·", "title": "2017 年，我发布了 6 个副项目", "desc": "回望这一年，我成功发布了尽可能多的副项目，同时有一份超过了全职工作的工作、和家人度过了高质量的时光（我有两个孩子和一位非常有耐心的妻子）、作为兼职教授教书、还兼职提供咨询服务。这些对我来说似乎有点疯狂。"}
{"publishtime": "2018/06/07·", "title": "深入学习 Redis（2）：持久化", "desc": "本文将先说明上述几种技术分别解决了Redis高可用的什么问题；然后详细介绍Redis的持久化技术，主要是RDB和AOF两种持久化方案；在介绍RDB和AOF方案时，不仅介绍其作用及操作方法，同时介绍持久化实现的一些原理细节及需要注意的问题。最后，介绍在实际使用中，持久化方案的选择，以及经常遇到的问题等。"}
{"publishtime": "2018/06/06·", "title": "Linux vs. Unix：有什么不同？", "desc": "深入了解这两个有许多共同的传统和相同的目标的操作系统之间的不同。 "}
{"publishtime": "2018/06/06·", "title": "比起 Windows，怎样解读 Linux 的文件系统与目录结构？", "desc": "本文先对Windows和 Linux 上面文件系统原理、组织概念进行区分，并给出例子、列举两者的优缺点以具体说明，最后较为详细地介绍了 Linux 系统的目录结构。"}
{"publishtime": "2018/06/05·", "title": "如何编写 C++ 游戏引擎", "desc": "文章介绍编写游戏引擎过程中不常被谈论的，但是很值得一谈的建议！"}
{"publishtime": "", "title": "未知", "desc": "暂无简介"}
{"publishtime": "2018/06/05··", "title": "倾听程序员的心声真的很重要", "desc": "说到开发产品，没有人比程序员更了解产品。程序员知道产品的优点、缺陷、用途和潜在用途。说起这些，程序员了如指掌，如数家珍。"}
{"publishtime": "2018/06/04·", "title": "分支限界法", "desc": "分支限界法常以广度优先或以最小耗费（最大效益）优先的方式搜索问题的解空间树。在分支限界法中，每一个活结点只有一次机会成为扩展结点。活结点一旦成为扩展结点，就一次性产生其所有儿子结点。"}
{"publishtime": "2018/05/30··", "title": "如何做人性化的代码审查？", "desc": "代码审查不光是一个技术过程，也是一个社交过程。做好代码审查，有助于建立积极和谐的工作环境和人际关系。 "}
{"publishtime": "2018/05/28··", "title": "分布式之 Redis 复习精讲", "desc": "博主的《分布式之消息队列复习精讲》得到了大家的好评，内心诚惶诚恐，想着再出一篇关于复习精讲的文章。但是还是要说明一下，复习精讲的文章偏面试准备，真正在开发过程中，还是脚踏实地，一步一个脚印，不要投机取巧。"}
{"publishtime": "2018/10/21·", "title": "命令行小技巧：读取文件的不同方式", "desc": "如果你在系统中打开一个终端完成一些工作，你就有可能需要读取一两个文件。 "}
{"publishtime": "2018/05/25·", "title": "如何编译 Linux 内核", "desc": "Jack 将带你在 Ubuntu 16.04 服务器上走过内核编译之旅。 "}
{"publishtime": "2018/10/19·", "title": "如何在 Linux 中找到并删除重复文件", "desc": "如果你们像我一样，在类 Unix 操作系统中，大量多版本的相同文件放在不同的备份目录，你可以使用下面的工具找到并删除重复文件。 "}
{"publishtime": "2018/05/25··", "title": "我必须得告诉大家的MySQL优化原理", "desc": "说起MySQL的查询优化，相信大家收藏了一堆奇技淫巧：不能使用SELECT *、不使用NULL字段、合理创建索引、为字段选择合适的数据类型….. 你是否真的理解这些优化技巧？"}
{"publishtime": "2018/10/16·", "title": "Linux 系统上交换空间的介绍", "desc": "学习如何修改你的系统上的交换空间的容量，以及你到底需要多大的交换空间。 "}
{"publishtime": "2018/05/24··", "title": "是什么让初级工程师走投无路？", "desc": "很多初级开发人员从来没有得到过一份像样的工作，因为公司认为由高级工程师带初级工程师学习，成本太高，作者认为健康的软件开发生态需要初级工程师来维持。"}
{"publishtime": "2018/10/16·", "title": "Redis基础、高级特性与性能调优", "desc": "本文将从Redis的基本特性入手，通过讲述Redis的数据结构和主要命令对Redis的基本能力进行直观介绍。"}
{"publishtime": "2018/05/22··", "title": "如何高效学习", "desc": "很多人推崇碎片化学习，但是有一些东西碎片化学习效率是很低的，比如数学。那么你该如何高效学习呢？"}
{"publishtime": "2018/10/15··", "title": "通过信鸽来解释 HTTPS", "desc": "密码学可能是一个难以理解的主题。它充满了数学证明。除非你真的需要开发密码系统，否则，如果你只想从宏观的角度了解密码学，你并不需要理解这些复杂的内容。"}
{"publishtime": "2018/05/22·", "title": "详解 Linux 文档属性、拥有者、群组、权限、差异", "desc": "我们都知道Linux是一个支持多用户、多任务的系统，这也是它最优秀的特性，即可能同时有很多人都在系统上进行工作，所以千万不要强制关机，同时，为了保护每个人的隐私和工作环境，针对某一个文档(文件、目录)，Linux系统定义了三种身份，分别是拥有者(owner)、群组(group)、其他人(others)，每一种身份又对应三种权限，分别是可读(readable)、可写(writable)、可执行(excutable)。"}
{"publishtime": "2018/10/10·", "title": "10 个 Linux 中方便的 Bash 别名", "desc": "对 Bash 长命令使用压缩的版本来更有效率。 "}
{"publishtime": "2018/05/21··", "title": "我似乎理解了编程的意义", "desc": "编程的意义是什么，我又为什么要编程呢？这是一个不时会浮现在我脑海中的问题，它来得并不频繁，但每次却都伴随着对自己职业生涯或人生目标的质疑而产生，令我感到些许困惑和不安。"}
{"publishtime": "2018/10/08·", "title": "选择 NoSQL 数据库需要考虑的 10 个问题", "desc": "如何知道 NoSQL 解决方案是否适合您的下一个软件项目呢？首先问问你自己和你的团队这十个问题。"}
{"publishtime": "2018/05/13·", "title": "10 个常用的软件架构模式", "desc": "你是否曾经思考过如何设计大型的企业级系统？在决定启动软件开发之前，首要的是选择恰当的架构来指引系统的功能及质量属性设计。因此在将软件架构应用于设计之前，必需要了解常用的架构模式。"}
{"publishtime": "2018/05/21·", "title": "分布式之消息队列复习精讲", "desc": "要说明一下，本文不是《消息队列从入门到精通》这种课程，因此只是提供一个复习思路，而不是去教你们怎么调用消息队列的API。建议对消息队列不了解的人，去找点消息队列的博客看看，再看本文，收获更大。"}
{"publishtime": "2018/10/07·", "title": "在 Linux 下截屏并编辑的最佳工具", "desc": "有几种获取屏幕截图并对其进行添加文字、箭头等编辑的方法，这里提及的的屏幕截图工具在 Ubuntu 和其它主流 Linux 发行版中都能够使用。 "}
{"publishtime": "2018/05/11··", "title": "MySQL 在并发场景下的问题及解决思路", "desc": "对于数据库系统来说在多用户并发条件下提高并发性的同时又要保证数据的一致性一直是数据库系统追求的目标，既要满足大量并发访问的需求又必须保证在此条件下数据的安全，为了满足这一目标大多数数据库通过锁和事务机制来实现，MySQL数据库也不例外。尽管如此我们仍然会在业务开发过程中遇到各种各样的疑难问题，本文将以案例的方式演示常见的并发问题并分析解决思路。"}
{"publishtime": "2018/05/20·", "title": "分布式之延时任务方案解析", "desc": "在开发中，往往会遇到一些关于延时任务的需求。"}
{"publishtime": "2018/10/05·", "title": "如何在 Linux 中配置基于密钥认证的 SSH", "desc": "在基于密钥认证中，为了通过 SSH 通信，你需要生成 SSH 密钥对，并且为远程系统上传 SSH 公钥。 "}
{"publishtime": "2018/05/11·", "title": "常用排序算法总结（1）", "desc": "我们通常所说的排序算法往往指的是内部排序算法，即数据记录在内存中进行排序。"}
{"publishtime": "2018/05/19·", "title": "分布式之缓存击穿", "desc": "如果黑客每次故意查询一个在缓存内必然不存在的数据，导致每次请求都要去存储层去查询，这样缓存就失去了意义。如果在大流量下数据库可能挂掉。这就是缓存击穿。"}
{"publishtime": "2018/10/03·", "title": "Linux 防火墙：关于 iptables 和 firewalld 的那些事", "desc": "以下是如何使用 iptables 和 firewalld 工具来管理 Linux 防火墙规则。 "}
{"publishtime": "2018/05/09·", "title": "GitHub 工程师：我眼中的理想上司是这样子的", "desc": "Github 高级工程师分享了她认为的理想上司应该是什么样。"}
{"publishtime": "2018/05/19·", "title": "终于有人把云计算、大数据和人工智能讲明白了", "desc": "这三者相辅相成不可分割，如果是非技术的人员来讲可能比较难理解说这三个之间的相互关系，所以有必要解释一下。"}
{"publishtime": "2018/10/02·", "title": "“用户组”在 Linux 上到底是怎么工作的？", "desc": "我意识到之前我并没有真正理解用户和组是怎么工作的，我信心满满的尝试了下面的内容并且验证到底发生了什么，事实证明现在我的理解才是对的。 "}
{"publishtime": "2018/05/07·", "title": "Pet：一个简单的命令行片段管理器", "desc": "我们不可能记住所有的命令，对吧？是的。除了经常使用的命令之外，我们几乎不可能记住一些很少使用的长命令。这就是为什么需要一些外部工具来帮助我们在需要时找到命令。 "}
{"publishtime": "2018/05/17·", "title": "如何在 Linux 中使用 find", "desc": "使用正确的参数，find 命令是在你的系统上找到数据的强大而灵活的方式。 "}
{"publishtime": "2018/09/30·", "title": "让你提高效率的 Linux 技巧", "desc": "想要在 Linux 命令行工作中提高效率，你需要使用一些技巧。 "}
{"publishtime": "2018/05/06·", "title": "在 Linux 下 9 个有用的 touch 命令示例", "desc": "touch 命令用于创建空文件，也可以更改 Unix 和 Linux 系统上现有文件时间戳。这里所说的更改时间戳意味着更新文件和目录的访问以及修改时间。 "}
{"publishtime": "2018/05/17··", "title": "分布式之数据库和缓存双写一致性方案解析", "desc": "在更新缓存方面，对于更新完数据库，是更新缓存呢，还是删除缓存。又或者是先删除缓存，再更新数据库，其实大家存在很大的争议。目前没有一篇全面的博客，对这几种方案进行解析。于是博主战战兢兢，顶着被大家喷的风险，写了这篇文章。"}
{"publishtime": "2018/05/04·", "title": "每个 Linux 新手都应该知道的 10 个命令", "desc": "通过这 10 个基础命令开始掌握 Linux 命令行。 "}
{"publishtime": "2018/09/28·", "title": "Linux ACL 权限之进阶篇", "desc": "笔者在《Linux ACL 权限》一文中介绍了 Linux ACL 权限的基本用法，本文笔者将尝试探究 ACL 中的基本概念和实现原理，希望能够通过进一步的加深对 Linux 权限系统的理解。"}
{"publishtime": "2018/05/17··", "title": "大龄码农的新西兰移民之路", "desc": "如今已顺利入职，新西兰绿卡正在申请过程中，终于有时间将最近一年的经历整理成文，也供有此想法的同学们参考。"}
{"publishtime": "2018/04/30·", "title": "gdb 如何调用函数？", "desc": "我发现我可以从 gdb 上调用 C 函数。这看起来很酷，因为在过去我认为 gdb 最多只是一个只读调试工具。 "}
{"publishtime": "2018/09/27·", "title": "Linux ACL 权限", "desc": "ACL的全称是 Access Control List (访问控制列表) ，一个针对文件/目录的访问控制列表。它在UGO权限管理的基础上为文件系统提供一个额外的、更灵活的权限管理机制。它被设计为UNIX文件权限管理的一个补充。ACL允许你给任何的用户或用户组设置任何文件/目录的访问权限。"}
{"publishtime": "2018/05/14·", "title": "给初学者看的 shuf 命令教程", "desc": "使用 shuf 命令，我们可以随机打乱给定输入文件的行。 "}
{"publishtime": "2018/04/30·", "title": "假装很忙的三个命令行工具", "desc": "有时候你很忙。而有时候你只是需要看起来很忙，就像电影中的黑客一样。有一些开源工具就是干这个的。 "}
{"publishtime": "2018/09/27·", "title": "大型网站限流算法的实现和改造", "desc": "石玉军的个人博客是一个97年的Java全栈工程师所创建的，你可以在这里跟随博主的学习脚步，学习Java方向的知识。一步一步的走向大神。"}
{"publishtime": "2018/04/28··", "title": "Linux 目录结构：/lib 分析", "desc": "本文中，让我们来看看 /lib 目录都有些什么。 "}
{"publishtime": "2018/05/14·", "title": "JAVA 程序员需要用到 10 个测试框架和库", "desc": "作为 Java 程序员，我们在截然不同的领域工作，从编写 Java 核心代码到 JSP 页面，REST API，甚至有时为了构建自动化而去编写 Groovy 脚本，这就要求我们必需了解不同的自动化测试工具。"}
{"publishtime": "2018/04/17·", "title": "精通 Linux 的 “kill” 命令", "desc": "无论你使用哪种操作系统，你一定会遇到某个行为失常的应用，它把自己锁死并拒绝关闭。在Linux(还有Mac)，你可以用一个”kill”命令强制终结它。在这个教程中，我们将展示给你多种方式使用”kill”命令终结应用。"}
{"publishtime": "2018/09/25·", "title": "Redis 避不开的五种数据结构", "desc": "Redis 中有 5 种数据结构，分别是字符串（String）、哈希（Hash）、列表（List）、集合（Set）和有序集合（Sorted Set），因为使用 Redis 场景的开发中肯定是无法避开这些基础结构的，所以熟练掌握它们也就成了一项必不可少的能力。"}
{"publishtime": "2018/09/24·", "title": "我从编程面试中学到的", "desc": "聊聊白板编程面试 "}
{"publishtime": "2018/05/13·", "title": "常用排序算法总结（2）", "desc": "上一篇总结了常用的比较排序算法，主要有冒泡排序，选择排序，插入排序，归并排序，堆排序，快速排序等。"}
{"publishtime": "2018/04/25··", "title": "给初学者的 fc 示例教程", "desc": "fc 是个 shell 内置命令，用于在交互式 shell 里列出、编辑和执行最近输入的命令。 "}
{"publishtime": "2018/09/24·", "title": "增强 Vim 编辑器，提高编辑效率", "desc": "这 20 多个有用的命令可以增强你使用 Vim 的体验。 "}
{"publishtime": "2018/04/16·", "title": "最终一轮面试被 Google 刷掉，这是一种什么样的体验？", "desc": "谷歌是在今年一月份给我发出面试邀请的。整个招聘流程持续了大约一个月。如果顺利，应聘这个岗位要经历五轮面试。"}
{"publishtime": "", "title": "未知", "desc": "暂无简介"}
{"publishtime": "2018/04/25·", "title": "如何识别人的技术能力和水平？", "desc": "技术招聘除了考察人的协作精神和工作态度，一大目标便是判断人的技术能力和实际水平。在这件事情上多做观察、思考是很有意义的。"}
{"publishtime": "2018/04/16·", "title": "Git 12 岁了，为你送上 12 个 Git 的使用技巧！", "desc": " 为了纪念Git的12岁生日，这篇文章提供12个诀窍与技巧来让你的Git经验更加有用和强大，从一些你可能会忽视的基础开始到一些真正的强大技巧!"}
{"publishtime": "2018/09/22·", "title": "Redis 的 KEYS 命令引起 RDS 数据库雪崩，宕机 2 次，造成几百万损失", "desc": "最近互联网线上事故发生比较频繁，9月19日网上爆料出顺丰近期发生了一起线上删库事件，在这里就不介绍了。"}
{"publishtime": "2018/04/25·", "title": "谁说国外的程序员过得好？法国政府搞的软件项目，坑出新境界", "desc": "很多软件项目开发时间大大超出了规划的时间，投入大量资金和人力，都没有实在的结果。如果你讨厌你的编程工作，请认真阅读这篇 2008 年的文章吧。法国科技公司为政府做的项目，预期两三年，做了十二年还在做；6 百万行 C++ 代码，经理比工程师多，人员素质极低。"}
{"publishtime": "2018/04/14·", "title": "用信鸽来解释 HTTPS", "desc": "密码学是一门难以理解的学科，因为它充满了数学定理。但是除非你要实际开发出一套加密算法系统，否则你是没必要强制理解那些深奥的数学定理的。如果你阅读本文的目的是想设计下一套 HTTPS 协议，那我只能抱歉的说本文的知识还远远不够；如果不是的话，那么就煮杯咖啡，轻松愉悦的阅读本文吧。"}
{"publishtime": "2018/09/18·", "title": "有效管理进程的 8 个 Linux 命令", "desc": "通过这些关键的命令来全程管理你的应用。 "}
{"publishtime": "2018/04/24··", "title": "线上账务系统余额并发更新问题记录", "desc": "某电商平台，某天线上用户报bug说账户余额信息与交易流水对不上。可以认为是数据库并发更新问题，由此定位出具体原因，更进一步了解mysql，并给出解决方案。"}
{"publishtime": "2018/04/14·", "title": "SQL 入门", "desc": "使用 SQL 构建一个关系数据库比你想的更容易。 "}
{"publishtime": "", "title": "未知", "desc": "暂无简介"}
{"publishtime": "2018/04/21··", "title": "Linux 系统中 sudo 命令的 10 个技巧", "desc": "sudo 表示 “superuser do”。 它允许已验证的用户以其他用户的身份来运行命令。其他用户可以是普通用户或者超级用户。然而，大部分时候我们用它来以提升的权限来运行命令。 "}
{"publishtime": "2018/04/14··", "title": "软件复杂性正在杀死我们", "desc": "代码量少了不代表软件的复杂度降低了，而是编程语言的表达力更强了。太多开发人员痴迷于框架，过度追求软件灵活性、可组合性等等，而忘记自己是不是真的需要这些。"}
{"publishtime": "2018/04/21··", "title": "我曾误删了公司的数据库，但还是活下来了", "desc": "开发人员总以为自己误删了数据是天大的事情。的确如此，但是“罪不至死”。本文作者 Zachary Kuhn 分享了自己的亲身遭遇，并认为犯了错误不重要，重要的是要有所得。"}
{"publishtime": "2018/04/13··", "title": "使用 Graylog 和 Prometheus 监视 Kubernetes 集群", "desc": "在本文中，我将使用 Graylog （用于日志）和 Prometheus （用于指标）去打造一个 Kubernetes 集群的监视解决方案。 "}
{"publishtime": "2018/04/20·", "title": "Reddit 如何面试工程师？", "desc": "Reddit 给来应聘者写的官方指南，描述了整个面试的流程、该如何准备。"}
{"publishtime": "2018/04/13··", "title": "机器学习如何发现你喜欢的音乐", "desc": "讲解 Spotify 三种音乐推荐模型。带你了解，音乐个性化推荐背后的科学原理。"}
{"publishtime": "2018/03/09··", "title": "利用 DB 实现分布式锁的思路", "desc": "以前参加过一个库存系统，由于其业务复杂性，搞了很多个应用来支撑。这样的话一份库存数据就有可能同时有多个应用来修改库存数据。比如说，有定时任务域xx.cron，和SystemA域和SystemB域这几个JAVA应用，可能同时修改同一份库存数据。如果不做协调的话，就会有脏数据出现。"}
{"publishtime": "2018/04/18··", "title": "可怕的万圣节 Linux 命令", "desc": "什么命令可能会显示鬼、巫婆和僵尸的图像？哪个会鼓励“不给糖果就捣蛋”的精神？ "}
{"publishtime": "2018/04/13··", "title": "命令行乐趣：嘲讽输错 Bash 命令的用户", "desc": "你可以通过配置 sudo 命令去嘲讽输入错误密码的用户。但是现在，当用户在 shell 输错命令时，就能嘲讽他了（滥用？）。"}
{"publishtime": "2018/03/09··", "title": "开源作者遭受小白的 9 种伤害", "desc": "在帮助小白解决了很多开源使用的问题后，我总结了小白的不科学的提问方式，以遭受9种伤害夸张的手法一一道来。"}
{"publishtime": "2018/04/17·", "title": "彩票的数学知识", "desc": "彩票怎样才能中奖？"}
{"publishtime": "2018/04/12·", "title": "从 Linux 源码看 socket 的阻塞和非阻塞", "desc": "大部分高性能网络框架采用的是非阻塞模式。笔者这次就从linux源码的角度来阐述socket阻塞(block)和非阻塞(non_block)的区别。"}
{"publishtime": "2018/03/08·", "title": "励志！海外开发者讲述用脚做游戏的研发经历", "desc": "对于游戏开发者而言，失去双手对于职业和生活可能是灾难性的打击。然而，业内却有一小部分人每天都要面临这样的问题，位于奥斯丁的开发者Rusty Moyher就是其中之一。"}
{"publishtime": "2018/04/17·,", "title": "工程师如何在工作中提升自己?", "desc": "古人云：“活到老，学到老。”互联网算是最辛苦的行业之一，“加班”对工程师来说已是“家常便饭”，同时互联网技术又日新月异，很多工程师都疲于应付，叫苦不堪。以至于长期以来流传一个很广的误解：35岁是程序员工作的终点。"}
{"publishtime": "2018/04/10··", "title": "15 分钟参透比特币和区块链", "desc": "比特币又火了。为什么要说又呢？因为比特币在 2013 年已经火过一次了。这次与 2013 年相同的是，比特币的价格一路飙升，让人咂舌。与 2013 年不同的是，这次人们不仅仅关注比特币的价格，也开始关注比特币背后的技术——区块链。"}
{"publishtime": "2018/03/08·", "title": "索引表和 ES 的一点点思考", "desc": "在电商项目中，物理库存系统是个极其重要的系统，订单支付后，就会开始来占用物理库存。一般情况下，库存系统都是要分库的，因为主要的操作是写操作，例如占用/释放/取消等写操作。"}
{"publishtime": "", "title": "未知", "desc": "暂无简介"}
{"publishtime": "2018/04/10··", "title": "创建订单实现幂等的一点思考", "desc": "大部分文章都会说，同一个操作，进行多次操作后，结果是一样的，就可以说这个操作是支持幂等的。感觉不太准确，比如一个http get操作，可能每次的结果都不一样，但是其实是幂等的。"}
{"publishtime": "2018/03/07·", "title": "Linux 主目录中的隐藏文件是干什么用的？", "desc": "在 Linux 系统中，你可能会在主目录中存储了大量文件和文件夹。但在这些文件之外，你知道你的主目录还附带了很多隐藏的文件和文件夹吗？ "}
{"publishtime": "2018/04/10·", "title": "如何对分布式 NewSQL 数据库 TiDB 进行性能调优", "desc": "分布式系统中调优比单节点服务器调优复杂得多，它的瓶颈可能出现在任何地方，单个节点上的系统资源，子组件，或者节点间的协作，甚至网络带宽这些都可能成为瓶颈。性能调优就是发现并解决这些瓶颈的实践，直到系统达到最佳性能水平。"}
{"publishtime": "2018/03/06·", "title": "为什么浏览器的用户代理字符串以 Mozilla 开头", "desc": "最早流行的浏览器是 NCSA Mosaic，它称自己为 NCSA_Mosaic/2.0 (Windows 3.1)；后来一个新浏览器出现了，它的名字叫 Mozilla，是 Mosaic Killer 的缩写，Mosaic 并不觉得这好笑，因此该浏览器改名为 Netscape，它称自己为 Mozilla/1.0 (Win3.1)。"}
{"publishtime": "2018/04/08··", "title": "直白介绍卷积神经网络（CNN）", "desc": "卷积神经网络（也称作 ConvNets 或 CNN）是神经网络的一种，它在图像识别和分类等领域已被证明非常有效。 卷积神经网络除了为机器人和自动驾驶汽车的视觉助力之外，还可以成功识别人脸，物体和交通标志。"}
{"publishtime": "2018/03/06··", "title": "100 倍价值的工程师", "desc": "几个月前一个新工程师加入了我们的团队。和往常一样，我花了些时间和他相处，来更好地了解他是哪种类型的人、他的驱动力是什么。我们经常讨论过去的经历，但更重要的是：未来的目标。结果发现，他有个有趣的目标……"}
{"publishtime": "2018/04/08·", "title": "计算机语言的巨变", "desc": "在这篇文章中，我来讲述一下为什么我不再碰 C++ 的故事。这是关于计算机语言设计经济学专题文章的起始点。这篇文章会讨论为什么一些真心不好的决策会被做出来，然后进入语言的基础设计之中，以及我们该如何修正这些问题。"}
{"publishtime": "2018/03/06·", "title": "6 个开源的家庭自动化工具", "desc": "用这些开源软件解决方案构建一个更智能的家庭。 "}
{"publishtime": "2018/04/06··", "title": "给初学者的 type 命令教程", "desc": "type 命令用于查找 Linux 命令的信息。顾名思义，你可以使用 type 命令轻松找出给定的命令是否是别名、shell 内置命令、文件、函数或关键字"}
{"publishtime": "2018/03/04··", "title": "我只想安静地写代码，领导却跟我谈大局、讲奉献", "desc": "程序员闷头写代码、自我孤立，说到底都是领导的错"}
{"publishtime": "2018/04/04·", "title": "如何实现一个基本的微信文章分类器", "desc": "微信公众号发布的文章和一般门户网站的新闻文本类型有所不同，通常不能用现有的文本分类器直接对这些文章进行分类，不过文本分类的原理是相通的，本文以微信公众号文章为对象，介绍朴素贝叶斯分类器的实现过程。"}
{"publishtime": "2018/04/03·", "title": "站会不只是站着！那该如何开展？", "desc": "站会看似简单，但要真的开好，达到站会本来的目的并不简单。这篇文章可以给你一些关于站会的指导。"}
{"publishtime": "2018/03/04·", "title": "剖析内存中的程序之秘", "desc": "内存管理是操作系统的核心任务；它对程序员和系统管理员来说也是至关重要的。这第一篇文章描述了在内存中程序如何分布。"}
{"publishtime": "2018/04/04·", "title": "Redis源码阅读：sds字符串实现", "desc": "从开始工作就开始使用Redis，也有一段时间了，但都只是停留在使用阶段，没有往更深的角度探索，每次想读源码都止步在阅读书籍上，因为看完书很快又忘了，这次逼自己先读代码。因为个人觉得写作需要阅读文字来增强灵感，那么写代码的，就阅读更多代码来增强灵感吧。"}
{"publishtime": "2018/04/02·", "title": "为初学者准备的 ln 命令教程（5 个示例）", "desc": "当我们在命令行上工作时，您可能需要在文件之间创建链接。 "}
{"publishtime": "2018/03/04·", "title": "使用 sar 和 kSar 来发现 Linux 性能瓶颈", "desc": "sar 命令的输出能够用于识别服务器瓶颈。但是，分析 sar 命令提供的信息可能比较困难，所以要使用 kSar 工具。kSar 工具可以将 sar 命令的输出绘制成基于时间周期的、易于理解的图表。 "}
{"publishtime": "2018/04/04·", "title": "计算机如何感知大数据——聚类算法", "desc": "看看下面这张图片。这是一个不同形状大小的昆虫的集合。花点时间按照相似程度将它们分成几组。"}
{"publishtime": "2018/03/29··", "title": "IT 职场新人碰到的几个常见误区", "desc": "笔者自己工作 10+ 年了，大概 5 年前从技术转管理后，多少还是发现一些职场新人职业发展的问题。"}
{"publishtime": "2018/03/03·", "title": "20 个 OpenSSH 最佳安全实践", "desc": "时不时会出现关于 OpenSSH 零日漏洞的传言。本文将描述如何设置你的 Linux 或类 Unix 系统以提高 sshd 的安全性。 "}
{"publishtime": "2018/04/03··", "title": "DNS 解析器性能比较：CloudFlare vs Google vs Quad9", "desc": "现在进行一个更加有趣的测试：Google 的 8.8.8.8，Quad9 的 9.9.9.9 和 CloudFlare 的 1.1.1.1  ，以及OpenDNS 的 208.67.222.222 和一些其他供应商进行比较。"}
{"publishtime": "2018/03/27··", "title": "如何在 Linux 上安装应用程序", "desc": "学习在你的 Linux 计算机上摆弄那些软件。 "}
{"publishtime": "2018/02/28·", "title": "如何在 Linux/Unix 中不重启 Vim 而重新加载 .vimrc 文件", "desc": "我通常使用 :vs ~/.vimrc 来加载 ~/.vimrc 配置。而当编辑 .vimrc 时，我需要不重启 Vim 会话而重新加载它。 "}
{"publishtime": "", "title": "未知", "desc": "暂无简介"}
{"publishtime": "2018/03/27··", "title": "深入学习 Redis（1）：Redis 内存模型", "desc": "这篇文章主要介绍Redis的内存模型（以3.0为例），包括Redis占用内存的情况及如何查询、不同的对象类型在内存中的编码方式、内存分配器(jemalloc)、简单动态字符串(SDS)、RedisObject等；然后在此基础上介绍几个Redis内存模型的应用。"}
{"publishtime": "2018/02/27·", "title": "什么是 LLVM？Swift, Rust, Clang 等语言背后的支持", "desc": "LLVM 使创建新语言变得更加容易，同时也可以增强现有语言的开发。它提供了一些工具，用于自动执行语言创建任务中最不讨人喜欢的部分：创建一个编译器，将输出的代码移植到多个平台和架构，编写代码来处理常见的语言隐喻，比如异常。它的自由授权意味着它可以自由地作为软件组件重用或作为服务部署。"}
{"publishtime": "2018/03/26··", "title": "刚开始学编程？这几款小工具能让你事半功倍", "desc": "工欲善其事，必先利其器。"}
{"publishtime": "2018/02/24··", "title": "每个系统管理员都要知道的 30 个 Linux 系统监控工具", "desc": "您需要监控 Linux 服务器的性能吗？试试用这些内置命令和附加工具吧！大多数 Linux 发行版都附带了大量的监控工具。这些工具提供了获取系统活动的相关指标。您可以使用这些工具来查找性能问题的可能原因。 "}
{"publishtime": "2018/03/24·", "title": "Linux 中的“大内存页”（hugepage）是个什么？", "desc": "学习 Linux 中的大内存页（hugepage）。理解什么是“大内存页”，如何进行配置，如何查看当前状态以及如何禁用它。 "}
{"publishtime": "2018/02/24··", "title": "微软精心打造的Vista系统，为什么死得这么快？", "desc": "编者按：从后来的很多反馈看来，Vista都是一个超前于时代的操作系统。但这个操作系统在当年却遭遇了前所未有的失利——究竟为什么Vista会失败、死亡？当时的项目团队主管之一BenFathi在Medium发表了文章WhatReallyHappened…"}
{"publishtime": "2018/03/23·", "title": "du 及 df 命令的使用（附带示例）", "desc": "du 和 df 命令都是 Linux 系统的重要工具，来显示 Linux 文件系统的磁盘使用情况。 "}
{"publishtime": "2018/02/22··", "title": "开源巨献：2017 年 Google 开源了这些超赞的项目", "desc": "开源巨献：2017 年 Google 开源了这些超赞的项目"}
{"publishtime": "2018/03/22·", "title": "从业 24 年独立开发者：大多数同行都只看 5 年以内", "desc": "在24年的独立游戏研发生涯中，Spiderweb Software创始人Jeff Vogel学到了很多东西。在3月20日举行的GDC独立游戏峰会上，他分享了一些自己的心得，有些观点让人十分意外。"}
{"publishtime": "2018/02/21·", "title": "在 Linux 中如何编写基本的 udev 规则", "desc": "理解 udev 背后的基本概念，学习如何写简单的规则。 "}
{"publishtime": "2018/03/21·", "title": "Linux 新用户？来试试这 8 款重要的软件", "desc": "即便您不是计算机的新手，刚接触 Linux 时，通常都会面临选择使用应用软件的问题。在数百万 Linux 应用程序中，做起选择来并不轻松。本文中，您将能发现八个重要的 Linux 应用，帮助您快速选择应用程序。 "}
{"publishtime": "2018/02/19·", "title": "为初学者准备的 Linux rmdir 命令案例教程", "desc": "在 Linux 命令行上删除文件和目录，我们已经讨论过 rm 命令 的使用。然而，这里有另一个相关的命令行工具，专门针对目录的删除。这是所指的工具就是 rmdir，本教程中，我们将根据一些简单的实例来讨论它。 "}
{"publishtime": "2018/03/19··", "title": "工程师思维，做不出好产品？", "desc": "「你的想法太工程师了，不适用在「一般」用户上，怎么可能用一般用户的角度去思考产品呢？」"}
{"publishtime": "2018/02/09··", "title": "为什么程序员找不到工作：4 个恐怖故事", "desc": "应聘者因为用了面试官不熟悉的框架而被拒；"}
{"publishtime": "2018/02/12·", "title": "为 Linux 初学者讲解 wc 命令", "desc": "在命令行工作时，有时您可能想要知道一个文件中的单词数量、字节数、甚至换行数量。 "}
{"publishtime": "2018/03/14··", "title": "在 Linux 中自动配置 IPv6 地址", "desc": "在本文中，我们将学习如何为 ULA 自动配置 IP 地址。 "}
{"publishtime": "2018/02/09··", "title": "优化 MySQL： 3 个简单的小调整", "desc": "我并不期望成为一个专家级的 DBA，但是，在我优化 MySQL 时，我推崇 80/20 原则，明确说就是通过简单的调整一些配置，你可以压榨出高达 80% 的性能提升。尤其是在服务器资源越来越便宜的当下。 "}
{"publishtime": "", "title": "未知", "desc": "暂无简介"}
{"publishtime": "2018/03/13··", "title": "Linux 启动过程分析", "desc": "理解运转良好的系统对于处理不可避免的故障是最好的准备。 "}
{"publishtime": "2018/02/09·", "title": "Nginx 教程（3）：SSL 设置", "desc": "本文讲解如何配置服务器使用 HTTPS。"}
{"publishtime": "2018/03/13··", "title": "程序员如何规划职业路线？", "desc": "没有哪一套方法是适用于所有人的，这一套软件工程师职业发展纲要，也不过是在你踽踽前行的路上，迷茫时可用来参考借鉴。你的核心竞争力，永远是你的自身实力。切记！"}
{"publishtime": "2018/02/08··", "title": "使用 Vi/Vim 编辑器：基础篇", "desc": "VI 编辑器是一个基于命令行的、功能强大的文本编辑器，最早为 Unix 系统开发，后来也被移植到许多的 Unix 和 Linux 发行版上。 "}
{"publishtime": "2018/03/13·", "title": "Redis 集群部署及踩过的坑", "desc": "作者整理了 Redis 集群部署心得及踩过的坑。"}
{"publishtime": "2018/02/07·", "title": "操作系统何时运行？", "desc": "请各位思考以下问题：在你阅读本文的这段时间内，计算机中的操作系统在运行吗？又或者仅仅是 Web 浏览器在运行？又或者它们也许均处于空闲状态，等待着你的指示？ "}
{"publishtime": "2018/03/12·", "title": "我从 1000 份代码审查中学到了什么", "desc": "我看到有些建议不断重复出现，所以我决定整理一个清单，与诸位分享。这是我的 3（额外 +1）个最常见的代码审查建议。"}
{"publishtime": "2018/02/07··", "title": "当 CPU 空闲时它都在做什么？", "desc": "操作系统行为的基本原理是，在任何一个给定的时刻，在一个 CPU 上有且只有一个任务是活动的。但是，如果 CPU 无事可做的时候，又会是什么样的呢？"}
{"publishtime": "2018/03/12·", "title": "AI 从业者都会用到的 10 个深度学习方法", "desc": "如今，在机器学习的出现的地方我们都能看到深度学习的身影。在这里，我想分享 AI 工程师用于解决机器学习问题的  10 个强大深度学习方法。"}
{"publishtime": "2018/02/07·", "title": "八种在 Linux 上生成随机密码的方法", "desc": "学习使用 8 种 Linux 原生命令或第三方实用程序来生成随机密码。 "}
{"publishtime": "2018/03/12··", "title": "邪恶的编程咒语", "desc": "编程语言中一些怪异的规则。"}
{"publishtime": "2018/02/06··", "title": "Python 是各年龄段开发者最爱的语言", "desc": "在 HackerRank 的 2018 开发者技能调查中，JavaScript 或许是最受雇主欢迎的编程语言，但根据 HackerRank 的爱恨指数数据，Python 赢得了全年龄段开发者的芳心。"}
{"publishtime": "2018/03/11··", "title": "给 rm 命令添加个「垃圾桶」", "desc": "将文件移动到“垃圾桶”是一个好主意，当你无意中运行 rm 命令时，可以拯救你 "}
{"publishtime": "2018/02/06·", "title": "独立游戏开发者：我做对了所有事、但还是赔掉了房子", "desc": "GameLook报道/随着游戏行业的竞争加剧，成功的概率变得越来越低。前不久，海外开发者Constantin Bacioiu在博客中表示，辞职做全职独立游戏研发之后，他赔掉了刚买的房子，因为游戏发布一个月的销量还不到200套，离最低目标都还差很远。"}
{"publishtime": "2018/03/10·", "title": "Linux 跟踪器之选", "desc": "有大量的 Linux 跟踪器可供你选择。由于它们中的每个都有一个官方的（或者非官方的）的吉祥物，我们有足够多的选择给孩子们展示。 "}
{"publishtime": "2018/01/29·", "title": "揭秘 Quora 的 Web 服务器架构", "desc": "Quora 曾经在 2012 年 8 月使用了一种新的并行架构去渲染页面。相比以前， 3-10 倍的速度来渲染页面。如今，我们又对原来的架构设计做了一些改进，从而进一步提高了速度并节省了成本。Quora 工程师在本文和大家一起分享他们是如何改造的。"}
{"publishtime": "2018/02/05·", "title": "如何统计 Linux 中文件和文件夹/目录的数量", "desc": "今天我们再次带来一系列可以多方面帮助到你的复杂的命令。 通过操作命令，可以帮助您计数当前目录中的文件和目录、递归计数，统计特定用户创建的文件列表等。 "}
{"publishtime": "", "title": "未知", "desc": "暂无简介"}
{"publishtime": "2018/01/29·", "title": "免费知识哪里来？Arxiv 使用指南", "desc": "如果你非常确定自己想要找什么​，​比如知道论文的名字（算法的名字）或者作者的名字，直接去Google Scholar上搜索是最快的。然而如果你并不是很确定自己想要什么，只是想要看看某个领域的最新发展，知道大家都在干什么，然而​却发现​Google Scholar给你的结果多半不靠谱，请读下去。"}
{"publishtime": "2018/02/05··", "title": "Linux 与 Unix 之差异", "desc": "在计算机时代，相当一部分的人错误地认为 Unix 和 Linux 操作系统是一样的。然而，事实恰好相反。让我们仔细看看。 "}
{"publishtime": "2018/01/29·", "title": "Nginx 教程（2）：性能", "desc": "本文介绍改善 Nginx 速度的方法和技巧，我们会在这里谈及 gzip 压缩，缓存，buffer 和超时。"}
{"publishtime": "2018/02/03·", "title": "为初学者准备的 MariaDB 管理命令", "desc": "现在我们再来看看一些有用的 MariaDB 管理命令。这些都是使用 MariaDB 最基础的命令，而且它们对 MySQL 也同样适合，因为 Mariadb 就是 MySQL 的一个分支而已。 "}
{"publishtime": "2018/01/28··", "title": "Nginx 教程 （1）：基本概念", "desc": "我们会告诉你 Nginx 是如何工作的，其背后的概念有哪些，以及如何优化它以提升应用程序的性能。还会告诉你如何安装，如何启动、运行。"}
{"publishtime": "2018/02/02··", "title": "如何开始做一个开源项目？他的亲身经历值得参考", "desc": "作者以自己的经历鼓励大家从事开源活动：在 Nodejs 源码里改了两个字符，解决了内存泄漏，信心大增；没找到合适的图片 lazy load 的库，自己动手做，竟被印度电商巨头的网站用上了，信心倍增。"}
{"publishtime": "2018/01/28·", "title": "堆和堆的应用：堆排序和优先队列", "desc": "堆(Heap))是一种重要的数据结构，是实现优先队列(Priority Queues) 首选的数据结构。由于堆有很多种变体，包括二项式堆、斐波那契堆等，但是这里只考虑最常见的就是二叉堆（以下简称堆）。"}
{"publishtime": "2018/02/01·", "title": "这种 Unicode 符号，让百万人中招下了假应用……", "desc": "2017 年 BBC 报道了一个假冒 WhatsApp 的新闻。假应用似乎与官方应用同属一个开发者名下。在 Google Play 发现前，假应用下载超过 100 万次。"}
{"publishtime": "2018/01/27·", "title": "三款简单而优秀的 Linux 网络监视工具", "desc": "通过 iftop、 nethogs 和 vnstat 详细了解你的网络连接状态。 "}
{"publishtime": "2018/02/01··", "title": "一个 IT 青年北漂四年的感悟", "desc": "一直以来在内心中仿佛有两个人：一个人说你要实现理想，呆在中国最繁华的城市，感受大都市的生活，实现个人价值；另一个说还是回老家吧，过得安逸点，没什么压力，老婆孩子热炕头挺好的。其实这无所谓对错，只是个人的选择不同而已。"}
{"publishtime": "2018/01/27·", "title": "分析了 7500w+ GitHub 代码仓库 哪门语言热度最高？", "desc": "近日，有开发者在 reddit 发布了一个帖子，内容是通过对 GitHub 用户的数据进行分析得到的编程语言排序榜。作者认为，通过计算 GitHub 上有多少人使用每种语言来对所有的编程语言进行排序会很有趣。 "}
{"publishtime": "2018/02/01··", "title": "聊聊分布式事务，再说说解决方案", "desc": "分布式事务是企业集成中的一个技术难点，也是每一个分布式系统架构中都会涉及到的一个东西，特别是在微服务架构中，几乎可以说是无法避免，本文就分布式事务来简单聊一下。"}
{"publishtime": "2018/01/26··", "title": "与 C 语言长别离", "desc": "我意识到了一个让我震惊的事实 —— 我有着 35 年的 C 语言经验。每周我都要写很多 C 代码，但是我已经记不清楚上一次我 创建一个新的 C 语言项目 是在什么时候了。 "}
{"publishtime": "2018/01/31·", "title": "采访 Node.js 之父 Ryan Dahl", "desc": "Ryan Dahl 目前是 Google Brain 的一个软件工程师，他是 Node.js 之父。现在他从事深度学习研究项目，工作重点是彩色化和超分辨率等图像转换工作。"}
{"publishtime": "2018/01/26··", "title": "一个技术大牛对程序员招聘的吐槽和建议", "desc": "作为软件人，找工作有时候似乎挺苦逼的。说真的，让我去掉前面这句中“似乎”二字吧。就是苦逼！很多人都曾抱怨处在招聘的一方很糟糕，我们没有任何可靠的方式来甄别会写代码并且写得好的人。但其实应聘方也很苦逼！招聘方遇到的困境，也恰恰是造成痛苦流程的原因。"}
{"publishtime": "2018/01/30··", "title": "做 ML 有关的工作，需要哪些技能？", "desc": "有位网友在 Quora 上提了这个问题，本文摘编了 2 位 Quora 网友的回答。"}
{"publishtime": "2018/01/25··", "title": "2018 年，程序员要具备哪些核心竞争力？", "desc": "近日国外开发者平台 HankerRank 发布了 2018 年开发者技能调查报告，本文摘录程序员求职时必备技能相关的调查结果。"}
{"publishtime": "2018/01/30·", "title": "3 个可以替代 Emacs 和 Vim 的文本编辑器", "desc": "Vim 和 Emacs 对于 Linux 桌面上进行文本编辑显然是重量级的，但是它们并非唯一之选。 "}
{"publishtime": "2018/01/25··", "title": "2018 开发者技能调查：这些编程语言受欢迎", "desc": "近日国外开发者平台 HankerRank 发布了 2018 年开发者技能调查报告，本文摘录部分和编程语言相关的调查结果。"}
{"publishtime": "2018/01/15··", "title": "Linux 的 fmt 命令用法与案例", "desc": "有时你会发现需要格式化某个文本文件中的内容。比如，该文本文件每行一个单词，而任务是把所有的单词都放在同一行。当然，你可以手工来做，但没人喜欢手工做这么耗时的工作。而且，这只是一个例子-事实上的任务可能千奇百怪。 "}
{"publishtime": "2018/01/30·", "title": "如何在 Linux/Unix/Windows 中发现隐藏的进程和端口", "desc": "绝大多数的 Rootkit 工具或者恶意软件借助内核来实现进程隐藏，这些进程只在内核内部可见。你可以使用 unhide 或者诸如 rkhunter 等工具，扫描 rootkit 程序 、后门程序以及一些可能存在的本地漏洞。 "}
{"publishtime": "2018/01/23·", "title": "Linux 下各文件夹的结构说明及用途介绍", "desc": "linux下各文件夹的结构说明及用途介绍。"}
{"publishtime": "2018/01/13··", "title": "请停止结对编程", "desc": "这是一个风和日丽的星期五下午，Ben 和 Martin 本应该在 咖啡馆喝一杯下午茶，一起聊聊周末的计划，然而 PM 的一个微信通知打乱了这一切。原来产品出现了一个bug需要紧急修复，下班之前必须要搞定。"}
{"publishtime": "", "title": "未知", "desc": "暂无简介"}
{"publishtime": "2018/01/22··", "title": "可视化解释压缩算法的工作原理", "desc": "压缩技术在生活中到处可见，硬盘上存储数据、发送电视信号、网页传输、流媒体……现代计算几乎没有一个重要领域不使用压缩技术。"}
{"publishtime": "2018/01/12··", "title": "在 Linux 的终端上伪造一个好莱坞黑客的屏幕", "desc": "这是一个简单的小工具，可以把你的 Linux 终端变为好莱坞风格的黑客入侵的实时画面。 "}
{"publishtime": "2018/01/21·", "title": "汇编语言入门教程", "desc": "汇编语言不容易学习，就连简明扼要的介绍都很难找到。下面我尝试写一篇最好懂的汇编语言教程，解释 CPU 如何执行代码。"}
{"publishtime": "2018/01/12··", "title": "区块链初学者指南", "desc": "区块链到底是什么呢？其实是两个东西：一个是区块一个是链。说玄虚一点，就是一链子的区块。"}
{"publishtime": "2018/01/20··", "title": "当你在 Linux 上启动一个进程时会发生什么？", "desc": "本文是关于 fork 和 exec 是如何在 Unix 上工作的。你或许已经知道，也有人还不知道。几年前当我了解到这些时，我惊叹不已。 "}
{"publishtime": "2018/01/11·", "title": "加密货币的本质", "desc": "2017 年比特币暴涨，其他币也像雨后春笋一样冒出来，已经有1000多种了。"}
{"publishtime": "2018/01/19··", "title": "10 个用于 AI 开发的框架和库", "desc": "本文将介绍那些用于 AI 开发的高质量库，并谈谈它们的优缺点，以及特性。"}
{"publishtime": "2018/01/09·", "title": "操作系统级虚拟化概述", "desc": "本文简要介绍了操作系统级虚拟化的概念，并简要阐述了实现操作系统虚拟化所用到的技术Namespace及cgroups的原理及使用方法。"}
{"publishtime": "2018/01/16··", "title": "AI 玩跳一跳的正确姿势，跳一跳 Auto-Jump 算法详解", "desc": "最近，微信小游戏跳一跳可以说是火遍了全国，从小孩子到大孩子仿佛每一个人都在刷跳一跳，作为无（zhi）所（hui）不（ban）能（zhuan）的AI程序员，我们在想，能不能用人工智能（AI）和计算机视觉（CV）的方法来玩一玩这个游戏？"}
{"publishtime": "2018/01/09·", "title": "通过实例学习 tcpdump 命令", "desc": "tcpdump 是一个很常用的网络包分析工具，可以用来显示通过网络传输到本系统的 TCP/IP 以及其他网络的数据包。tcpdump 使用 libpcap 库来抓取网络报，这个库在几乎在所有的 Linux/Unix 中都有。 "}
{"publishtime": "2018/01/16··", "title": "为小白准备的重要 Docker 命令说明", "desc": "在本教程中，我们会学习管理 docker 容器的其他命令。 "}
{"publishtime": "2018/01/08·", "title": "把docker镜像当作桌面系统来用", "desc": " 近些年来，Docker由于提供了一套非常方便地创建并运行应用容器的方法，而在全球掀起了一股容器化的热潮。容器通过将软件及其所需要的运行环境一同打包带走，从而将人们从依赖的苦海中拯救出来。"}
{"publishtime": "2018/01/15·", "title": "回顾 2017 年发布的 10 个新数据库系统", "desc": "数据库世界并不是每周都有让人不可思议的新闻，但在一年的时间里，我还是惊讶地发现，我们看到了很多新事物，以及该领域坚持不懈地发展。"}
{"publishtime": "2018/01/08··", "title": "利用副项目找 IT 工作，需要满足这 3 个原则", "desc": "和要找的工作相关；有深度；不断维护改进。然后放在简历上显眼的位置。"}
{"publishtime": "2018/01/15·", "title": "Pick：一款 Linux 上的命令行模糊搜索工具", "desc": "它允许用户通过 ncurses(3X) 界面来从一系列选项中进行选择，而且还支持模糊搜索的功能。当你想要选择某个名字中包含非英文字符的目录或文件时，这款工具就很有用了。 "}
{"publishtime": "2018/01/07··", "title": "绝不要用的 Linux 命令 ！", "desc": "蜘蛛侠有这样的一句信条，“权力越大，责任越大。” 对于 Linux 系统管理员们来说，这也是一种应当采用的明智态度。"}
{"publishtime": "2017/12/22··", "title": "十个不错的 Linux 网络监视工具", "desc": "在这篇文章中，我们将讨论从 Linux 终端中运行的 10 个网络监视工具。它对不使用 GUI 而希望通过 SSH 来保持对网络管理的用户来说是非常理想的。"}
{"publishtime": "", "title": "未知", "desc": "暂无简介"}
{"publishtime": "2018/01/04·", "title": "比特币入门教程", "desc": "一串数字，背后没有任何资产支持，也没有任何人负责，你把它当作钱付给对方，怎么会有人愿意接受？"}
{"publishtime": "2017/12/22·", "title": "用系统日志了解你的 Linux 系统", "desc": "后台运行的程序（通常被称为守护进程或者服务进程）处理了你 Linux 系统中的大部分任务。当这些守护进程工作时，它们将任务的详细信息记录进日志文件中，作为它们做过什么的“历史”信息。 "}
{"publishtime": "2018/01/04··", "title": "区块链入门教程", "desc": "区块链是眼下的大热门，新闻媒体大量报道，宣称它将创造未来。可是，简单易懂的入门文章却很少。区块链到底是什么，有何特别之处，很少有解释。"}
{"publishtime": "2017/12/22··", "title": "说了这么久的“Linux 桌面年”，为什么还没来？", "desc": "你一定会听过这样的预言：“这将是Linux走向桌面的一年。”事实上，这样的预言我们不止听过一次，2012 年，2008 年，甚至是更早是时间，几乎每一年我们都听到过这样的“预言”。那么，说了这么久的“ Linux 桌面年”，它到底来了吗？"}
{"publishtime": "2018/01/03··", "title": "12 条用于 Linux 的 MySQL/MariaDB 安全最佳实践", "desc": "在本指南中，我们将会讲解对开发者有帮助的 MySQL/MariaDB 的 Linux 最佳安全实践。"}
{"publishtime": "2017/12/21··", "title": "PostgreSQL 查询成本模型", "desc": "PostgreSQL是一个自由的对象-关系数据库服务器(数据库管理系统)，被业界誉为“最先进的开源数据库”，本文作者以代码实例说明了如何计算和评估PostgreSQL查询成本。"}
{"publishtime": "2018/01/02··", "title": "关于负载均衡的一切：总结与思考", "desc": "在计算机的世界，这就是大家耳熟能详的负载均衡（load balancing），所谓负载均衡，就是说如果一组计算机节点（或者一组进程）提供相同的（同质的）服务，那么对服务的请求就应该均匀的分摊到这些节点上。"}
{"publishtime": "2017/12/20··", "title": "浅谈重构中踩过的坑", "desc": "最近重构了公司一个将近10年的核心功能模块，踩了不少坑。在做这个重构的时候好几次都觉得做不下去，好几次压力都非常大，心想着我该不会做着做着就退出编程届了吧。"}
{"publishtime": "2018/01/02··", "title": "日志的艺术（The art of logging）", "desc": "程序员学习每一门语言都是从打印“hello world”开始的，日志也是新手程序员学习、调试程序的一大利器。当项目上线之后，也会有各种各样的日志，比如记录用户的行为、服务器的状态、异常情况等等。打印日志似乎是一件很简单、不值得一提的事情。但是，当看到线上项目居然有这样的日志的时候，不禁想问问我们真的会打印日志吗？"}
{"publishtime": "2017/12/18·", "title": "Linux 移动或重命名文件/目录－mv 的10个实用例子", "desc": "当你想要将文件从一个位置移动到另一个地方并且不想复制它，那么mv 命令是完成这个任务的首选。 "}
{"publishtime": "2018/01/02·", "title": "10 个例子教你学会 ncat (nc) 命令", "desc": "ncat 或者说 nc 是一款功能类似 cat 的工具，但是是用于网络的。它是一款拥有多种功能的 CLI 工具，可以用来在网络上读、写以及重定向数据。 "}
{"publishtime": "2017/12/18··", "title": "我见过的那些愚蠢的安全漏洞", "desc": "知名安全技术博主 Tony Hunt 吐槽了一些正规公司、正规网站的安全漏洞：HTTP + cookie 里明文存放用户名密码；输入用户名与生日就能重设密码；密保问题；邮箱绑定个人信息等等。"}
{"publishtime": "2017/12/30·", "title": "最早做游戏设计与开发的女程序员", "desc": "第一批电子游戏程序员之一是一位年轻女性，那时她刚从高中毕业。四十年前，消费电子产品巨头 RAC 发布了 Studio II。"}
{"publishtime": "2017/12/18··", "title": "搭建Keepalived + Nginx + Tomcat的高可用负载均衡架构", "desc": "随着业务的不断扩大，系统的访问量逐渐的上升，单机部署的模式已无法承载现有的业务量，需要进行服务集群化部署，本文主要介绍服务端Tomcat多实例部署，以及如何保证web服务的高可用方案。"}
{"publishtime": "2017/12/30·", "title": "布隆过滤器:Google Guava类库源码分析及基于Redis Bitmaps的重构", "desc": "本文就Guava类库中实现布隆过滤器的源码作详细分析，最后出于灵活性和解耦等因素的考虑，我们想要把布隆过滤器从JVM中拿出来，于是利用了Redis自带的Bitmaps作为底层的bit数组进行重构，另外随着插入的元素越来越多，当实际数量远远大于创建时设置的预计数量时，布隆过滤器的误判率会越来越高，因此在重构的过程中增加了自动扩容的特性，最后通过测试验证其正确性。"}
{"publishtime": "2017/12/17··", "title": "如何在不会导致服务器宕机的情况下，用 PHP 读取大文件", "desc": "虽然这不是我们经常遇到的问题，但在处理大文件时很容易搞砸。在异步应用程序中，当我们不注意小心使用内存的话，很容易导致整个服务器宕机。"}
{"publishtime": "2017/12/26··", "title": "学数字设计的软件工程师该了解的时钟知识", "desc": "如果你有软件工程师背景，想找一份数字设计工程师的工作，那么你需要做的第一件事就是尽可能早的学习时钟概念。对很多从软件工程师转来的初级硬件设计工程师来说，时钟概念都是一件恼人的事情。"}
{"publishtime": "2017/12/16··", "title": "面试软件工程师，这些准备工作你做了吗？", "desc": "作为一名软件工程师，能否通过技术面试对于自己的职业发展至关重要，但是求职者往往很难知道具体怎样去为面试做准备。因为不同的软件公司采用不同的方式对工程师进行评估，而在这种压力很大、同时又很重要的场合，毫无防备的前去面试似乎是最糟糕的一种状态。"}
{"publishtime": "2017/12/26·", "title": "软件开发工作的第一现场", "desc": "技术领导者重音在“领导”，而不在“技术”。尤其在Tech@Core的今天，技术就是业务。优秀的技术领导者更不能把自己变成一个救火队员，只是被动的响应，尽管救火队员常常因为很容易被人看到而获得一些关注和赞扬，但在中国的文化里，我们都知道还有更高一层的境界。"}
{"publishtime": "2017/12/16·", "title": "什么是僵尸进程，如何找到并杀掉僵尸进程？", "desc": "如果你经常使用 Linux，你应该遇到这个术语“僵尸进程”。 那么什么是僵尸进程？ 它们是怎么产生的？ 它们是否对系统有害？ 我要怎样杀掉这些进程？ 下面将会回答这些问题。 "}
{"publishtime": "", "title": "未知", "desc": "暂无简介"}
{"publishtime": "2017/12/14·", "title": "7 个使用 bcc/BPF 的性能分析神器", "desc": "在 Linux 中出现的一种新技术能够为系统管理员和开发者提供大量用于性能分析和故障排除的新工具和仪表盘。它被称为增强的伯克利数据包过滤器（eBPF，或 BPF），虽然这些改进并不是由伯克利开发的，而且它们不仅仅是处理数据包，更多的是过滤。我将讨论在 Fedora 和 Red Hat Linux 发行版中使用 BPF 的一种方法，并在 Fedora 26 上演示。"}
{"publishtime": "2017/12/14··", "title": "客户想要的 vs 客户实际预算：漫画解读软件开发模式 ​​​​", "desc": "解析一张长漫画，带你了解软件开发模式的变迁史。不多说了，快上车来看~"}
{"publishtime": "2017/12/14·", "title": "谈谈 MySQL 隐式类型转换", "desc": "今天我们继续回到 MySQL 系列文章中，谈一谈 MySQL 中隐式类型转换。"}
{"publishtime": "2017/12/13·", "title": "MySQL 引擎特性：InnoDB崩溃恢复", "desc": "数据库系统与文件系统最大的区别在于数据库能保证操作的原子性，一个操作要么不做要么都做，即使在数据库宕机的情况下，也不会出现操作一半的情况，这个就需要数据库的日志和一套完善的崩溃恢复机制来保证。本文仔细剖析了InnoDB的崩溃恢复流程，代码基于5.6分支。"}
{"publishtime": "2017/12/11··", "title": "越做越复杂的软件工程项目", "desc": "什么都不缺就缺程序员的人招了程序员来做改变世界的 app，即使极度克制“不乱加功能”，也还是越做越复杂。看上去很理所当然的功能实际做下去就会发现事情没那么简单。"}
{"publishtime": "2017/12/13·", "title": "MySQL 引擎特性：InnoDB Buffer Pool", "desc": "本文主要分析MySQL Buffer Pool的相关技术以及实现原理，源码基于阿里云RDS MySQL 5.6分支，其中部分特性已经开源到AliSQL。"}
{"publishtime": "2017/12/11··", "title": "技术面试中的精英主义", "desc": "技术面试有很多比较深入的 CS 问题，对每个面试官来说，他们也都有自己最喜欢提的问题。但是对于招聘及面试，相比于以上那些问题，更重要的是要针对这个岗位需要什么样的人，而不是一味为难求职者，就算想问一些比较难的 CS 问题，也要有提出的理由。"}
{"publishtime": "2017/12/12·", "title": "MySQL 引擎特性：InnoDB IO 子系统", "desc": "InnoDB做为一款成熟的跨平台数据库引擎，其实现了一套高效易用的IO接口，包括同步异步IO，IO合并等。本文简单介绍一下其内部实现，主要的代码集中在os0file.cc这个文件中。"}
{"publishtime": "2017/12/10··", "title": "ls 命令的 20 个实用范例", "desc": "Linux中一个基本命令是ls。没有这个命令，我们会在浏览目录条目时会遇到困难。这个命令必须被每个学习Linux的人知道。"}
{"publishtime": "2017/12/12··", "title": "Linux 中命令链接操作符的十个最佳实例", "desc": "Linux中的链接命令，有些像你在shell中写短小的shell脚本，并直接在终端中执行。"}
{"publishtime": "2017/12/09·", "title": "如何在 Linux 下统计高速网络中的流量", "desc": "在Linux中有很多的流量监控工具，它们可以监控、分类网络流量，以花哨的图形用户界面提供实时流量分析报告。"}
{"publishtime": "2017/12/12·", "title": "MySQL 引擎特性：InnoDB 同步机制", "desc": "现代操作系统以及硬件基本都支持并发程序，而在并发程序设计中，各个进程或者线程需要对公共变量的访问加以制约，此外，不同的进程或者线程需要协同工作以完成特征的任务，这就需要一套完善的同步机制，在Linux内核中有相应的技术实现，包括原子操作，信号量，互斥锁，自旋锁，读写锁等。InnoDB考虑到效率和监控两方面的原因，实现了一套独有的同步机制，提供给其他模块调用。"}
{"publishtime": "2017/12/09··", "title": "谈谈程序员的离职和跳槽", "desc": "有一位员工提出离职，在思索了几天后，我整理了思路，有了这篇文章。"}
{"publishtime": "2017/12/11·", "title": "有了数据，需要一些思路。应该从哪开始做数据分析？", "desc": "进行数据分析，最难的往往是第一步。 有了数据之后，我们需要一些思路。那应该从哪里开始？"}
{"publishtime": "2017/12/09··", "title": "提升网站访问速度的 SQL 查询优化技巧", "desc": "在这篇文章中，我将介绍如何识别导致性能出现问题的查询，如何找出它们的问题所在，以及快速修复这些问题和其他加快查询速度的方法。我会把门户网站 deliciousbrains.com 出现的拖慢查询速度的情况作为实际的案例。"}
{"publishtime": "", "title": "未知", "desc": "暂无简介"}
{"publishtime": "2017/12/07··", "title": "他们是优秀的前端，所以这些后端工作也交给他们…", "desc": "我多次听经理或招聘人员说，优秀工程师是可以与其他优秀工程师交换的。他们可能会说，“首席工程师为这个项目选择了 F# 语言，如果外面没有太多的 F# 开发者，那么有几年经验的优秀开发者应该也还不错。”"}
{"publishtime": "2017/12/07··", "title": "分布式、服务化的 ERP 系统架构设计", "desc": "ERP系统并发量不高，主要是业务复杂，各种业务耦合度远高于那些互联网应用，不好做拆分，数据查询逻辑要远比互联网系统复杂，一个列表页查询出来的数据，往往需要关联4、5张表才能得到结果。"}
{"publishtime": "2017/12/06··", "title": "如何判断 Linux 服务器是否被入侵？", "desc": "大多数被攻破的服务器都是被类似自动攻击程序这样的程序或者类似“脚本小子”这样的廉价攻击者，以及蠢蛋罪犯所入侵的。这类攻击者会在访问服务器的同时滥用服务器资源，并且不怎么会采取措施来隐藏他们正在做的事情。 "}
{"publishtime": "2017/12/06·", "title": "如何自动唤醒和关闭 Linux", "desc": "不要成为一个电能浪费者。如果你的电脑不需要开机就请把它们关机。出于方便和计算机宅的考虑，你可以通过配置你的 Linux 计算机实现自动唤醒和关闭。 "}
{"publishtime": "2017/12/06·", "title": "如何在 Linux 系统中通过用户组来管理用户", "desc": "本教程可以了解如何通过用户组和访问控制表（ACL）来管理用户。 "}
{"publishtime": "2017/12/06··", "title": "MySQL 性能调优技巧", "desc": "针对购物旺季网站流量会对数据库造成的压力，作者给出了MySQL性能调优的一些技巧，这些技巧极具参考价值，通过这些调优，可以有效避免因为流量过大造成服务器宕机，从而给企业造成经济损失。"}
{"publishtime": "2017/12/05··", "title": "浅谈软件项目规模估计——怎么估？", "desc": "软件项目规模估计过程中会遇到哪些问题？对应的解决方案又是哪些？"}
{"publishtime": "2017/12/05··", "title": "如果你还不了解机器学习的简史，请看这篇文章", "desc": "全面介绍机器学习的发展史，从感知机、神经网络、决策树、SVM、Adaboost到随机森林、Deep Learning"}
{"publishtime": "2017/12/05··", "title": "我们逃离北上广，美国人逃离硅谷", "desc": "硅谷长期以来一直被看作是科技与创新的理想场所，硅谷也汇聚了各个领域的高、精、尖人才和企业家。但随着共享知识时代的发展，世界各地科技领域都有了不同程度的发展，硅谷的唯一地位也有所改变"}
{"publishtime": "2017/12/04··", "title": "Go 的这十年！Go 语言之父等人回顾", "desc": "Go 语言的主要缔造者 Rob Pike、Robert Griesemer 与 Ken Thompson，他们三人撰文回顾 Go 的发展史与一些重要人物，并曝光促成 Go 诞生的相关邮件的片段"}
{"publishtime": "2017/11/22·", "title": "Linux shell 中的那些小把戏", "desc": "我日常使用Linux shell(Bash)，但是我经常忘记一些有用的命令或者shell技巧。是的，我能记住一些命令，但是肯定不会只在特定的任务上使用一次，所以我就开始在我的Dropbox账号里用文本文件写下这些Linux shell的小技巧，现在我决定共享它给你。"}
{"publishtime": "2017/12/05·", "title": "多线程编程基础知识", "desc": "对复杂的应用程序来说，线程的应用给应用程序提供了高效、快速、安全的数据处理能力。本实例讲述了线程处理中经常遇到的问题，希望对读者朋友有一定的帮助，起到抛砖引玉的作用。"}
{"publishtime": "2017/12/04·", "title": "成熟开发者的“元品质”", "desc": "除了那些通用的开发者品质，是不是可能还存在一些品质，可以让我们的开发者快速地成熟起来？除了要对新技术和趋势保持敏感，对工具和语言保持兴趣并熟练掌握，趁着年轻一年又一年挥洒不尽的精力和时间之外，还有没有一些品质存在，是年轻的开发者可借以成熟的路径，或者可供参考的方向？"}
{"publishtime": "2017/11/22·", "title": "MySQL Binlog 事件介绍篇", "desc": "上一篇文件MySql Binlog初识，对Binlog的参数，格式以及个别事件做了详细介绍，但是Binlog事件数量比较多，上篇文章中没有对所有事件进行介绍；本文将对Binlog的事件进行简单说明，必要的时候通过SQL触发相关的事件，以下基于Mysql5.5，5.0以前的版本不考虑。"}
{"publishtime": "2017/12/05·", "title": "机器学习之Logistic回归算法", "desc": "本文介绍机器学习中的Logistic回归算法，我们使用这个算法来给数据进行分类。Logistic回归算法同样是需要通过样本空间学习的监督学习算法，并且适用于数值型和标称型数据。"}
{"publishtime": "2017/11/30··", "title": "如何轻松记住 Linux 命令", "desc": "Linux 新手往往对命令行心存畏惧。部分原因是因为需要记忆大量的命令，毕竟掌握命令是高效使用命令行的前提。不幸的是，学习这些命令并无捷径，然而在你开始学习命令之初，有些工具还是可以帮到你的。 "}
{"publishtime": "2017/11/21··", "title": "Linux 内核学习经验总结", "desc": "学习内核，每个人都有自己的学习方法，仁者见仁智者见智。以下是我在学习过程中总结出来的东西，对自身来说，我认为比较有效率，拿出来跟大家交流一下。​"}
{"publishtime": "2017/12/05··", "title": "大道至简，职场上做人做事做管理", "desc": "大道至简，越是根源和基本的问题，道理实际上越简单。关于如何做人、做事、做管理的书很多，我看得不多，但是我觉得这些书更多是侧重技术和实现细节上的，而很少从人的思想和观念去讲。"}
{"publishtime": "2017/11/30··", "title": "自动化来势汹汹，未来的程序员该何去何从？", "desc": "不管你是属于哪一类的程序员，从事技术行业意味着终生都要继续教育。"}
{"publishtime": "2017/11/20··", "title": "MySql Binlog 初识", "desc": "在一般稍微重要一点的实际应用场景中，都至少需要打开二进制日志，因为这是MySQL很多存储引擎进行增量备份的基础，也是MySQL实现复制的基本条件。"}
{"publishtime": "2017/12/04··", "title": "Linux 上的科学图像处理", "desc": "在显示你的数据和工作方面我发现了几个科学软件，但是我不会涉及太多方面。因此在这篇文章中，我将谈到一款叫 ImageJ 的热门图像处理软件。特别的，我会介绍 Fiji，这是一款绑定了一系列用于科学图像处理插件的 ImageJ 软件。"}
{"publishtime": "2017/11/29··", "title": "写会 MySQL 索引", "desc": "索引是为来加速对表中数据行中的检索而创建的一种分散的数据结果，时针对表而建立的，它是由数据页面以外的索引页面组成，每个索引页中的行都含有逻辑指针，以便加速检索物理数据"}
{"publishtime": "2017/11/20·", "title": "合并请求的 10 个常见问题及建议", "desc": "我参加过很多 GitHub 托管的项目，不管是个人的、开源的还是合约的。有时候用免费的 GitHub，其他时候用 GitHub 企业版。但有一件事是一样的：提交合并请求（Pull Request）很容易的，但审查好 PR 真的很难。"}
{"publishtime": "2017/12/04··", "title": "Google Brain 推荐算法，给了 Youtube 新生", "desc": "YouTube 整合 Google Brain 推荐算法，视频播放量提升 20 倍。"}
{"publishtime": "2017/11/29·", "title": "我问每个面试官的两个问题，把工程流程用到软件面试", "desc": "我最近一直在进行软件工程师面试。面试开始时，我都会问面试官两个问题，但至今没有得到令我满意的回答……"}
{"publishtime": "2017/11/19··", "title": "程序员如何成为编程高手，并以此创业", "desc": "每个IT企业，尤其是初创企业，非常苦恼：找不到好的程序员。现在大学、软件学院及各种培训机构，每年培养几十万的程序员，毕业的每个人都有同样困恼：找不到好的工作。问题出在哪里呢？"}
{"publishtime": "", "title": "未知", "desc": "暂无简介"}
{"publishtime": "2017/11/29·", "title": "MySQL SQL 优化之覆盖索引", "desc": "利用索引提升SQL的查询效率是我们经常使用的一个技巧，但是有些时候MySQL给出的执行计划却完全出乎我们的意料，我们预想MySQL会通过索引扫描完成查询，但是MySQL给出的执行计划却是通过全表扫描完成查询的，其中的某些场景我们可以利用覆盖索引进行优化。"}
{"publishtime": "2017/11/18··", "title": "漫画：80 端口争夺战", "desc": "嗨，大家好，今天我们来聊聊 80 端口之战。著名的技术漫画站 turnoff.us 有这样的一副漫画，生动的描绘了固守 80 端口的 Apache 和新生代的 Nginx 之间的战争。 "}
{"publishtime": "2017/11/29··", "title": "硬盘又坏了？硬盘数据恢复的神器有这些", "desc": "在一切工作进行之前，请先判断硬盘是否有损坏，以及缺损类型，而往往硬盘出现问题主要集中下以下两个方面：物理（驱动器故障或者组件故障）；逻辑（文件系统出错或是数据损坏）。"}
{"publishtime": "2017/11/17·", "title": "MySQL 5.7 MGR 集群搭建", "desc": "最近看了一下 MySQL 5.7 的 MGR 集群挺不错的，有单主和多主模式，于是乎搭建测试了一下效果还不错，我指的不错是搭建和维护方面都比较简单。"}
{"publishtime": "2017/11/28··", "title": "如何处理前任程序员留下的代码", "desc": "身为一个软件工程师，我们不可避免的会遇到这样一些问题：不得不修改别人的代码，或者在别人的代码中添加新的功能。"}
{"publishtime": "2017/11/16·", "title": "接到一个需求，想在页面上加一个链接", "desc": "需求：我希望在页面上的这个位置放一个链接。"}
{"publishtime": "2017/11/28··", "title": "成为 Linux 终端高手的七种武器", "desc": "Linux 终端不仅是一个键入命令的地方。如若你能熟谙这些基础技巧，那么你会在绝大多数 Linux 发行版的默认使用的 Bash shell中游刃有余。"}
{"publishtime": "2017/11/15··", "title": "修复每个 bug 后都要问这 3 个问题", "desc": "你是否曾经修复了一个 bug ，随后又发现了一个跟刚修复 bug 有关的 bug ，又或是修复 bug 的方式引起了另一个 bug ？当我修改 bug 时，我会问自己三个问题，以确保我已经仔细考虑了它的意义。每次你认为发现并修改了一个 bug 时，可以使用这些问题来提高生产力和代码质量。"}
{"publishtime": "2017/10/17··", "title": "如何在工作之余找精力做副项目？", "desc": "常看到那些在兼职创业的人。他们花一整天的时间做专职工作，然后赶回家中投入到另一个项目中。他们的创业雄心被挤压到夜晚那仅剩的一点点时间里，往往通过减少睡眠来做更多的工作。"}
{"publishtime": "2017/11/28··", "title": "为什么我讨厌开放式办公？", "desc": "在我最近这份工作中，最好的作品都是在家完成的。我会尽可能避免在办公室工作。在家里，我拥有两张桌子和工作环境的完全控制权。无论是分心还是休息，都是我自己的选择，而不取决于外部因素。"}
{"publishtime": "2017/11/15··", "title": "2017 最优秀的十大 Linux 服务器发行版", "desc": "Linux 是自由和开源的，与其他操作系统相比，这也是使用 Linux 系统整体上成本较低的部分原因。尽管 Linux 操作系统在桌面上的表现不尽如人意，但作为运行在全球数据中心的服务器、大型计算机和超级计算机上的操作系统，它的表现令其他很多对手不能望其项背。"}
{"publishtime": "2017/10/17··", "title": "人工智能创业，你需要知道的 6 大核心问题", "desc": "跟大家聊聊人工智能领域的创业和创新，包括如何选择赛道、团队的搭配、以及如何应对巨头的挑战。从投资人的视角，给大家总结了人工智能创业的6大核心问题。"}
{"publishtime": "2017/11/27·", "title": "Linux 容器 vs 虚拟机 —— 谁更胜一筹", "desc": "自从Linux上的容器变得流行以来，了解Linux容器和虚拟机之间的区别变得更加棘手。本文将向您提供详细信息，以了解Linux容器和虚拟机之间的差异。 "}
{"publishtime": "2017/11/14·", "title": "读懂 MySQL 执行计划", "desc": "在之前的面试过程中,问到执行计划,有很多童鞋不知道是什么?甚至将执行计划与执行时间认为是同一个概念。今天我们就一起来了解一下执行计划到底是什么。"}
{"publishtime": "2017/10/17·", "title": "若你要开源自己的代码，此文带你了解开源协议", "desc": "许多开发者对开源许可证了解很少，不清楚有哪些许可证，应该怎么选择。本文介绍开源许可证的基本知识"}
{"publishtime": "2017/11/27·", "title": "5 款最酷的 Linux 终端模拟器", "desc": "虽然，我们可以继续使用老旧的 GNOME 终端、Konsole，以及好笑而孱弱的旧式 xterm。 不过，让我们带着尝试某种新东西的心境，回过头来看看 5 款酷炫并且实用的 Linux 终端。 "}
{"publishtime": "2017/11/13··", "title": "QA 请勿忘初心", "desc": "大部分人关注点都离不开自动化测试，面试的 QA 也说想到 ThoughtWorks 来学习高深的自动化测试，仿佛自动化测试代表了整个 QA 界，我反对盲目的自动化测试，确切的说反对盲目的 UI 自动化测试。很多 QA 在自动化测试海洋里迷失了自己。"}
{"publishtime": "2017/10/16··", "title": "GitHub 的 MySQL 基础架构自动化测试", "desc": "我们建有基础架构来自动化测试这些操作，在这篇文章中，我们将分享几个例子，来说明我们是如何通过持续测试打造我们的基础架构的。这是让我们一梦到天亮的根本保障。 "}
{"publishtime": "2017/11/27··", "title": "浅谈微服务基建的逻辑", "desc": "这篇文章主要目的是面向初接触微服务的朋友简单介绍微服务基础建设所需要的各个模块以及缘由。"}
{"publishtime": "2017/11/13··", "title": "30 个实例详解 TOP 命令", "desc": "Linux中的top命令显示系统上正在运行的进程。它是系统管理员最重要的工具之一。被广泛用于监视服务器的负载。在本篇中，我们会探索top命令的细节。"}
{"publishtime": "2017/10/16··", "title": "RESTful API 设计最佳实践", "desc": "项目资源的URL应该如何设计？用名词复数还是用名词单数？一个资源需要多少个URL？用哪种HTTP方法来创建一个新的资源？可选参数应该放在哪里？那些不涉及资源操作的URL呢？实现分页和版本控制的最好方法是什么？因为有太多的疑问，设计RESTful API变得很棘手。在这篇文章中，我们来看一下RESTful API设计，并给出一个最佳实践方案。"}
{"publishtime": "2017/11/27·", "title": "数据库 schema 迁移数据最佳实践", "desc": "工程团队常面临一项共同挑战：重新设计数据模型以支持清晰准确的抽象和更复杂的功能。这意味着，在生产环境中，需要迁移数以百万计的活跃数据对象，并且重构上千行代码。"}
{"publishtime": "2017/11/10··", "title": "10 个鲜为人知的 Linux 命令（5）", "desc": "在前四篇 鲜为人知的Linux命令 系列文章受到高度赞赏之后，我们将为广大读者呈上此系列的最后一篇文章，虽然是最后一篇，但是其重要性毫不逊于前几篇。"}
{"publishtime": "2017/10/16·", "title": "如何在一个 U 盘上安装多个 Linux 发行版", "desc": "本教程介绍如何在一个 U 盘上安装多个 Linux 发行版。这样，你可以在单个 U 盘上享受多个现场版Linux 发行版了。 "}
{"publishtime": "2017/11/27·", "title": "刚收到了Facebook的Offer，我是这样为面试做准备的", "desc": "我刚刚在硅谷的科技公司完成了 7 次现场面试，我收到了来自 Facebook 的软件工程师的职位 Offer。下面分享一下我是怎么为面试做准备的，以及我在这个过程中学到的东西。"}
{"publishtime": "2017/11/09··", "title": "不懂技术的管理者，给你们扫盲软件开发的基本常识", "desc": "如果你有不会写代码却要管理程序员的领导或上级，那本文就是要给他们扫盲软件开发的基本常识。比如：为何软件开发工期难以估计、为何开发速度那么慢、为何程序员要“浪费”时间写测试以及做代码审查（Code Review）？"}
{"publishtime": "2017/10/13·", "title": "用 Linux、Python 和树莓派酿制啤酒", "desc": "容量提升到 10 加仑之后，我偶然看到了 StrangeBrew Elsinore ，我意识到我真正需要的是将整个酿酒过程转换成全电子化的，用树莓派来运行它。 "}
{"publishtime": "2017/11/25··", "title": "数据库新动向 Oracle 与微软割据局面产生", "desc": "数据库是一个历久弥新的领域，每年有很多新的黑马产生，但是整体局面却又看不出大的变化。究其原因可能是老牌厂商占据了主要市场，新伙伴的加入只能稍改部分局面，却无法撼动大的格局。"}
{"publishtime": "2017/11/09··", "title": "开发者死后，他的开源项目会有人继续维护吗？", "desc": "你可能从来没有听说已故的 Jim Weirich 或他开发的软件。但是你几乎肯定会使用过在他研究基础上开发出的各种应用程序。"}
{"publishtime": "2017/10/13··", "title": "为什么 SQL 正在击败 NoSQL，数据的未来是什么？", "desc": "经过多年的沉寂之后，今天的SQL正在复出。缘由如何？ 这对数据社区有什么影响？看看本文的分析。以下为译文。"}
{"publishtime": "2017/11/24··", "title": "Git 的 4 个阶段的撤销更改", "desc": "Git是一个分布式版本控制软件，最初由林纳斯·托瓦兹创作，于2005年以GPL发布。本文假设只使用主分支master的情况下如何进行回退操作。"}
{"publishtime": "2017/11/09··", "title": "10 个鲜为人知的 Linux 命令（4）", "desc": "继续我们的”鲜为人知”系列，本系列的第四篇会让你了解一些有趣又动态的命令。"}
{"publishtime": "2017/10/13·", "title": "微服务进展缓慢的 5 个难点", "desc": "这些年微服务大红大紫，但是真正能够拿出来做为可实践案例的少之又少。大部分的微服务案例只能看到微服务架构的“演进结果”，但是看不到其“演进过程”。这就像每个人可以看到一个架构的高峰，却看不到攀登高峰的路径。"}
{"publishtime": "2017/11/07··", "title": "几乎毁掉谷歌吃豆人涂鸦游戏的 bug", "desc": "2010 年 5 月 21 日吃豆人游戏 30 周年，Google 首页在上午 9 点上线了一个可交互的涂鸦游戏。几个小时内，这个游戏就让全世界都为之疯狂。不过涂鸦团队开始陆续收到一个诡异 Bug 的报告。"}
{"publishtime": "2017/11/24··", "title": "netstat 的 10 个基本用法", "desc": "Netstat 是一款命令行工具，可用于列出系统上所有的网络套接字连接情况，包括 tcp,udp 以及 unix 套接字，另外它还能列出处于监听状态（即等待接入请求）的套接字。"}
{"publishtime": "2017/10/13··", "title": "Hello, World！我的房车编程生活，已经 150 天了", "desc": "我的房车编程生活今天已经到了第 150 天。自今年 5 月离开柏林以来，我访问了 6 个国家，行程超过了 1.2 万公里，收集了 18 万瓦时太阳能，并沿途遇到了许多有趣的人。"}
{"publishtime": "2017/11/08·", "title": "分布式事务的一种实现方式--状态流转", "desc": "关于分布式事务，参考了网上提到的一些办法，比如利用消息队列实现分布式事务，补偿事务，TCC，最大努力送达，等等。这里给出自己的一些理解和实现。可以称之为状态流转的实现。"}
{"publishtime": "2017/11/07·", "title": "如何遏制 PostgreSQL WAL 的疯狂增长", "desc": "PostgreSQL在写入频繁的场景中，可能会产生大量的WAL日志，而且WAL日志量远远超过实际更新的数据量。 "}
{"publishtime": "2017/11/08·", "title": "10 个鲜为人知的 Linux 命令（3）", "desc": "我们继续10个鲜为人知Linux命令系列的第三部分。或许你已经知道了这些命令，那你无疑是一个有经验而喜欢探索的Linux用户。"}
{"publishtime": "2017/10/12··", "title": "我从编程写软件学到的 7 件事", "desc": "我正在一点一点从工程师转型为管理者。别弄错了，虽然我在转管理，但我每天仍然写代码。我在本文总结了多年的编程经验，并且希望能转化应用到管理领域上。 "}
{"publishtime": "2017/11/23·", "title": "历史上第一位从事游戏开发与设计的女程序员", "desc": "一直以来，女性软件开发人员数量稀少，尤其是在早期人们的刻板印象中，她们的工作能力、学历高低很容易其备受质疑的方面。实际上，家庭环境、学校教育、婚姻生活很大程度上影响了女性软件开发工作者的人生道路。对于她们而言，并非所有的人都能被历史所铭记，也并非所有的人都能在软件开发的道路上一帆风顺，但在这个被男性主宰的领域，她们所做的一切直到如今都依然令人动容。"}
{"publishtime": "", "title": "未知", "desc": "暂无简介"}
{"publishtime": "2017/10/11·", "title": "详解 MySQL 基准测试和 sysbench 工具", "desc": "作为一名后台开发，对数据库进行基准测试，以掌握数据库的性能情况是非常必要的。本文介绍了MySQL基准测试的基本概念，以及使用sysbench对MySQL进行基准测试的详细方法。"}
{"publishtime": "", "title": "未知", "desc": "暂无简介"}
{"publishtime": "2017/10/11·", "title": "八款值得尝试的精美的 Linux 发行版（2017 版）", "desc": "一些令 Linux 用户印象最深刻且精美的 Linux 发行版"}
{"publishtime": "2017/11/07··", "title": "2017 机器学习调查报告：Python 最火，R 极具潜力", "desc": "数据平台 Kaggle 近日发布了 2017 机器学习及数据科学调查报告，这也是 Kaggle 首次进行全行业调查。"}
{"publishtime": "2017/10/10··", "title": "Adobe 软件的最佳 Linux 替代品", "desc": "你是一名正在寻找 Adobe 的替代品的 Linux 用户吗？那你不是一个人。 "}
{"publishtime": "2017/11/07·", "title": "10 个鲜为人知的 Linux 命令（2）", "desc": "继续上篇文章11个鲜为人知的实用Linux命令，在本文中，我们将关注其他几个不为人知的Linux命令，有些在管理桌面和服务器方面被证明是非常有用的。"}
{"publishtime": "2017/10/09··", "title": "写代码容易，编程并不容易", "desc": "当我的编程生涯开始的时候，我认为“编程很简单……怎么会需要去学校学习呢？”但经过学习和实践，我了解到编程很难。"}
{"publishtime": "2017/11/06··", "title": "你有学习者综合征吗？Web 开发是重灾区", "desc": "学而不用，不停学习，却没有真正实际应用知识来做东西。如果过去的一年里，学习的语言或框架超过 3 个，那你可能已经感染学习者综合征了。"}
{"publishtime": "2017/10/09·", "title": "你懂 Linux 吗？关于 Linux 你可能不是非常了解的七件事", "desc": "使用 Linux 最酷的事情之一就是随着时间的推移，你可以不断获得新的知识。每天，你都可能会遇到一个新的实用工具，或者只是一个不太熟悉的奇技淫巧，但是却非常有用。"}
{"publishtime": "2017/11/06·,", "title": "23 个热门深度学习库的排名", "desc": "基于 Github 和 Stack Overflow 上的活跃度以及 Google 搜索结果，The Data Incubator 最近制作了一个 23 个热门深度学习库的排名。"}
{"publishtime": "2017/10/07··", "title": "Linux 中 grep 命令的 12 个实践例子", "desc": "你是否遇到过需要在文件中查找一个特定的字符串或者样式，但是不知道从哪儿开始？那么,就请grep来帮你吧。"}
{"publishtime": "2017/11/06·", "title": "11 个鲜为人知的 Linux 命令（1）", "desc": "Linux命令行吸引了大多数Linux爱好者。一个正常的Linux用户一般掌握大约50-60个命令来处理每日的任务。Linux命令和它们的转换对于Linux用户、Shell脚本程序员和管理员来说是最有价值的宝藏。有些Linux命令很少人知道 … "}
{"publishtime": "2017/10/03·", "title": "使用 ProxySQL 改进 MySQL SSL 的连接性能", "desc": "在这篇博文里，我们准备来看一下 ProxySQL 是如何提高 MySQL 的 SSL 连接性能的。"}
{"publishtime": "2017/11/03··", "title": "解雇了天才员工，这是我们做过最正确的决定", "desc": "这个故事关于我们一名天才团队成员的陨落，他对我们的产品架构有深入理解，有预测未来需求的不可思议的能力，有大量专业领域知识积累。"}
{"publishtime": "2017/09/30··", "title": "机器学习实践指南", "desc": "在今天的文档中，我会列出 7 个步骤（和 50 多个资源）帮助你开启这个令人兴奋的计算机科学领域的大门，并逐渐成为一个机器学习高手。 "}
{"publishtime": "2017/10/30·,·", "title": "我如何在 17 天里得到 70 份面试", "desc": "搜索目标雇主，自动海投简历，看看这位工程师是如何拿 offer 的。"}
{"publishtime": "2017/09/30·", "title": "初创企业开源许可证管理九大法则", "desc": "开源软件虽然可以免费使用，但就如同饲养一条幼犬一样（开始虽然花钱不多，后边越养越费钱）。在采用开源之前，确保能够了解其隐藏的成本和陷阱。 "}
{"publishtime": "2017/09/30··", "title": "不要浪费时间写完美的代码", "desc": "系统可以持续运行 5 年、10 年甚至 20 年或者更多年。但是，特定的代码行的生命，即使是经过设计，通常要短得多：当你通过各种方式来迭代寻求解决方案时，它会有几个月、几天甚至几分钟的生命。 "}
{"publishtime": "2017/10/30··", "title": "IT 工程师的自我管理", "desc": "管理项目或公司和管理生活有很多共通之处。有些人天生做的很好，但是像我这种普通人则不然。庆幸的是，我们依然能找到一些可行的方法和工具来做的像他们一样，在这篇文章中，我会尝试把公司项目管理的各种方法应用到个人生活中，我划分了不同的小节（收集反馈、决策、时间和任务管理、情绪管理）来阐述这些问题和解决方案，在每个小节的结尾，也会附上我使用过或者推荐的一些工具。"}
{"publishtime": "", "title": "未知", "desc": "暂无简介"}
{"publishtime": "2017/09/27·", "title": "都100%代码覆盖了，还会有什么问题？", "desc": "100% 的代码覆盖率不等于 100% 的测试。"}
{"publishtime": "2017/10/30·", "title": "Quora 是如何做持续部署的？工程师如是说", "desc": "Quora 是国外知名的问答网站，曾经在 12 小时内发布了 46 次新版本。不过这对于 Quora 工程师来说，只是普通的一天。他们执行非常快的持续部署周期，代码变动提交后就直接推送到线上。 他们是如何做到的呢？"}
{"publishtime": "2017/09/27·", "title": "从 UNIX 到 GitHub：十个关于自由和开源软件历史的重要事件", "desc": "本文记录了自由和开源历史上的一些重要时刻，也称得上是 FOSS 历史上的大事件。从 UNIX 的全盛时期，到 GNU 和 Linux 的诞生，再到 GitHub 将开源“民主化”，以及在它们之间的一切。"}
{"publishtime": "2017/10/30··", "title": "2017 年最受欢迎的 11 个编程挑战网站", "desc": "如果你想不断地提高自己的编程技能，那么不断尝试去解决那些编程中的难题，这是一个非常不错的途径。作者在本篇文章中列举出了10个编程挑战网站，你想尝试一下吗？"}
{"publishtime": "2017/09/26··", "title": "区块链原理最清晰最直观的解释", "desc": "区块链是怎么回事？做一个应用带你了解"}
{"publishtime": "2017/10/30··", "title": "图解机器学习", "desc": "每当提到机器学习，大家总是被其中的各种各样的算法和方法搞晕，觉得无从下手。确实，机器学习的各种套路确实不少，但是如果掌握了正确的路径和方法，其实还是有迹可循的。"}
{"publishtime": "2017/09/26··", "title": "如何读懂火焰图？", "desc": "火焰图（flame graph）是性能分析的利器。本文介绍它的基本用法。"}
{"publishtime": "2017/10/29·", "title": "如何应对开源软件的版权牟利者？ 开源律师说这样做！", "desc": "Linux 社区的许多开发人员对 GPL 许可证牟利者 Patrick McHardy 的行为表示担忧，美国资深开源律师对一些常见问题进行解答，并对如何应对版权牟利行为提出了建议。 "}
{"publishtime": "2017/09/25·", "title": "常用 GDB 命令中文速览", "desc": "本文整理自《Debugging with GDB: the GNU Source-Level Debugger》 "}
{"publishtime": "2017/10/28··", "title": "Facebook 是如何做大规模代码部署的", "desc": "Facebook 高速发展期是从 2007 年到 2016 年，他们一天部署 3 次代码，cherry-pick 集齐成千上万个 commit。现在用类似持续交付的方法，每个 commit 能自动部署到生产环境。"}
{"publishtime": "2017/09/25··", "title": "为什么招不到最好的程序员？SO 创始人有些建议", "desc": "「永远只招最优秀的人。无论公司规模多大，永远不要在你的招聘标准上妥协。」"}
{"publishtime": "2017/10/24·", "title": "从银行转账失败到分布式事务：总结与思考", "desc": "思考这个问题的初衷，是有一次给朋友转账，结果我的钱被扣了，朋友没收到钱。而我之前一直认为银行转账一定是由事务保证强一致性的，于是学习、总结了一下分布式事务的各种理论、方法。"}
{"publishtime": "2017/09/25·", "title": "2017 全栈开发人员修炼指南", "desc": "本篇文章中，我不会谈论哪种网站或者编程训练营有最好的网络开发程序。而是给从未学习过编程的你，提供一个明确的指引，包括如何成为全栈网络开发人员最必不可少的技能以及如何找到工作。"}
{"publishtime": "2017/10/24··", "title": "BFPRT 算法（TOP-K问题）", "desc": "在一堆数中求其前k大或前k小的问题，简称TOP-K问题。"}
{"publishtime": "2017/09/22·", "title": "di：比 df 更有用的磁盘信息工具", "desc": "尽管df是一个受欢迎的命令，但仍然不能提供一些高级的功能，如一个用户实际的磁盘可用空间，以及各种有用的显示格式等。还有另一个命令行实用工具可用，不仅提供了这些高级功能也提供了df的所有特性。在本文中,我们将讨论磁盘信息工具 — di"}
{"publishtime": "2017/10/20··", "title": "如何让网站不下线而从 Redis 2 迁移到 Redis 3", "desc": "我们最近着手升级 Redis 服务器，此升级旨在使用 Redis 3.2 提供的原生集群功能。这篇博客希望解释为什么我们要使用集群、我们遇到的问题以及我们的解决方案。 "}
{"publishtime": "2017/09/22·", "title": "比尔·盖茨评审产品时说 F**k 最少的一次", "desc": "在我 BillG 评审的会议上，我的汇报层都到场了，他们还带着一堆我怀疑是表兄表妹姑婶的人。还有一个我团队里的人，他负责准确记录 Bill 整场爆了几次粗口。Bill 说 Fxxx 的次数越少，review 结果越好。"}
{"publishtime": "2017/10/19··", "title": "为什么我最喜欢的编程语言是 Go", "desc": "我力图尊重每个人的喜好，因此我通常会避开相关争论：哪种编程语言、文本编辑器或操作系统才是最好的。然而，我最近很多次被问到为什么我喜欢并且大量使用 Go，所以写下这篇文章。"}
{"publishtime": "2017/09/21·", "title": "没有报酬，有多少开源项目维护者能坚持？", "desc": "作者是 Mozilla 的工程师。文章讨论了开源项目的两种角色 starters（发起人）与 maintainers（维护者）。没有报酬的情况下，有多少开源项目的维护者能持之以恒？"}
{"publishtime": "2017/10/19··", "title": "如何让 Vim 成为我们的神器", "desc": "Vim 是一个上古神器，本篇文章主要持续总结使用 Vim 的过程中不得不了解的一些指令和注意事项，以及持续分享一个前端工作者不得不安装的一些插件，而关于 Vim 的简介，主题的选择，以及为何使用 vim-plug 来管理插件等内容，有兴趣的同学下来可以自己了解和对比下。"}
{"publishtime": "2017/09/20··", "title": "每周 70+ 小时，吴恩达的招人要求之一", "desc": "吴恩达离开百度后新创了自己的公司。近日吴恩达在 Twitter 发推招兵买马，有人发现其官网的招软件工程师要求中有这样的措词：「我们希望你能很好适应我们的团队文化…… 我们中许多人每周工作和学习 70 个小时以上」，然后这消息炸开锅了……"}
{"publishtime": "2017/09/14··", "title": "惊叹！这个盲人程序员是这样写代码的", "desc": "我认为你第一次看到我的工作间肯定这样想 —— “总感觉少些什么”。没有显示器和鼠标，却有个人敲打着键盘，不知注视着哪里。这就是我，我同事可以证明我没问题。我是位于坦佩雷（芬兰西南部一座城市）的 Vincit 写字楼中的一名软件开发者。我双目失明。"}
{"publishtime": "", "title": "未知", "desc": "暂无简介"}
{"publishtime": "2017/09/19··", "title": "微博爬虫“免登录”技巧详解及 Java 实现", "desc": "目前，对于微博的爬虫，大部分是基于模拟微博账号登录的方式实现的，这种方式如果真的运营起来，实际上是一件非常头疼痛苦的事，你可能每天都过得提心吊胆，生怕新浪爸爸把你的那些账号给封了，而且现在随着实名制的落地，获得账号的渠道估计也会变得越来越少。"}
{"publishtime": "2017/09/14·", "title": "漫谈传统的 Linux 初始化系统的运行级别", "desc": "了解运行级别是如何配置的，如何改变系统运行级别以及修改对应状态下运行的服务。 "}
{"publishtime": "2017/09/19·,·", "title": "自上而下，逐步揭开 PHP 解析大整数的面纱", "desc": "浮点数精度丢失是一个长久的问题，PHP中精度丢失并不是PHP的bug，是计算机表示范围导致的问题。"}
{"publishtime": "2017/09/14·", "title": "HttpClient 获取 Cookie 的一次踩坑实录", "desc": "在使用 HttpClient 进行抓取一些网页的时候，经常会保留从服务器端发回的 Cookie 信息，以便发起其他需要这些 Cookie 的请求。但是也有一些网站返回的 cookie 并不一定完全符合规范…"}
{"publishtime": "2017/09/19··", "title": "Linux 大爆炸：一个内核，无数发行版", "desc": "即使你是一个 Linux 新人，你可能也已经知道它不是一个单一的、整体的操作系统，而是一群项目。这个星座中不同的“星”组成了“发行版”。每个都提供了自己的 Linux 模式。 "}
{"publishtime": "2017/09/12·", "title": "数据异构的武器-BINLOG+MQ", "desc": "分库分表中有一个最为常见的场景，为了提升数据库的查询能力，我们都会对数据库做分库分表操作。比如订单库，开始的时候我们是按照订单ID维度去分库分表，那么后来的业务需求想按照商家维度去查询，比如我想查询某一个商家下的所有订单，就非常麻烦。这个时候通过数据异构就能很好的解决此问题。"}
{"publishtime": "2017/09/18··", "title": "React 许可证的五宗罪", "desc": "Facebook 公司的 BSD+专利许可证失败的原因不是因为许可证本身，而是因为它忽略了开源软件更深层次的本质。 "}
{"publishtime": "2017/09/12·", "title": "为提高用户体验，Yelp 是如何无损压缩图片的", "desc": "Yelp 有一亿张用户上传的图片，经过一系列手段进行压缩后，平均缩小了30%，节省了存储空间与带宽，这为公司省钱，让客户端加载图片更快，用户体验更好。"}
{"publishtime": "2017/09/16··", "title": "为什么 Python 增长如此之快？", "desc": "根据 Stack Overflow 最近公布的报告，基于 SO 上不同问题帖的访问量统计，Python 可以说是增长最快的主流编程语言。Python 也是高收入国家访客最爱浏览的标签。"}
{"publishtime": "2017/09/11·,·", "title": "C# 最佳工具集合： IDE 、分析、自动化工具等", "desc": "C#是企业中广泛使用的编程语言，特别是那些依赖微软的程序语言。如果您使用C#构建应用程序，则最有可能使用Visual Studio，并且已经寻找了一些扩展来对您的开发进行管理。但是，这个工具列表可能会改变您编写C#代码的方式。"}
{"publishtime": "2017/09/15·", "title": "Linux 26 周年，来一场怀旧之旅", "desc": "通过安装 SLS 1.05 展示了 Linux 内核在这 26 年间走过了多远。 "}
{"publishtime": "2017/09/11·", "title": "MySQL 8.0.3 RC 版即将发布，看看有哪些变化", "desc": "MySQL 8.0.3 即将发布，一起看看有什么新变化吧 MySQL 8.0.3 即将发布 RC 版本，这预示着 8.0 版本离 GA 越来越近了。"}
{"publishtime": "2017/09/15·", "title": "每个程序员都该知道的五大定律", "desc": "定律-或称法则，可以指导我们并让我们在同伴的错误中学习。这篇文章中，我将介绍我每次设计或实现软件时出现在我脑海的五大定律。其中有些和开发有关，有些和系统组织有关。它们可以帮助你成为合格的软件工程师。"}
{"publishtime": "2017/09/10··", "title": "技术面试中常被问到是否参与开源，那如何清晰展示 GitHub 项目呢？", "desc": "你面试的公司找你要 GitHub 链接，猎头找你要 GitHub 链接。“你参与过开源项目么？”是目前 IT 技术面试中的常见问题之一。"}
{"publishtime": "2017/09/14·", "title": "MySQL 索引设计概要", "desc": "本文会介绍 数据库索引设计与优化 中设计索引的一些方法，让各位读者能够快速的在现有的工程中设计出合适的索引。"}
{"publishtime": "2017/09/08··", "title": "100:10:1方法 : 我是这样参与开源的", "desc": "许多年里我一直全心投入于开源运动，不过那时候我很少在空闲时写代码，在 Sourceforge、GoogleCode、GitHub 之类的代码托管平台，也找不到我的项目（repo）。然而随着时间流逝，我逐渐意识到向全球公开代码的责任，毫不夸张的说，这吸引住了我。"}
{"publishtime": "", "title": "未知", "desc": "暂无简介"}
{"publishtime": "2017/09/07·", "title": "Linux 系统开机启动项清理", "desc": "一般情况下，常规用途的 Linux 发行版在开机启动时拉起各种相关服务进程，包括许多你可能无需使用的服务。 "}
{"publishtime": "2017/09/07·", "title": "基于 Redis 实现分布式应用限流", "desc": "限流的目的是通过对并发访问/请求进行限速或者一个时间窗口内的的请求进行限速来保护系统，一旦达到限制速率则可以拒绝服务。"}
{"publishtime": "2017/09/07··", "title": "如何向 6 岁的孩子解释何为编程", "desc": "任务：向一组六岁的孩子解释你的工作（我自己的女儿也在其中）。"}
{"publishtime": "2017/09/06··", "title": "完美主义对新手程序员的影响", "desc": "我是一个完美主义者，或者，至少我喜欢这样自居。不管怎样，我绝对离完美主义者不远了。"}
{"publishtime": "2017/09/05·", "title": "MySQL 进行 Replace 操作时造成数据丢失——那些坑你踩了吗？", "desc": "公司开发人员在更新数据时使用了 replace into 语句，由于使用不当导致了数据的大量丢失，到底是如何导致的数据丢失？"}
{"publishtime": "2017/09/05··", "title": "MySQL 创始人：写代码比打游戏还爽，程序员应该多泡开源社区", "desc": "他一个人写完了MySQL几乎全部的代码，55岁时仍然是自己公司最好的程序员。"}
{"publishtime": "2017/08/21··", "title": "Nginx 缓存引发的跨域惨案", "desc": "本文主要讲述了在Nginx环境中跨域请求使用时发现的问题和注意的事项。"}
{"publishtime": "2017/09/04·", "title": "使用 Redis 解决“树”形数据的复杂查询", "desc": "近因业务需要，研究了一下树数据结果的存储及查询解决方案。 最初的想法是使用neo4j，可是在网上看了一下开源的不支持集群，感觉用的人不多。网上也查了一些树形结构数据存储方案但每种实现方案都有它的一定局限性。想了一短时间后，想出了下面的方案。"}
{"publishtime": "2017/08/21·", "title": "从分布式计算到分布式训练", "desc": "对计算机来讲，所谓的计算，不过是将存储在各个地方的数据通过数据总线进行传输，然后经过算术逻辑单元执行一系列预设好的规则，最终再将输出写入到某个位置。在计算能力有限、存储成本偏高的情况下，就需要利用好计算机的资源，让它的计算能力发挥出最大的价值。"}
{"publishtime": "2017/09/04·", "title": "程序员的技术选择：发达国家和发展中国家有这些差异", "desc": "Stack Overflow 的工程师最近做了一次数据分析，总结了程序员的技术选择和所在国家收入之间的关系。"}
{"publishtime": "2017/08/20·", "title": "Linux 包管理基础：apt、yum、dnf 和 pkg", "desc": "本指南旨在快速地介绍下在多种 Linux 发行版中查找、安装和升级软件包的基础知识，并帮助您将这些内容在多个系统之间进行交叉对比。 "}
{"publishtime": "2017/09/03·", "title": "给中级 Meld 用户的实用技巧", "desc": "Meld 是 Linux 上功能丰富的可视化比较和合并工具。在本教程中，我们将讨论一些非常有用的技巧，这将让你使用工具的体验更好。 "}
{"publishtime": "2017/08/16·", "title": "PHP实现定时任务（非linux-shell方式，与操作系统无关）", "desc": "用PHP实现定时任务（非linux-shell方式，与操作系统平无关）。适用于定时精确时间不低于1秒。web服务重启、或者php重启。该定时任务不会自动重启。可以用来处理大部分定时任务的结局方案，商城定时自动收货，关闭评论，订单回滚；定时发送邮件，数据备份等"}
{"publishtime": "2017/09/03·", "title": "树形结构数据存储方案（五）：区间嵌套", "desc": "前面的一篇文章介绍了左右值编码，不知道大家注意到了没有，如果数据庞大，每次更新都需要更新差不多全表，效率较低没有更好的方式？今天我们就来研究下区间嵌套法。"}
{"publishtime": "2017/08/16·", "title": "决策树算法及实现", "desc": "在计算机科学中，树是一种很重要的数据结构，比如我们最为熟悉的二叉查找树（Binary Search Tree），红黑树（Red-Black Tree）等，通过引入树这种数据结构，我们可以很快地缩小问题规模，实现高效的查找。"}
{"publishtime": "2017/09/02·", "title": "Linux 系统上的可视化比较与合并工具 Meld", "desc": "Meld 主要是一个可视化的比较和合并的工具，目标人群是开发者（当然，我们将要讲到的其它部分也会考虑到最终用户）。这个工具同时支持双向和三向的比较，不仅仅是比较文件，还可以比较目录，以及版本控制的项目。 "}
{"publishtime": "2017/08/16··", "title": "6 个理由，为什么 GNOME 仍然是最好的 Linux 桌面环境", "desc": "一位资深 Linux 用户告诉你为什么 GNOME 仍然是最好的 Linux 桌面环境"}
{"publishtime": "", "title": "未知", "desc": "暂无简介"}
{"publishtime": "2017/08/15·", "title": "如何做有效的Code Review？我有这些建议", "desc": "代码评审是保证代码质量的一种有效手段，做得好的话，对公司来讲是一笔收益颇高的时间投资。但实践起来往往变成了炫耀编程技能、固执己见、恶言相向、同事关系恶化的事，这该如何是好？"}
{"publishtime": "2017/08/15··", "title": "150 多个 ML、NLP 和 Python 相关的教程", "desc": "作者整理了在网上找到的和 机器学习、NLP 相关的教程资源，其中文章将分四个主题：机器学习、自然语言处理、Python 和数学。"}
{"publishtime": "2017/08/14·", "title": "CoreOS，一款 Linux 容器发行版", "desc": "CoreOS 可以控制发行版的升级（基于 ChromeOS 代码），并结合了 Docker 和潜在的核对/修复功能，这意味着不用停止或者重启你的相关进程，就可以在线升级。 "}
{"publishtime": "2017/08/12·", "title": "cp 命令两个高效的用法", "desc": "在 Linux 上能使用鼠标点来点去的图形化界面是一件很美妙的事……但是如果你喜欢的开发交互环境和编译器是终端窗口、Bash 和 Vim，那你应该像我一样经常和终端打交道。即使是不经常使用终端的人，如果对终端环境深入了解也能获益良多。"}
{"publishtime": "2017/08/11··", "title": "程序员的自我修养：温故而知新", "desc": "目的：从最基本的编译，静态链接到操作系统如何转载程序，动态链接及运行库和标准库的实现，和一些操作系统的机制。了解计算机上程序运行的一个基本脉络。"}
{"publishtime": "2017/08/10··", "title": "用神经网络训练一个文本分类器", "desc": "理解聊天机器人的工作原理是非常重要的。聊天机器人内部一个非常重要的组件就是文本分类器。我们看一下文本分类器的神经网络（ANN）的内部工作原理。"}
{"publishtime": "2017/08/10·", "title": "编写高质量代码的思考", "desc": "前最近在看《代码大全》，可以说是一本软件开发的百科全书，特别厚，但是干货也很多。平时写代码，代码规范是一个最低的要求（很多老代码连最低要求都达不到），为什么要这样规定代码要这么写，而不是那么写？这是一个值得深究的问题。"}
{"publishtime": "2017/08/02·", "title": "使用 Kdump 检查 Linux 内核崩溃", "desc": "kdump 是获取崩溃的 Linux 内核转储的一种方法，但是想找到解释其使用和内部结构的文档可能有点困难。在本文中，我将研究 kdump 的基本使用方法，和 kdump/kexec 在内核中是如何实现。"}
{"publishtime": "2017/08/08··", "title": "你的时间值多少钱？", "desc": "并非所有对时间的利用都是均等的，而且这个简单的道理可以让生活大为不同。明白怎样充分利用自己的时间，始于了解到（准确地说是）你的时间价值多少。本文讲述如何系统计算你时间的价值。"}
{"publishtime": "2017/08/02··", "title": "系统管理员应该知道的 20 条 Linux 命令", "desc": "在这个全新的工具和多样化的开发环境井喷的大环境下，任何开发者和工程师都有必要学习一些基本的系统管理命令。特定的命令和工具包可帮助开发者组织、排查故障并优化他们的应用程序，而且当出现错误时，也可以为运维人员和系统管理员提供有价值的分类信息。"}
{"publishtime": "2017/08/08·,", "title": "用 C 语言写一个简单的 Unix Shell（2）", "desc": "在第一部分中我们讨论了 fork 系统调用以及它的注意事项。在本文中，我们将研究怎样执行命令。"}
{"publishtime": "2017/08/02··", "title": "写给自学者的入门指南", "desc": "在 IT 工程师和培训机构多如牛毛的时代，拜师学艺并不难。但自学编程对于毫无基础的同学来说却可能是个问题，相信有过类似经历的朋友都有一把辛酸泪和一肚不吐不快的体会。让我们从一个故事说起…"}
{"publishtime": "2017/08/07·", "title": "文件系统层次标准（FHS）简介", "desc": "当你好奇地看着系统的根目录（/）的时候，可能会发现自己有点不知所措。大多数三个字母的目录名称并没有告诉你它们是做什么的，如果你需要做出一些重要的修改，那就很难知道在哪里可以查看。 "}
{"publishtime": "2017/08/01·", "title": "优秀的程序员都有哪些习惯？", "desc": "「我不是卓越的程序员，我只不过是一个有着卓越习惯的程序员。」技术大牛 Kent Beck 曾这样说过自己。"}
{"publishtime": "2017/08/07··", "title": "什么是现代化编程？", "desc": "用 IDE 并不代表着“现代化”。现在的 IDE 和过去的 IDE 非常相像。虽然我们编程的内容改变了，但在很多情况下，我们如何编程却没有改变。"}
{"publishtime": "2017/07/31·", "title": "Neo4j 图数据库基础", "desc": "对于海量的各种非结构化信息来说，图数据库已经成为帮助收集、管理和搜索大量数据的技术。在本文中，我将向你展示图数据库的基础知识，帮助你快速了解概念模型。 "}
{"publishtime": "2017/08/07·", "title": "从集装箱历史看 DevOps 的发展进程", "desc": "那些创新了人与事物连接方式，且极大降低这种连接成本的技术，才能真正促进生产力的提升。"}
{"publishtime": "2017/07/31·", "title": "ss：查看网络连接的另一种方法", "desc": "ss，它是 iproute2 包附带的另一个工具，允许你查询 socket 的有关统计信息。可以完成 netstat 同样的任务，但是，ss 稍微快一点而且命令更简短。 "}
{"publishtime": "2017/08/03··", "title": "一文带你理解深度学习的局限性", "desc": "深度学习最令人惊讶的特点便是极易上手。十年以前，没有人可以猜得到经过梯度下降法训练过的简单参数模型可以在机器感知问题上实现如此惊人的结果。现在，事实证明，研究者所需要做的只是使用足够大的梯度下降素材来训练参数模型。正如 Feynman 曾经描述宇宙一样，“它并不复杂，只是里面包含的东西实在太多。”"}
{"publishtime": "2017/07/21·", "title": "Linux Bash 提示符的一些骚操作", "desc": "一些能让你自定义 Bash 提示符的黑科技"}
{"publishtime": "2017/07/31·,·", "title": "这些奇怪的排序算法，你没见过吧？", "desc": "居然还有这样的操作？？？没想到吧~"}
{"publishtime": "2017/08/03·", "title": "C++17 中那些值得关注的特性", "desc": "C++17标准在2017上半年已经讨论确定，正在形成ISO标准文档，今年晚些时候会正式发布。本文介绍了C++17的fold expression、constexpr if、constexpr lambda和string_view。fold expression为了简化可变模板参数的展开，让可以模板参数的使用变得更简单直观。 "}
{"publishtime": "2017/07/21··", "title": "程序员之间的 N 层鄙视网", "desc": "时至今日，这张鄙视网络已经相当的庞大。互联网的江湖中，有好事者开始归纳这张网，现在我们就来看看这张日益巨大的鄙视网。"}
{"publishtime": "2017/07/31··", "title": "MySQL 死锁与日志二三事", "desc": "最近线上 MySQL 接连发生了几起数据异常，都是在凌晨爆发，由于业务场景属于典型的数据仓库型应用，白天压力较小无法复现。甚至有些异常还比较诡异，最后 root cause 分析颇费周折。那实际业务当中咱们如何能快速的定位线上 MySQL 问题，修复异常呢？下文我会根据两个实际 case，分享下相关的经验与方法。"}
{"publishtime": "", "title": "未知", "desc": "暂无简介"}
{"publishtime": "2017/07/20·", "title": "移花接木：针对OAuth2的攻击", "desc": "作为第三方应用，为了提升用户体验，往往会提供第三方社交账号登录或者绑定的功能，这背后使用到的关键技术是OAuth认证。想要在自己的应用里集成OAuth不是难事儿，各大社交网站都提供了详尽的文档指南。"}
{"publishtime": "2017/07/28··", "title": "可能是迄今为止最好的 GitHub 代码浏览插件", "desc": "GitHub 是很多开发者远程协作的重要工具，其社交化编码的理念伴随着开源运动改变着整个开发社区的生态，无数优质项目依托 GitHub 在全球开源开发者的参与下蓬勃发展。"}
{"publishtime": "2017/07/20·", "title": "反转技术面试！还有这样的操作？", "desc": "如果你打算找一份程序员的工作，那么你必须要通过白板面试。 作为工程师，模拟白板面试也经常是我们早上例行公事的一部分。"}
{"publishtime": "2017/07/28·", "title": "REST 的 6 个约束", "desc": "定义个一个 RESTful 系统的时候应该遵循 6 个约束。它们限制了服务端只能遵循这些约束来处理和响应客户端请求，但是遵循这些约束服务也可以获取理想的非函数化的属性，例如性能、可伸缩、简单程度、可变能力、可见度、灵活性、可信度。"}
{"publishtime": "2017/09/02··", "title": "编程趋势：21 个热门和 21 个要降温的", "desc": "InfoWorld 作者总结的 21 个热门编程趋势和 21 个要变冷的趋势，包含 Web 开发、移动开发、大数据、教育等方面。 "}
{"publishtime": "2017/07/19··", "title": "编程、出书、赛车……DHH 是如何兼顾这一切的？", "desc": "经常有人问 DHH 这个问题。好像他一定有些秘密或窍门。每晚只睡 5 小时？还是持续几个月每天工作 12 小时？还是其他什么的。"}
{"publishtime": "2017/07/27··", "title": "MySQL 高性能表设计规范", "desc": "良好的逻辑设计和物理设计是高性能的基石， 应该根据系统将要执行的查询语句来设计schema, 这往往需要权衡各种因素。"}
{"publishtime": "2017/09/02·", "title": "树形结构数据存储方案（四）：左右值编码", "desc": "在基于数据库的一般应用中，查询的需求总要大于删除和修改。为了避免对于树形结构查询时的“递归”过程，基于Tree的前序遍历设计一种全新的无递归查询、无限分组的左右值编码方案，来保存该树的数据。"}
{"publishtime": "2017/07/19·", "title": "10小时到10分钟，一步步优化巨量关键词的匹配", "desc": "本文完整介绍了我的实现方式，看我如何将需要运行十小时的任务优化到十分钟以内。虽然实现语言是 PHP，但本文介绍的更多的思想，应该能给大家一些帮助。"}
{"publishtime": "2017/07/27·", "title": "开发团队面临的 3 大安全挑战", "desc": "应用安全不能只依靠防火墙，必须要在应用开发阶段采取适当的安全控制措施，使得应用在发布上线前就具备较好的安全性，避免人为失误造成安全隐患。"}
{"publishtime": "2017/09/01·", "title": "颜值即正义，超好用的 Linux 桌面个性化工具推荐", "desc": "对于系统桌面，有人追求美观，有人追求简洁，有人追求实用，也有人就是喜欢默认的设置效果。接下来，推荐几款适用于 Linux 的开源桌面个性化工具，代码敲累了的时候，换换主题，说不定也能让你更放松。"}
{"publishtime": "2017/07/19·", "title": "数据库压缩技术探索", "desc": "对于普通的以数据块/文件为单位的压缩，传统的（流式）数据压缩算法工作得不错，时间长了，大家也都习惯了这种数据压缩的模式。"}
{"publishtime": "2017/07/27··", "title": "27 个机器学习、数学、Python 速查表", "desc": "机器学习涉及到的方面非常多。当我开始准备复习这些内容的时候，我找到了许多不同的”速查表”, 这些速查表针对某一主题都罗列出了所有我需要知道的知识重点。"}
{"publishtime": "2017/09/01·", "title": "树形结构数据存储方案（三）：闭包表", "desc": "将 Closure Table 翻译成闭包表不知道是否合适，闭包表的思路和物化路径差不多，都是空间换时间，Closure Table，一种更为彻底的全路径结构，分别记录路径上相关结点的全展开形式。"}
{"publishtime": "2017/07/19·", "title": "DB 分库分表（5）：一种支持自由规划无须数据迁移和修改路由代码的 Sharding 扩容方案", "desc": "作为一种数据存储层面上的水平伸缩解决方案，数据库Sharding技术由来已久，很多海量数据系统在其发展演进的历程中都曾经历过分库分表的Sharding改造阶段。"}
{"publishtime": "2017/07/26··", "title": "小王子之程序员版", "desc": "Fred Hebert 仿照《小王子》小说，写了一个小程序员在学习软件开发中的各种历险，分了 11 个小故事。正如读者 lei 的评论所言：所有程序员都是文中这些人的缩影。"}
{"publishtime": "2017/08/31··", "title": "树形结构数据存储方案（二）： 物化路径", "desc": "前一篇文章介绍了比较简单的邻接列表模式，物化路径其实更加容易理解，其实就是在创建节点时，将节点的完整路径进行记录。"}
{"publishtime": "2017/07/18··", "title": "代码写的好，出过畅销书，还拿过赛车冠军，这是一种什么体验？", "desc": "这事得问 DHH。 "}
{"publishtime": "2017/08/30·", "title": "树形结构数据存储方案（一）：邻接列表模式", "desc": "在程序开发中，我们常遇到用树型结构来表示某些数据间的关系，如企业的组织架构、商品的分类、操作栏目等，目前的关系型数据库都是以二维表的形式记录存储数据，而树型结构的数据如需存入二维表就必须进行Schema设计。最近对此方面比较感兴趣，专门做下梳理。其中最简单的方法是：Adjacency List（邻接列表模式）。"}
{"publishtime": "2017/07/26·", "title": "Redis 核心概念", "desc": "Redis有着更为复杂的数据结构并且提供对他们的原子性操作，这是一个不同于其他数据库的进化路径。Redis的数据类型都是基于基本数据结构的同时对程序员透明，无需进行额外的抽象。"}
{"publishtime": "2017/07/18··", "title": "Nginx 配置文件 nginx.conf 详解", "desc": "详解 Nginx 的配置文件 nginx.conf "}
{"publishtime": "2017/08/30·", "title": "六个优雅的 Linux 命令行技巧", "desc": "使用 Linux 命令工作可以获得许多乐趣，但是如果您使用一些命令，它们可以减少您的工作或以有趣的方式显示信息时，您将获得更多的乐趣。 "}
{"publishtime": "2017/07/26·", "title": "MySQL EXPLAIN 详解", "desc": "MySQL EXPLAIN命令是查询性能优化不可缺少的一部分，该文主要讲解explain命令的使用及相关参数说明。 EXPLAIN Output Columns id id是用来顺序标识整个查询中SELELCT 语句的，在嵌套查询中id越大的语句越先执行。该值可能为NULL，如果这一行用来说明的是其他行的联合结果。 select_type 表示查询的类型 table 对应行正在访问哪一个表，…"}
{"publishtime": "2017/07/18·", "title": "DB 分库分表（4）：多数据源的事务处理", "desc": "系统经sharding改造之后，原来单一的数据库会演变成多个数据库，如何确保多数据源同时操作的原子性和一致性是不得不考虑的一个问题。总体上看，目前对于一个分布式系统的事务处理有三种方式：分布式事务、基于Best Efforts 1PC模式的事务以及事务补偿机制。我们下面对这三种处理方式一一进行分析。"}
{"publishtime": "2017/08/30·", "title": "在 Linux 中分割和重组文件", "desc": "csplit 是这些有趣的小命令中的一个，它永远伴你左右，一旦开始用它就离不开了。 "}
{"publishtime": "2017/07/26·", "title": "教你如何比谷歌搜索更快速有效地利用 man", "desc": "Linux 的帮助手册其实拥有很多有用的信息，而且比你想象中更容易使用 "}
{"publishtime": "2017/07/17·", "title": "Linux 的 EXT4 文件系统的历史、特性以及最佳实践", "desc": "让我们大概地从 EXT4 的历史、特性以及最佳实践这几个方面来学习它和之前的几代 EXT 文件系统有何不同。"}
{"publishtime": "2017/08/30·", "title": "30 多年的编码经验浓缩成的 10 条最佳实践", "desc": "所以，如何写出一手好代码？良好的代码更易于阅读、理解、调试和修改，最重要的是它的缺陷也更少。显然，编写良好的代码需要更多的时间，但是从长远来看，它也具有更多的价值，因为这降低了维护的成本，而且具有更好的可重用性。"}
{"publishtime": "2017/07/25··", "title": "Facebook 这类网站如何处理数十亿请求并保持高可用性的？", "desc": "Facebook 这类网站如何处理数十亿请求并保持高可用性呢，答案是负载均衡，本文将对其一探究竟。"}
{"publishtime": "2017/07/17··", "title": "小团队管理与大团队管理", "desc": "我们公司和大部分传统软件公司一样，随着业务的发展和新领域的开拓，公司的管理风格越来越像华为，这是不是最佳的演进路线，我觉得值得探讨，以下是我的思考，希望跟大家讨论。"}
{"publishtime": "2017/08/29·", "title": "11 个超酷的编程新工具", "desc": "在这篇文章中，我们将列出你在日常工作中能够使用的新的开发工具。很多对在线流媒体感兴趣的开发人员已经开始在他们的开发环境中使用这些新工具，因为相比他们的旧的设施来讲这些工具提供了更多的优势。"}
{"publishtime": "2017/07/04·", "title": "减轻服务器负载的建议和技巧", "desc": "去年发现我们的字体服务出人意料的高负载，尤其是晚上没什么流量的时候。幸运的是，我们发现了这一问题的根本原因，并大幅提升了字体服务的性能和系统整体的稳定性。以下内容是我们的优化过程。"}
{"publishtime": "2017/07/25·", "title": "12 个 Vim 小窍门", "desc": "这篇 Vim 技巧文章，包含了一些我觉得比较有意思的从中级到高级的 Vim 技巧，让我们一起来回顾一下。"}
{"publishtime": "2017/07/17··", "title": "人人都能读懂的设计模式（3）：行为型模式", "desc": "行为型设计模式关心对象之间的责任分配。与结构型设计模式不同的是，行为型设计模式不仅仅指定结构，而且还概述了它们之间的消息传递/通信的模式。或者换句话说，行为型模式帮助回答了“软件组件是如何运行的？”"}
{"publishtime": "2017/08/29·", "title": "全文搜索引擎 Elasticsearch 入门教程", "desc": "本文从零开始，讲解如何使用 Elastic 搭建自己的全文搜索引擎。每一步都有详细的说明，大家跟着做就能学会。"}
{"publishtime": "2017/07/17·", "title": "DB 分库分表（3）：关于使用框架还是自主开发以及 sharding 实现层面的考量", "desc": "当团队对系统业务和数据库进行了细致的梳理，确定了切分方案后，接下来的问题就是如何去实现切分方案了，目前在sharding方面有不少的开源框架和产品可供参考，同时很多团队也会选择自主开发实现，而不管是选择框架还是自主开发，都会面临一个在哪一层上实现sharding逻辑的问题，本文会对这一系列的问题逐一进行分析和考量。"}
{"publishtime": "2017/07/24·", "title": "避免持续集成（CI）成为一个安全隐患", "desc": "在服务器的世界里，root用户就是神，拥有至高的权力和力量。如果有人获得了“神之力”，后果可能不堪设想。无论是Web服务器、数据库服务器还是持续集成服务器。都是这个世界里的二等公民，权限和力量都应该受到约束。执行的时候应该受到控制。"}
{"publishtime": "2017/08/28·", "title": "GitHub 简易入门指南", "desc": "GitHub 是一个在线平台，旨在促进在一个共同项目上工作的个人之间的代码托管、版本控制和协作。通过该平台，无论何时何地，都可以对项目进行操作（托管和审查代码，管理项目和与世界各地的其他开发者共同开发软件）。"}
{"publishtime": "2017/07/16··", "title": "MySQL 主从复制原理探索", "desc": "经历过一次mysql主从延迟之后，就开始思考，主从复制是什么东西？它是怎么实现的呢？它的原理是什么？于是乎就开始查阅资料、文章，现将自己理解到的内容总结在此，加深印象。"}
{"publishtime": "", "title": "未知", "desc": "暂无简介"}
{"publishtime": "2017/07/04··", "title": "程序员生涯第一生存法则", "desc": "程序员的职业生涯，第一生存法则是什么？"}
{"publishtime": "2017/08/26·", "title": "Linux 开机引导和启动过程详解", "desc": "你是否曾经对操作系统为何能够执行应用程序而感到疑惑？那么本文将为你揭开操作系统引导与启动的面纱。 "}
{"publishtime": "2017/07/16·", "title": "记一次 MySQL 主从复制延迟的踩坑", "desc": "最近开发中遇到的一个 MySQL 主从延迟的坑，记录并总结，避免再次犯同样的错误。"}
{"publishtime": "2017/07/04·", "title": "为何不用担心大公司偷你的绝世创业点子", "desc": "创业公司经常被问到这个问题。因为相比于典型创业公司的资源，大公司拥有数雄厚资金和众多工程师，所以这个问题听起来似乎非常合理。"}
{"publishtime": "2017/08/25·", "title": "一个时代的结束：Solaris 系统的那些年，那些事", "desc": "现在看来，Oracle 公司正在通过取消 Solaris 12 而终止 Solaris 的功能开发，这里我们要回顾下多年来在 Phoronix 上最受欢迎的 Solaris 重大事件和新闻。 "}
{"publishtime": "2017/07/16··", "title": "人人都能读懂的设计模式（2）：结构型模式", "desc": "结构型设计模式主要关注对象组合，换句话说，关注实体之间如何互相使用。 或者还有另外一个解释，结构型设计模式有助于回答“如何构建软件组件？”"}
{"publishtime": "2017/06/26·", "title": "字符串的长度，是字符数量，还是字节数量？", "desc": "大多数的字符串函数，例如charindex，substring，stuff等函数，其位置都是针对字符数量的，这使得Len函数深入人心，但是，一个Unicode字符，占用的字节数量是2Bytes，而一个普通的ASCII字符占用的字节数量是1Byte，当需要计算字符串占用的字节数量时，要如何计算字符串的长度？"}
{"publishtime": "2017/07/03·", "title": "每个程序员都需要知道一些游戏网络知识", "desc": "作为一个程序员，你有没有想象过多人游戏是如何实现的？"}
{"publishtime": "2017/08/24·", "title": "最实用的 Linux 命令行使用技巧", "desc": "我们可能每天都会要使用到很多的 Linux 命令行。 我们也会网络上知晓一些使用它们的小技巧，但是如果我们没有时常来进行练习，就有可能会忘掉怎么去使用它们。 所以我就决定把那些你可能会忘记的小提示和小技巧，或者对你而言可能是全新的东西都列表来。"}
{"publishtime": "2017/07/16·", "title": "DB 分库分表（2）：全局主键生成策略", "desc": "本文将主要介绍一些常见的全局主键生成策略，然后重点介绍flickr使用的一种非常优秀的全局主键生成方案。"}
{"publishtime": "2017/06/26·", "title": "Linus Torvalds 说 Linux 仍然惊讶和激励着他", "desc": "周一，Linus Torvalds 首次来到中国参加在北京召开的 LinuxCon + ContainerCon + CloudOpen。在近 2000 名观众面前，Linus Torvalds 和 VMware 开源负责人 Dirk Hohndel 进行了进行了一次“炉边聊天”，谈及是什么在惊讶和激励着他，以及有志的开源开发者们该如何上手。"}
{"publishtime": "2017/07/03·", "title": "带着问题学习分布式系统之数据分片", "desc": "何为数据分片（segment，fragment， shard， partition）？就是按照一定的规则，将数据集划分成相互独立、正交的数据子集，然后将数据子集分布到不同的节点上。注意，这里提到，数据分片需要按照一定的规则，不同的分布式应用有不同的规则，但都遵循同样的原则：按照最主要、最频繁使用的访问方式来分片。"}
{"publishtime": "2017/08/24·,·", "title": "提升 C++ 技能的 7 种方法", "desc": "有 7 种方法帮助你真正提高 C++，本文会给你一些小技巧来帮助你真正实现所选的目标。"}
{"publishtime": "2017/07/15·", "title": "DB 分库分表（1）：拆分实施策略和示例演示", "desc": "对数据库进行分库分表(Sharding化)前，需要开发人员充分了解系统业务逻辑和数据库schema.一个好的建议是绘制一张数据库ER图或领域模型图，以这类图为基础划分shard,直观易行，可以确保开发人员始终保持清醒思路。"}
{"publishtime": "2017/06/25·", "title": "15位身份证补全为18位身份证算法", "desc": "身份证号码补全虽然简单，但是前提需要了解我国公民的身份证构成原理才能正确验证，今天将这个学习过程分享给大家，希望对大家有所帮助，学习是个永无止境的过程，只有不断学习才能有进步！"}
{"publishtime": "2017/07/03··", "title": "数据结构中各种树", "desc": "数据结构中有很多树的结构，其中包括二叉树、二叉搜索树、2-3树、红黑树等等。本文中对数据结构中常见的几种树的概念和用途进行了汇总，不求严格精准，但求简单易懂。"}
{"publishtime": "2017/08/23·", "title": "一文了解 Kubernetes 是什么？", "desc": "这是一篇 Kubernetes 的概览。Kubernetes 是一个自动化部署、伸缩和操作应用程序容器的开源平台。 "}
{"publishtime": "", "title": "未知", "desc": "暂无简介"}
{"publishtime": "2017/06/23·", "title": "开发团队到底好不好，这 12 个问题能检验出来吗？", "desc": "3. 是否有问题跟踪器? 4. 写代码之前修正所有 bug 吗?  5. 是否有实时更新的计划表?  6. 是否实时更新产品功能和使用方法的文档? 7. 是否使用市面上最好的工具？ 8. 是否有完整的测试计划？"}
{"publishtime": "2017/07/03··", "title": "能当主力，能入虚拟机，还能随时打包带走，Linux 就是这么强大", "desc": "一台机器上，可以同时安装Windows跟若干Linux系统，Windows下可以通过虚拟机来运行位于本地磁盘的这些Linux系统，而这些Linux系统下也可以通过容器或者虚拟机的方式互相运行。并且这些系统可以非常方便地备份跟删除，也可以随时创建以及运行快照。并且这些Linux系统可以随时打包带走，只需要经过很少的修改，就能直接在U盘或者其他机器上运行。"}
{"publishtime": "2017/08/23··", "title": "谷歌用两年时间研究了 180 个团队，发现高效团队有这五个特征", "desc": "Google 花了两年采访 200+ Google 员工，调查了 180+ 高效的工作团队，发现了 5 个特征。"}
{"publishtime": "2017/06/22·", "title": "数据可视化产生生产力", "desc": "数据可视化就是借助于图形化手段，清晰有效地进行信息传达与沟通。许多人会着眼于“可视化”，认为数据可视化就是将一系列看上去很炫、很复杂的图表展示在页面上。其实不然，虽然可视化脱离不了各种图表类型，但并不意味着要以增加用户理解难度为代价去实现复杂的功能；或者为了看上去绚丽多彩而失去其最根本的意义：传达与沟通。"}
{"publishtime": "2017/07/03·", "title": "Linux TCP GSO 和 TSO 实现", "desc": "TSO(TCP Segmentation Offload): 是一种利用网卡来对大数据包进行自动分段，降低CPU负载的技术。其主要是延迟分段。GSO(Generic Segmentation Offload): GSO是协议栈是否推迟分段，在发送到网卡之前判断网卡是否支持TSO，如果网卡支持TSO则让网卡分段，否则协议栈分完段再交给驱动。如果TSO开启，GSO会自动开启。"}
{"publishtime": "2017/08/23·", "title": "DevOps 团队之殇", "desc": "DevOps在一遍遍被人们提及、一次次在项目中被实践时，也在不断地被重新定义，DevOps是什么？这个问题可能到现在也比较难说清楚，但是项目中的“DevOps”做了些什么，却是清晰可见的。本文就结合笔者的切身经历，谈一谈关于DevOps交付的价值以及在企业转型过程中遇到的一些问题。"}
{"publishtime": "2017/06/21··", "title": "不再迷惑，无值和 NULL 值", "desc": "在关系型数据库的世界中，无值和NULL值的区别是什么？一直被这个问题困扰着，甚至在写TSQL脚本时，心有戚戚焉，害怕因为自己的一知半解，挖了坑，贻害后来人，于是，本着上下求索，不达通幽不罢休的决心（开个玩笑），遂有此文。"}
{"publishtime": "2017/07/03·", "title": "浅析 Linux 的共享内存与 tmpfs 文件系统", "desc": "POSIX共享内存与SYS V共享内存在内核都是通过tmpfs实现，但对应两个不同的tmpfs实例，相互独立。"}
{"publishtime": "2017/08/22··", "title": "Zookeeper，你可把我坑惨了！", "desc": "前些日子，我们被自己部署的 Zookeeper 集群 DDOS 攻击了，惊不惊喜，意不意外？"}
{"publishtime": "2017/06/21··", "title": "我眼中的项目经理", "desc": "这一个个小故事，都是真实的，给我很多启发，在人生的道路上，能够聆听到成功者的教诲，是最难能可贵的。"}
{"publishtime": "2017/07/03·", "title": "七大查找算法", "desc": "查找是在大量的信息中寻找一个特定的信息元素，在计算机应用中，查找是常用的基本运算。本文简单概括性的介绍了常见的七种查找算法，说是七种，其实二分查找、插值查找以及斐波那契查找都可以归为一类——插值查找。"}
{"publishtime": "", "title": "未知", "desc": "暂无简介"}
{"publishtime": "2017/06/20·", "title": "大数据搜索选开源还是商业软件？ElasticSearch 对比 Splunk", "desc": "本文就架构，功能，产品线，概念等方面就ElasticSearch和Splunk做了一下全方位的对比，希望能够大家在制定大数据搜索方案的时候有所帮助。"}
{"publishtime": "2017/07/02·", "title": "实现前后端分离的心得", "desc": "对目前的web来说，前后端分离已经变得越来越流行了，越来越多的企业/网站都开始往这个方向靠拢。那么，为什么要选择前后端分离呢？前后端分离对实际开发有什么好处呢?"}
{"publishtime": "2017/06/19·,·", "title": "自学的程序员如何找到好工作？", "desc": "这个问题来自一个 17 岁自学编程的小青年，他感觉自己缺乏很多有用的技能。想读大学拿软件开发相关学位，但又觉得上大学是为了工作。他处于迷茫阶段，期待好建议。Brain Knapp 给的建议在 Reddit 有 15k+ 赞同。"}
{"publishtime": "2017/06/30·", "title": "迪斯尼的华丽海洋动效算法，是如何实现的？", "desc": "《海洋奇缘》讲述了作为航海世家后代的波里尼西亚公主莫阿娜，为了找寻传说中的神秘之岛，独自踏上了航海之旅的故事。本文并没有详细介绍具体的动画技术，而是迪斯尼如何用心拍摄了一部感人至深的作品。"}
{"publishtime": "2017/06/19··", "title": "让程序员跨界做设计，脑洞开的万万想不到", "desc": "如果程序员来做设计，世界会变成什么样子？"}
{"publishtime": "2017/07/15··", "title": "DB 分库分表的基本思想和切分策略", "desc": "Sharding的基本思想就要把一个数据库切分成多个部分放到不同的数据库(server)上，从而缓解单一数据库的性能问题。"}
{"publishtime": "2017/06/30·", "title": "ASP.NET Core 2.0 新功能汇总", "desc": "ASP.NET Core 的变化和发展速度是飞快的，当你发现你还没有掌握 ASP.NET Core 1.0 的时候， 2.0 已经快要发布了，目前 2.0 处于 Preview 1 版本，意味着功能已经基本确定。"}
{"publishtime": "2017/06/19·", "title": "Linux 中高效编写 Bash 脚本的 10 个技巧", "desc": "Shell 脚本编程 是你在 Linux 下学习或练习编程的最简单的方式。尤其对 系统管理员要处理着自动化任务，且要开发新的简单的实用程序或工具等（这里只是仅举几例）更是必备技能。"}
{"publishtime": "2017/07/14··", "title": "Linux - 请允许我静静地后台运行", "desc": "开很多窗口管理会很不方便，还有万一手贱点了x，或者长时间不操作，远程终端断开了连接，进程停止了，再次打开，又是一番折腾。今天来介绍几个命令，帮大家系统地梳理一下 linux 的进程调度，并附上一些自己的使用心得和踩过的坑。"}
{"publishtime": "2017/06/29·", "title": "Linux 系统下 init 进程的前世今生", "desc": "Linux系统中的init进程(pid=1)是除了idle进程(pid=0，也就是init_task)之外另一个比较特殊的进程，它是Linux内核开始建立起进程概念时第一个通过kernel_thread产生的进程，其开始在内核态执行，然后通过一个系统调用，开始执行用户空间的/sbin/init程序，期间Linux内核也经历了从内核态到用户态的特权级转变，/sbin/init极有可能产生出了shell，然后所有的用户进程都由该进程派生出来…"}
{"publishtime": "2017/06/19··", "title": "我是如何开始踏上 bash 脚本编程之路的？", "desc": "通过一些简单的 Google 搜索，即使是编程入门者也可以尝试编写代码将以往枯燥和冗长的任务自动化。"}
{"publishtime": "2017/07/14··", "title": "如何理解并正确使用 MySQL 索引", "desc": "索引是存储引擎用于快速查找记录的一种数据结构，通过合理的使用数据库索引可以大大提高系统的访问性能，接下来主要介绍在MySql数据库中索引类型，以及如何创建出更加合理且高效的索引技巧。"}
{"publishtime": "2017/06/29·", "title": "软件开发和测试的 30 个最佳实践", "desc": "这些软件开发和测试的最佳实践，可以帮你节省时间和避免问题。"}
{"publishtime": "2017/06/19·", "title": "给非英语母语的人从事开源项目的若干建议", "desc": "在这篇文章中，作为不以英语为母语的 OpenStack 的贡献者的我们将会分享一些所面临挑战——如何去克服它们，还有一些好的方案，它们能够减轻不以英语为母语且刚开始从事的人的焦虑。我们的总部在日本、巴西和中国，每天都会与世界各地的大型 OpenStack 社区合作。"}
{"publishtime": "2017/07/14··", "title": "人人都能读懂的设计模式（1）：创建型模式", "desc": "用最简单的语言，解释设计模式。"}
{"publishtime": "2017/06/29·", "title": "基于密码学的数据治理Crypto-based Data Governance", "desc": "最近得益于区块链在金融领域的火爆效应，Crypto-based currency&transaction改变了金融圈原本“数字货币=数字游戏”的印象，密码学货币不再只是数字货币，它还被赋予了“防篡改、去中心”的特性，但是本质上这些事务都是数据治理问题"}
{"publishtime": "2017/07/13·", "title": "Linux 内核驱动中对文件的读写", "desc": "在kernel中操作文件没有标准库可用，需要利用kernel的一些函数，这些函数主 要有： filp_open() filp_close(), vfs_read() vfs_write()，set_fs()，get_fs()等，这些函数在linux/fs.h和asm/uaccess.h头文件中声明。"}
{"publishtime": "2017/06/19··", "title": "一步步实现 Redis 搜索引擎", "desc": "本文只是一个采用 Redis 优化查询搜索的一个简单 Demo，和现有的开源搜索引擎相比，它更轻量，学习成本也相应低些。其次，它的一些思想与开源搜索引擎是类似的，如果再加上词语解析，也可以实现类似全文检索的功能"}
{"publishtime": "2017/06/28·", "title": "谈一下我们是如何开展code review的", "desc": "众所周知，代码审查是软件开发过程中十分重要的环节。作者结合自己的实际工作经验，与大家分享一下在实际工作中代码审查是如何开展的。"}
{"publishtime": "2017/07/13·", "title": "基本性能分析，省了几百万美元", "desc": "本文是关于我如何应用基本性能分析技术，借助火焰图做了一处小改进，使得 Postgres 计算机集群的 CPU 状况获得了 10 倍的改善，并在第二年帮公司节省了几百万刀。"}
{"publishtime": "2017/06/17·", "title": "通过机器学习来自动调优 DBMS，让任何人都可以部署数据库管理系统", "desc": "数据库管理系统（DBMS）是任何数据密集应用的关键部分。它们可以处理大量数据和复杂的工作负载，但同时也难以管理，因为有成百上千个“旋钮”（即配置变量）控制着各种要素，比如要使用多少内存做缓存和写入磁盘的频率。组织机构经常要雇佣专家来做调优，而专家对很多组织来说太过昂贵了。"}
{"publishtime": "2017/06/27··", "title": "创业公司操蛋的面试过程", "desc": "抱怨当下创业公司不切实际的落后的面试工程师的方法，都学大公司问算法题，容易错过那些真能做事的人，而招到只会做题不会做事的人。"}
{"publishtime": "2017/07/12··", "title": "为什么要招老程序员？这 5 个理由或许说服你", "desc": "Josh Marinacci 是一名经历很丰富的老程序员了，他从经验、判断力、知识面的广度和深度等几个方面，阐述了为什么需要雇佣老程序员。"}
{"publishtime": "2017/07/12·", "title": "无我编程的 10 条戒律", "desc": "无我编程旨在把代码评审中的人为因素最小化，应当在一个友好、合议方式进行，个人感情放一边，从而提高代码质量。"}
{"publishtime": "2017/06/17·", "title": "使用 Go 语言来理解 Tensorflow", "desc": "本文通过一个简单的Go绑定实例，让读者一步一步地学习到Tensorflow有关ID、作用域、类型等方面的知识。"}
{"publishtime": "2017/06/27·", "title": "理解 Linux 的平均负载和性能监控", "desc": "本文解释 Linux 系统中最关键的管理任务之一，关于系统 / CPU 的负载和平均负载的性能监控。"}
{"publishtime": "2017/06/15·", "title": "2017 十大最佳用于隐私和安全保护的 Linux 发行版", "desc": "这篇文章将列出十个关注隐私和安全性的 Linux 发行版"}
{"publishtime": "2017/07/12·", "title": "如何做到“恰好一次”地传递数十亿条消息", "desc": "在分布式领域中存在着三种类型的消息投递语义，分别是：最多一次（at-most-once）、至少一次（at-least-once）和恰好一次（exactly-once）。本文作者介绍了一个利用Kafka和RocksDB来构建的“恰好一次”消息去重系统的实现原理。"}
{"publishtime": "2017/06/16·", "title": "九年游戏开发经验谈", "desc": "程序员是一个充满了躁动与焦虑的职业，新人的不断涌入和频繁的跳槽正在不断消磨人们对这个行业的安全感。而我有幸认识了这样一位工程师，他从 08 年就加入育碧上海工作室从事他所热爱的游戏开发。这九年的时间里，他见证了游戏行业的蓬勃发展，开发技术的日新月异，而育碧也见证了他由青涩到成熟，在游戏开发行业中渐渐闯出自己的一番天地。"}
{"publishtime": "2017/06/27·", "title": "使用 Nmon 监控 Linux 的系统性能", "desc": "Nmon（得名于 Nigel 的监控器）是IBM的员工 Nigel Griffiths 为 AIX 和 Linux 系统开发的一款计算机性能系统监控工具。Nmon 可以把操作系统的统计数据展示在屏幕上或者存储到一份数据文件里，来帮助了解计算机资源的使用情况、调整方向和系统瓶颈。"}
{"publishtime": "2017/06/14··", "title": "数据科学家和机器学习工程师有什么不同", "desc": "近十年来，“数据科学”和“数据科学家”备受关注。但对于哪些人可以被称为是“数据科学家”，则争论不休。"}
{"publishtime": "2017/07/12·", "title": "如何最有效的编写SQL", "desc": "解决数据库级（SQL）工作上的问题，应该采用的是SET方法（整体的）而不是过程式的方法。下面来看看作者为什么这么说。 "}
{"publishtime": "2017/06/16·", "title": "C++ 中命名空间的 5 个常见用法", "desc": "可能很多程序员对C++已经非常熟悉，但是对命名空间经常使用到的地方还不是很明白，这篇文章就针对命名空间这一块做了一个叙述。 "}
{"publishtime": "", "title": "未知", "desc": "暂无简介"}
{"publishtime": "2017/06/13·", "title": "揭秘 Reddit 愚人节项目的技术实现过程", "desc": "每到愚人节，各科技公司都俗套地弄一些愚人节项目，绝大部分既没意思又没技术含量。但今年 Reddit 的愚人节项目一枝独秀，既有意思又有技术含量，发动全球网友一个像素一个像素实时地画图。"}
{"publishtime": "2017/07/11·", "title": "C++17 相比于 C++14 的所有重大变化", "desc": "本文档列举了自C++14发布以来，到C++17 DIS（N4660）发布为止，应用于C++工作草案（working draft）的所有重大变化。"}
{"publishtime": "2017/06/13·", "title": "2017 年最佳开源网络监控工具", "desc": "对开源软件的需求持续增长，网络管理工具已经适应了这一浪潮。你不再需要为可能不是你所需的软件支付小额的费用，请留意下（大部分）免费的开源工具，用来监控、配置和映射你的联网设备。这里有 14 个开源网络监控工具来协助IT管理员完成工作。"}
{"publishtime": "2017/07/10·", "title": "LevelDB 实现分析", "desc": "LevelDB 是由 Google 开发的 key-value 非关系型数据库存储系统，是基于 LSM(Log-Structured-Merge Tree) 的典型实现，LSM 的原理是：当读写数据库时，首先纪录读写操作到 Op log 文件中，然后再操作内存数据库，当达到 checkpoint 时，则写入磁盘，同时删除相应的 Op log 文件，后续重新生成新的内存文件和 Op log 文件。"}
{"publishtime": "2017/06/13··", "title": "我给你钱，你帮我改好不好？", "desc": "并不是所有的人都适合编程，有些人天生就爱编程，编程就像流淌在他身体里的血液，是他的生命，他的一切，这种人可遇不可求。"}
{"publishtime": "2017/07/10··", "title": "累到想删库，程序员职业倦怠的真实现状", "desc": "即使编程是你在这世上最喜欢的活动之一，每个整天写代码的人都会经历这样的事情，突然感觉“我想做别的事情，而不是坐在这写代码”。"}
{"publishtime": "2017/06/12·", "title": "如何从参与开源项目的过程中获取自信", "desc": "随着大脑的发育，你渐渐学会了这世上什么事情可以/应该做，以及什么事情不能/不应该做。你所有的行为都受到周围大众的影响，很多时候，阻碍你参与某事的原因就是你缺乏自信。"}
{"publishtime": "2017/07/10··", "title": "走近比特币：一个故事看懂“区块链”", "desc": "本文是对区块链原理极为通俗的解释，适合刚接触比特币的小白们阅读。"}
{"publishtime": "2017/06/12··", "title": "实例详解贝叶斯推理的原理", "desc": "提及贝叶斯推理时，人们时常会带着一种敬仰的心情。其实并非想象中那么富有魔力，或是神秘。尽管贝叶斯推理背后的数学越来越缜密和复杂，但其背后概念还是非常容易理解。"}
{"publishtime": "2017/07/09·,·", "title": "漫画算法：什么是 B 树？", "desc": "B树/B-树，让你深入了解文件系统、数据库索引的数据结构。"}
{"publishtime": "2017/06/12··", "title": "服务端I/O性能大比拼：Node、PHP、Java和Go", "desc": "理解应用程序的输入/输出（I/O）模型，意味着其在计划处理负载与残酷的实际使用场景之间的差异。若应用程序比较小，也没有服务于很高的负载，也许它影响甚微。但随着应用程序的负载逐渐上涨，采用错误的I/O模型有可能会让你到处踩坑，伤痕累累。"}
{"publishtime": "2017/07/07··", "title": "王垠：如何掌握所有的程序语言", "desc": "很多编程初学者至今还在给我写信请教，问我该学习什么程序语言，怎么学习。由于我知道标题问题的答案，所以总感觉这个问题是如此“低级”，一直没来得及回复 :P 可是逐渐的，我发现原来不只是小白们有这个问题，就连美国大公司的很多资深工程师，其实也没搞明白。"}
{"publishtime": "2017/06/12·,", "title": "PHP 框架 Laravel 作者的工作日常", "desc": "经常有人问我有关日常工作的问题，比如我是如何管理时间的，我常用的工具有哪些，我喜欢用什么编辑器和配色方案。在这里，我将借这篇文章尝试回答这些问题。"}
{"publishtime": "2017/07/06··", "title": "程序员偷偷自动化，每周才工作几小时却拿全薪，这样道德么？", "desc": "就在上周，程序员们在 StackExchange 上有激烈的讨论，如果偷偷把自己的工作自动化，是不是不道德？"}
{"publishtime": "2017/06/16·", "title": "30 岁转行做初级程序员是什么样的体验", "desc": "30岁转行做程序员到底行不行？在互联网发展迅速的今天，很多人会产生这样的想法，这篇文章告诉你，没有什么不可以，关键看你怎么做。"}
{"publishtime": "2017/06/12·", "title": "当程序员写不出代码了，该怎么办？", "desc": "你已经对着电脑 n 个小时了。敲键盘正成为一种负担，你在想，键盘是否就像西西弗斯推着的那块巨石。"}
{"publishtime": "2017/07/06·,·", "title": "用 C 语言写一个简单的 Unix Shell（1）", "desc": "作者用 C 语言实现了一个简易的 unix shell，通过本文可加深对 shell 和 Unix 系统原理的理解。 "}
{"publishtime": "2017/06/16··", "title": "拯救 Java Code Style 强迫症", "desc": "有一位工程师对Code Style特别在意，所以在Code Review的大部分时间中都是该工程师在指出哪里哪里的格式不对，但是团队并没有找到改进方法，每次的结论都是“下次我注意一点。”"}
{"publishtime": "2017/06/11·", "title": "Redis 源码学习之事件驱动", "desc": "Redis基于多路复用技术实现了一套简单的事件驱动库，代码在ae.h、ae.c以及ae_epoll.c、ae_evport.c和ae_kqueue.c、ae_select.c这几个文件中。其中ae表示的是antirez eventloop的意思。"}
{"publishtime": "2017/07/05·", "title": "性能优化知多少", "desc": "最近一段时间，系统新版本要发布，在beta客户测试期间，暴露了很多问题，除了一些业务和异常问题外，其他都集中在性能上。有幸接触到这些性能调优的机会，当然要学习总结了。"}
{"publishtime": "", "title": "未知", "desc": "暂无简介"}
{"publishtime": "2017/06/11·", "title": "Kotlin 喧嚣过后，谈谈 Java 程序员未来的出路", "desc": "自从谷歌 I/O 2017宣布将支持 Kotlin 作为 Android 开发的 First-Class 语言，各种 Kotlin 能否取代 Java 的文章、争论层出不穷。 作为一名老 Java 程序员，虽然类似场面见过不少，但心态是比较复杂的。"}
{"publishtime": "2017/07/04··", "title": "漫画算法：什么是跳跃表？", "desc": "一种神奇的数据结构"}
{"publishtime": "2017/06/11·", "title": "应用敏感信息的 6 个配置原则", "desc": "应用往往需要用到配置信息，其中一些由于其特殊性会相比于其他配置信息更加敏感，它们需要被很好的保护起来以避免应用遭受黑客攻击。"}
{"publishtime": "", "title": "未知", "desc": "暂无简介"}
{"publishtime": "2017/06/10·", "title": "做 Web 开发必备的安全核对清单", "desc": "在云端开发安全又健壮的 Web 应用非常难。如果你认为这很容易，那你技术水平要么已经很牛叉，要么还没有踩过坑。"}
{"publishtime": "2017/06/09·", "title": "13 年来，我写了这些糟糕的游戏代码", "desc": "Evan Todd 用风趣幽默的口吻点评了自己从 2004 年以来做游戏时写的代码，有 Java、C++、Python。经过十几年打怪练级，最近终于完整地做完并推出了自己的第一套游戏。Todd 今年 26 岁。"}
{"publishtime": "2017/06/08·", "title": "Linux 日志定时轮询流程详解", "desc": "logrotate是个十分有用的工具，它可以自动对日志进行截断（或轮循）、压缩以及删除旧的日志文件。例如，你可以设置logrotate，让/var/log/foo日志文件每30天轮循，并删除超过6个月的日志。配置完后，logrotate的运作完全自动化，不必进行任何进一步的人为干预。"}
{"publishtime": "2017/06/08·", "title": "MySQL 数据库误删除后的数据恢复操作说明", "desc": "在日常运维工作中，对于数据库的备份是至关重要的！数据库对于网站的重要性使得我们对 MySQL 数据库的管理不容有失！然而是人总难免会犯错误，说不定哪天大脑短路了，误操作把数据库给删除了，怎么办？"}
{"publishtime": "2017/06/08··", "title": "如何学习新技术", "desc": "我在 2010 年左右开始学习信息技术，从初期围绕单片机做电子设计，一路浅尝辄止，走马观花。什么语言都用过，在各种平台上都干过活，有用的没用的都学了一些，一路尝鲜一路丢。"}
{"publishtime": "2017/06/08·", "title": "Reddit 如何统计每个帖子的浏览量", "desc": "我们想要更好地向用户展示 Reddit 的规模。为了这一点，投票和评论数是一个帖子最重要的指标。然而，在 Reddit 上有相当多的用户只浏览内容，既不投票也不评论。所以我们想要建立能够计算帖子浏览数的系统。"}
{"publishtime": "2017/05/24·", "title": "如何把好技术变为好产品？", "desc": "大多数创业始于极好的创意和技术专长，但好技术和好产品有着天壤之别。这篇文章写给那些想构建用户实际使用的产品，而不是只解决问题但无法形成规模的技术。我用来形容这个过程的动词就是“产品化”。产品化意味着把某种东西（比如好的创意、技术等）转化为产品。"}
{"publishtime": "2017/06/08·", "title": "数据库表设计，没有最好只有最适合", "desc": "我们在设计数据库的时候，是否会突破常规，找到最适合自己需求的设计方案，下面来举个例子"}
{"publishtime": "2017/05/24·", "title": "NoSQL 数据库的主主备份", "desc": "Tarantool DBMS 的高性能应该很多人都听说过，包括其丰富的工具套件和某些特定功能。比如，它拥有一个非常强大的 on-disk 存储引擎 Vinyl，并且知道怎样处理 JSON 文档。然而，大部分文章往往忽略了一个关键点：通常 Tarantool 仅仅被视为存储器，而实际上其最大特点是能够在存储器内部写代码，从而高效处理数据。"}
{"publishtime": "", "title": "未知", "desc": "暂无简介"}
{"publishtime": "2017/05/23·", "title": "写给程序员的 Unicode 入门介绍", "desc": "程序员世界对这个名字发自内心的恐惧和敬畏。Unicode 很深奥，它有千页的 Unicode 标准，还有几十页的补充附录、报告和注解，简直太吓人了。即使 Unicode 诞生 30 多年后，我们还觉得它很神秘。"}
{"publishtime": "2017/05/22··", "title": "谷歌大牛说：为什么 Kotlin 比你们用的那些垃圾语言都好", "desc": "5月18日，安卓团队在谷歌 I/O 2017 大会上宣布 Kotlin 成为官方头等支持语言。这条爆炸性资讯在当天就是 Hacker News 首页热门讨论，与此同时，谷歌技术大牛 Steve Yegge 也写了一篇关于 Kotlin 的使用体会总结文章，同样是首页热门，并引发 200+ 讨论。"}
{"publishtime": "2017/05/21··", "title": "不按传统套路，我是这样学习新编程语言的", "desc": "以往我们认为学习新编程语言的最佳方式是看语法，然后做小项目练习。Sahil Dua 另辟蹊径，找到了学习新语言的新方法。"}
{"publishtime": "2017/05/20··", "title": "思维的局限", "desc": "去年写了一篇关于《容器化时代对测试的机遇》的文章，提到了一些分布式自动化测试和容器化技术结合的架构设想。但是目前来说，分布式运行并不是难点，亟需解决的问题是针对特殊平台和复杂场景下的测试，例如复杂业务场景下iOS平台的自动化测试。"}
{"publishtime": "2017/06/07··", "title": "面试解惑：没有技术深度的苦恼", "desc": "有位朋友去面试 Android 开发，他师出名门（BAT中的一家公司），是有十年的软件开发经验的高级 Android 工程师，但却被以没有技术深度而遭拒绝。"}
{"publishtime": "2017/05/02·", "title": "也许 MySQL 适合 Uber，但它不一定适合你", "desc": "Markus Winand 是数据库专家，著有《SQL Performance Explained》一书。2013 年 Uber 从 MySQL 迁移到 PostgreSQL，而在 2016 年 8 月，Uber 工程博客发文称他们从 PostgreSQL 迁回 MySQL。当时在业内引发热议，Markus 写下了这篇文章来回应。"}
{"publishtime": "2017/05/12··", "title": "做开源项目的维护者，是怎样一种体验？", "desc": "热门开源项目的维护者都很不容易的，素不相识的伸手党会因为你没有及时回答问题、没有及时帮他们搜索出他们想要的答案而开骂，开源项目维护者们往往会憋出心理疾病来的。Nolan 参与开源有 7 年了，请看他的体会。"}
{"publishtime": "2017/05/19·", "title": "TensorFlow 团队如何管理开源项目", "desc": "开源不仅仅是把代码贡献出来，然后希望有人来使用它。我也知道这一点，不过在成为 Google TensorFlow 团队的成员后，我才认识到围绕一个软件构建一个社区所需要考虑的因素实在是很多。"}
{"publishtime": "2017/06/07·", "title": "Linux 下 logrotate 日志轮询操作梳理", "desc": "logrotate 程序是一个日志文件管理工具。用于分割日志文件，删除旧的日志文件，并创建新的日志文件，起到“转储”作用。可以节省磁盘空间。下面就对 logrotate 日志轮转操作做一梳理记录。"}
{"publishtime": "2017/05/02··", "title": "它们养活了一票国产软件！这些开源软件你知道吗", "desc": "现在各种国产软件已经牢牢占据了国内市场，无论是在浏览器、下载软件、压缩软件还是视频播放器等领域，都可以看到国产软件活跃的身影。诚然，国产软件在很多方面体验都不错，但之所以它们这么强，很大程度上是因为在核心技术方面，借用了相当多来自开源软件的技术。"}
{"publishtime": "2017/05/12·", "title": "程序员在工作时间做私活，是否该开除？", "desc": "我是一家创业公司的 CTO 和联合创始人，我刚刚发现一个软件工程师每天会占用 2-3 个小时的工作时间做私活。其他工程师们也向我抱怨，希望我能对此采取一些行动。我该怎么做？应该开除他吗？"}
{"publishtime": "2017/05/19·", "title": "GitHub 官方推荐的开源指南，新手老手都别错过", "desc": "对程序员而言，参与开源有着难以置信的回报，比如有一个自己的出色开源项目，在技术面试能增色很多，极大加分。所以，越来越多的人在参与到开源运动中来。但对应很多新手来说，如何参与开源做出第一个贡献，如何发起一个新项目，却成了一个问题。"}
{"publishtime": "2017/06/07·", "title": "7 个开源数据库利弊对比，哪款才最适合你？", "desc": "当 IT 部门只有微薄预算下运行时，降低成本对于保持业务和保持 IT 业务盈利是非常重要的。"}
{"publishtime": "2017/05/01·", "title": "关于 Linux 进程你所需要知道的一切", "desc": " 在这篇指南中，我们会逐步对进程做基本的了解，然后简要看看如何用特定命令管理 Linux 进程。"}
{"publishtime": "2017/05/11·", "title": "Linux 中引号的那些事", "desc": "我们将把编写脚本的事情暂时搁在一边，然后来讨论一些，我们一直在用的，但是没有解释的东西。在这一节里面，我们会讲述引号。"}
{"publishtime": "2017/05/18·", "title": "大事件：Kotlin 成了 Android 开发的官方语言", "desc": "今天是 Google I/O 2017 大会第一日。一觉醒来，发现 Kotlin 成为了 Android 的官方开发语言。谷歌安卓团队今天宣布对 Kotlin 提供 first-class 的支持。"}
{"publishtime": "2017/05/01·", "title": "Linux 下网络协议分析器 Wireshark 使用基础", "desc": " Wireshark 是 Kali 中预置的众多有价值工具中的一种。与其它工具一样，它可以被用于正面用途，同样也可以被用于不良目的。当然，本文将会介绍如何追踪你自己的网络流量来发现潜在的非正常活动。"}
{"publishtime": "2017/06/06·", "title": "成就 CTO 的关键技能是什么？", "desc": "什么是成为 CTO 的关键技能？"}
{"publishtime": "2017/05/11··", "title": "什么？项目延期有解药？", "desc": "当我们要考虑如何让项目不延期时，我们是否做到让每个员工都满负荷了？我们追求的是不延期，还是追求更卓越的产品？"}
{"publishtime": "2017/05/18··", "title": "大白话解释 Git 和 GitHub", "desc": "本文旨在使用通俗易懂的文字，讲解版本控制背后的理论，以便你能对程序员们如何工作有个全局概念。本文不涉及代码，不用下载啥东西，循序渐进，不关注繁复细节，只有文字和一些不怎么漂亮的手绘涂鸦。"}
{"publishtime": "2017/05/10·", "title": "如何将 MySQL 查询速度提升 300 倍", "desc": "在进行性能分析前，需要先定位耗时查询。MySQL 提供了内建的耗时查询日志。使用前，打开 my.cnf 文件，将slow_query_log 设置为”On”。 同时将 long_query_time 设置为一个对一次查询来说比较慢的时间（秒数），比如 0.2。"}
{"publishtime": "2017/06/06·", "title": "Redis 源码学习之 Redis 事务", "desc": "Redis作为一个内存型数据库，同样支持传统数据库的事务特性。这篇文章会从源代码角度来分析Redis中事务的实现原理。"}
{"publishtime": "2017/04/30··", "title": "Ubuntu 放弃战斗，Linux 桌面的悲哀", "desc": "Ubuntu 做为全世界 Linux 界的桌面先驱者和创新者，突然宣布放弃自己多年开发的 Unity，相当于在桌面领域，直接放弃了战斗向微软投降，不仅仅是 Linux 桌面的悲哀，更是对于全球 Linux 黑客坚信 Linux 必胜信心的极大打击。"}
{"publishtime": "2017/05/17·", "title": "做数据分析时，R 用户如何学习 Python？", "desc": "本文是帮助 R 用户增强技能和为数据科学进阶而学习 Python (从零开始)。毕竟，R 和 Python 是数据科学从业者必需掌握的两门最重要的编程语言。"}
{"publishtime": "2017/05/10··", "title": "重构之十六字心法", "desc": "旧的不变、新的创建、一步切换、旧的再见。大道至简，一旦领悟并掌握了这个心法，就发现自己一下从之前狭义的代码重构中跳脱出来，任何广义上的重构都立刻变得有章可循。"}
{"publishtime": "2017/06/06··", "title": "程序员最核心的竞争力是什么？", "desc": "社招面试时，有一个问题几乎是必问的：你为什么要离开上一家公司？ 其实这个问题主要是想试探一下求职者的核心诉求，并借此预估一下他在本公司工作的稳定性。常见的答案也无非就是这么几种：对薪酬不满意、干得不爽，或者是想换个环境。"}
{"publishtime": "2017/04/30·,·", "title": "趣文：什么时候该加入创业公司？", "desc": "本文以诙谐的口吻，描述了处于各阶段的创业公司的工作体验。加入起步阶段的公司，幻想着发达后买小岛；加入刚融资种子轮的公司，幻想着挑着城市买别墅……"}
{"publishtime": "2017/05/17·", "title": "详解 awk 工具的使用方法", "desc": "awk 是一个强大的文本分析工具。它不仅是 Linux 中，也是任何环境中现有的功能最强大的数据处理引擎之一。相对于 grep 的查找，sed的编辑，awk在其对数据分析并生成报告时，显得尤为强大。"}
{"publishtime": "2017/06/05··", "title": "这10本由浅入深的好书，或让你成为机器学习领域的专家", "desc": "机器学习是个跨领域的学科，而且在实际应用中有巨大作用，但是没有一本书能让你成为机器学习的专家。在这篇文章中，我挑选了 10 本书，这些书有不同的风格，主题也不尽相同，出版时间也不一样。因此，无论你是新手还是领域专家，一定能找到适合你的。"}
{"publishtime": "2017/05/09·,·", "title": "代码只是事业的 5%，程序员创业注意事项", "desc": "代码只是程序员技术创业中的 5%，还要做长远考虑，要有耐心，产品设计要简单易用，勇于删除某些已经花了时间做了但不奏效的功能。"}
{"publishtime": "2017/04/27··", "title": "最大成人网站的安全做得比某些安全公司还要好！", "desc": "2016 年 10 月左右发生过几起 DDoS 攻击事件。Dyn 攻击事件使得 Twitter、Amazon  等客户受到不同程度的影响。通过深入研究和缜密思考，我由表象发现，P***Hub 似乎在信息安全方面比一些所谓的“安全”公司做得更好。"}
{"publishtime": "2017/05/17·", "title": "为何编程如此之难？Erlang 之父的感触", "desc": "多年前我曾一度认为编程很简单，然而随着岁月的流逝，我终于意识到编程并不是件容易的事。这是因为，我所认为的「究竟什么是编程」和「程序员到底是做什么的」，在感知上已经渐渐地发生了转变。"}
{"publishtime": "2017/06/05·", "title": "谷歌地图基于 ML 的停车难度预测", "desc": "据英国每日电讯报报道，平均每位司机在找车位上要花费 2549 个小时，也就是106 天。这些是英国的统计数据，但是我打赌住在美国大都市的司机花在找车位上面的时间并不会比这个少。"}
{"publishtime": "2017/05/09·", "title": "SSH 协议端口号 22 背后的故事", "desc": "为什么 SSH（安全终端）的端口号是 22 呢，这不是一个巧合，这其中有个我未曾诉说的故事。 "}
{"publishtime": "2017/04/27··", "title": "我为什么不在乎人工智能", "desc": "有人听说我想创业，给我提出了一些“忽悠”的办法。他们说，既然你是程序语言专家，而现在人工智能（AI）又非常热，那你其实可以搞一个“自动编程系统”，号称可以自动生成程序，取代程序员的工作，节省许许多多的人力支出，这样就可以趁着“AI 热”拉到投资。"}
{"publishtime": "2017/05/16·", "title": "Quora 在 2017 年是如何运用机器学习的", "desc": "Quora 的工程经理 Nikhil-Dandekar 讲解 Quora 在 2017 年如何运用机器学习来优化问题检索、邀请、回答的排序和广告等。"}
{"publishtime": "2017/06/05··", "title": "如何从业余爱好者自学进阶成专业开发者", "desc": "几年前，我交替干着园艺工作和餐饮的工作。那时候我刚离开大学，还不知道我这一生到底该干什么。我有很多想法，但是没有方向。"}
{"publishtime": "2017/05/09·", "title": "API 的历史", "desc": "历史无处不在。研究我们来自何方，有助于指引我们前行。科技的发展日新月异，但时常停一下匆忙的脚步，稍稍回顾一下历史，却总是有益的。下面就让我们来看一看 API 的历史。"}
{"publishtime": "2017/04/27··", "title": "不惜一切代价，远离这 10 种不靠谱的同事", "desc": "有毒之人（Toxic People）不讲逻辑。他们中一些人不知道自己对周围人的负面影响，另一些人似乎以制造混乱和惹怒别人取乐。本文列举了工作中的 10 种不靠谱的同事，以及如何保护自己并避免跟他们接触。"}
{"publishtime": "2017/05/16··", "title": "一名 40 岁“老”程序员的反思", "desc": "我是一名程序员，几个月前刚过完 40 岁生日。某个星期六的早晨，我参加了一个 React Native 技术交流会，演讲者正在竭力说服我们为什么它会成为移动开发领域真正的下一个大事件。但对我来说，它有点像 15 年前的 JSP……"}
{"publishtime": "2017/06/04··", "title": "顺丰菜鸟大战背后真实原因，也许没有那么复杂", "desc": "顺丰和菜鸟的争论越来越火。我是一名老顺丰，对于顺丰有非常深厚的感情，而菜鸟是我非常喜欢的一家公司。两家公司我都曾认真写文分析过，也收到很好的反馈。关于两家公司的争吵，不宜再去蹭热点。我想换些角度去讨论这个事情。"}
{"publishtime": "2017/05/09·", "title": "以程序员的名义，分析 “人民的名义”", "desc": "我自小就惧怕吵架，觉得人不该像公鸡，脸红脖子粗的掐架特别不好，人就该斯斯文文的。 这让我爱上了官场剧，不论是古代的官场剧，还是当代的官场剧，都喜欢。官员们聊起天来不动声色，暗藏机锋，生死对决都是在谈笑间搞定，这都让我啧啧称羡。 所以，我是要看 “人民的名义” 的。"}
{"publishtime": "2017/04/27··", "title": "这个时代会残酷惩罚不肯改变的人", "desc": "       花点时间，有点耐心，看完下面的这个故事！"}
{"publishtime": "2017/05/15·", "title": "Linux kernel 的设计是否已经过时？", "desc": "Linux 多年来取得的成绩毋庸多言。但最近，reddit 上有人发起了一个话题，想知道 Linux 的内核设计是否已经过时，并得到了一些有趣的答案。"}
{"publishtime": "2017/06/02··", "title": "不要再争论代码风格了！", "desc": "用制表符（Tab）还是空格（Space）？在同一行中使用大括号，还是新起一行？每行是 80 个字符，还是 120 个？程序员都喜欢争论这类型的事情…… 对于这些争论，我在文末会给出一个明确的答案。"}
{"publishtime": "2017/05/08··", "title": "开发者的副项目 ，归公司所有吗？", "desc": "程序员在非工作时间（比如：晚上或节假日）做的副项目（side project），版权是不是归雇主所有？"}
{"publishtime": "2017/05/15·", "title": "程序员必备的项目时间估算指南", "desc": "有位 PM 最近告诉我她面临的一个难题：“软件工程师永远不能估算出他们的项目需要多长时间。我该怎么办？”还有两位 CEO 最近也告诉我同样的事情。我们工程师也都深有体会。"}
{"publishtime": "2017/04/26·", "title": "谷歌人工智能背后的大脑", "desc": "谷歌在 1998 年成立，Jeff Dean 1999 年加入公司，是早期员工之一。他在公司的成长过程中扮演了重要角色，设计并实现了支撑谷歌大部分产品的分布式计算基础架构。"}
{"publishtime": "2017/06/02·", "title": "理想的创业合伙人是什么样的？", "desc": "Sam Altman 是全球知名的创业孵化机构 Y Combinator 的 CEO。经常有人问他「什么样的人，才是理想的创业合伙人」。他在本文中用 OpenAI 的 CTO 作为实际例子，分享了他的看法。"}
{"publishtime": "2017/05/05··", "title": "王小波的计算机水平到底有多好？", "desc": "王小波的计算机水平到底有多好，在王小波自己的小说中，王小波非常骄傲地说，写书的软件都是自己编写的，王小波是自学的还是教的？都会什么语言？"}
{"publishtime": "2017/05/14··", "title": "我是如何意外阻止了勒索病毒的全球攻击", "desc": "我现在终于有时间写写周五发生的 WannaCrypt 病毒事情了，这两天各种电话和 Skype 都快把我催爆了，这件事情也花掉了我整个周末的时间。也许你已经从各种媒体上听说了此事，但是我觉得你最好听听我的版本。"}
{"publishtime": "2017/04/26·", "title": "2016 年度顶级开源创作工具", "desc": "无论你是想修改图片、编译音频，还是制作动画，这里的自由而开源的工具都能帮你做到。 "}
{"publishtime": "2017/05/31··", "title": "没有业余代码项目，但这不说明我毫无激情", "desc": "在一次面试过程中，招聘方想看我写的代码，然而他们也知道，我之前为其他公司写的代码不能展示。当然，这不成问题，我可以给他们展示我正在做的众多业余项目中的任何一个。但问题是，我没有业余的代码项目可给他们看……"}
{"publishtime": "2017/05/04··", "title": "命令行的生活是如此的 F*ck", "desc": "你是不是经常在终端敲错命令，其实这都是因为该死的终端不配合，不能领会你的意思。"}
{"publishtime": "2017/05/13·", "title": "6 个编程范型将改变你对编程的看法", "desc": "本文介绍了一些比较小众的编程范型，也提到了一些小众的语言，作者希望借此让大家更多的了解一些不是主流的编程范型，进而改变对编程的看法和思考。"}
{"publishtime": "2017/04/26··", "title": "数据工程师的崛起", "desc": "本文作者以自己在 Airbnb、Facebook、Yahoo 做数据工程师的经验告诉大家：数据工程师的主要职责、当代数据工程的范畴，以及要做数据工程师都需要哪些技能。"}
{"publishtime": "2017/05/31·", "title": "为什么要给软件做测试？如何测试呢？", "desc": "有些人对这些问题有非常简单的回答。及时享乐型的程序员根本懒得去测试，快乐地活在当下。更严肃的程序员会告诉你软件测试是为了开发出高质量的产品。为了可以开发出高质量的产品，必须始终编写单元测试和集成测试，并做 QA 测试。"}
{"publishtime": "2017/04/25··", "title": "Windows 纸牌游戏是我开发的，但我没从中拿到一分钱", "desc": "用过 Windows 的朋友，应该对纸牌游戏不陌生。但有多少人知道这个小游戏的开发者是谁呢？"}
{"publishtime": "2017/05/04·", "title": "15 款炫酷的 Sublime Text 插件推荐", "desc": "Sublime Text 是目前最受欢迎的代码编辑器，因其高效、简洁和插件丰富等特点受到开发者的喜爱。本文筛选了开发者日常使用较多的 15 款 Sublime Text 插件。"}
{"publishtime": "2017/05/13··", "title": "向 Linus 学习，让代码具有 good taste", "desc": "在最近关于 Linus Torvalds 的一个采访中，Linus 提及了关于代码的 “good taste”。什么是 good taste？采访者请他展示更多的细节，于是，Linus Torvalds 展示了一张提前准备好的插图。 "}
{"publishtime": "2017/05/31··", "title": "经典的 Fork 炸弹解析", "desc": "Jaromil 在 2002 年设计了最为精简的一个Linux Fork炸弹，整个代码只有13个字符，在 shell 中运行后几秒后系统就会宕机。"}
{"publishtime": "2017/04/25··", "title": "25 个常用的 Linux iptables 规则", "desc": "一些常用的 Linux iptables 规则，请根据自己的具体需要再修改。"}
{"publishtime": "2017/05/04·", "title": "如何快速处理线上故障", "desc": "线上故障通常是指大规模的影响线上服务可用性的问题或者事件，通俗点讲就是：掉‘坑’里了，这个‘坑’就是线上故障！线上故障的处理过程可以形象地表达为：‘踩坑’、‘跳坑’、‘填坑’、‘避坑’。"}
{"publishtime": "", "title": "未知", "desc": "暂无简介"}
{"publishtime": "2017/05/29··", "title": "我是见鬼了么？这是史上最邪恶的脚本！没有之一！", "desc": "这是一个 bash shell 脚本，其中有若干可以整蛊（结仇）你的同事的小技巧——或者说恶作剧。看完之后，感觉不寒而栗，要是谁敢这样整我，我一定和他绝交！ "}
{"publishtime": "2017/04/25··", "title": "通过这 9 本开源书，学好 C++", "desc": "书籍非常具有个人主观性，编程类的书籍也不例外。但是不管书籍的风格，重点或者节奏如何，好的 C++ 编程书能带读者开启一段引人入胜的旅程，拓展 C++ 语言的能力，向读者展示如何使用 C++ 来构建各种东西。"}
{"publishtime": "2017/05/04··", "title": "一张优惠券引发的血案", "desc": "消失好久好久的小灰终于回归了。为啥消失这么久？被优惠券折腾惨了！"}
{"publishtime": "2017/05/27··", "title": "我想对所有新手程序员说些肺腑之言", "desc": "我编程的时间，已超过 20 年了。截至目前，我开的编程入门课，也有六七门了。传授编程的总时间，大约也有 1000 小时了。下面这些话，没有特别的前后顺序，我对自己学员不止说过一次。"}
{"publishtime": "2017/04/24··", "title": "边工作边带娃，我是如何在 1 年内拿到第 2 个学位和 5 个开发者认证的", "desc": "学习编程是一件很有挑战性的事情，尤其是在同时兼顾工作和带娃的情况下。尽管如此，我还是认为自己应该不走寻常路。"}
{"publishtime": "2017/05/03··", "title": "有哪些命令行的软件堪称神器？", "desc": "都有哪些命令行软件称得上是神器呢？"}
{"publishtime": "2017/05/26·", "title": "大型分布式团队的代码版本管理", "desc": "介绍这个话题，有两个原因：① 从开始工作到现在，我经历过没有代码版本管理、代码集中式管理，以及现在的分布式管理，我深刻体会到它在软件开发过程中的重要性；② 我在工作中遇到的很多客户都存在对于代码版本管理的各种问题、困惑和不同的需求。"}
{"publishtime": "2017/04/23··", "title": "35，40 甚至 50 岁转行做软件开发晚吗？看这 10 个成功故事", "desc": "常有人说 30 或 35 岁不适合做开发写代码了。那 35 岁以后转行做软件开发还可行么？ 35、40 甚至 50 岁之后才开始学习编程，年龄会不会太大了？让我们来看看 10 个成功转行软件开发的真实故事。"}
{"publishtime": "2017/04/24·", "title": "在苹果工作 12 年学到的创新经验", "desc": "她主要是在 90 年代的时候在苹果公司，和内容创造者、音乐公司打交道，奠定了后来推出 iPod 和 iTunes 的基础。要创新绝对不能搞众议、投票、民主这套，要有人拍板，用人不疑，疑人不用。"}
{"publishtime": "2017/05/03·", "title": "速度与激情 8 中的信息安全技术", "desc": "作为一个信息安全从业者，看完「速8」后有必要扒一扒里面的黑客技术。"}
{"publishtime": "2017/05/26·", "title": "维护大型开源项目，是怎样的体验？", "desc": "参与开源的开发者也越来越多，GitHub 的活跃度也佐证了这种现象。Nolan 在《做开源项目的维护者，是怎样一种体验？》分享了他的感受和经验。伯乐在线另外摘编了 2 位国内程序员的分享。"}
{"publishtime": "2017/04/22··", "title": "为何有些牛逼的计算机系教授不去公司赚大钱而是选择教书和做研究", "desc": "牛逼的计算机教授本可以去公司赚更多的钱，为什么他们喜欢去教学和做研究呢？我只是想知道这些教授和研究员们是怎么想的，并不是怀疑他们的选择。"}
{"publishtime": "2017/04/24·", "title": "机器学习流行趋势一览", "desc": "作者分析了近 5 年内超过 28,000 份机器学习论文，对机器学习和深度学习的模型、算法的流行趋势做了整理和总结。"}
{"publishtime": "2017/05/03·", "title": "机器是如何学会歧视的？机器学习中的偏见", "desc": "倘若 AI 接管了我们的生活，那不大会发生人类与机器人之间的战争，因为 AI 已可以肉体上奴役我们了。相反， AI 程序已经通过机器学习算法为我们推荐喜欢的电影、在照片上认出哪个朋友可能会拒绝给你借钱等等。既然人类创造了这些算法，它们就容易产生偏见，从而导致糟糕的决策和结果。"}
{"publishtime": "2017/05/03·", "title": "DevOps 发展的 9 个趋势", "desc": "DevOps包含了太多方面的技术和实践，很难通过一个统一的工具链来描述其发展。有幸作为主编参与了最新一期技术雷达的译制，作为DevOps的爱好者，在这一过程中看到DevOps未来发展的几个趋势。"}
{"publishtime": "2017/04/21··", "title": "程序员晚上最常用的编程语言", "desc": "Stack Overflow 的公开数据集是个好东西，之前 SO 家程序员 Julia Silge 在 2 月份根据数据集做了一次「程序员在周末常用的那些编程语言」。前几日 SO 家程序员 David Robinson 对「程序员晚上常用编程语言」做了一次分析。"}
{"publishtime": "2017/04/23·", "title": "千万千万不要运行的 Linux 命令", "desc": "文中列出的命令绝对不可以运行，即使你觉得很好奇也不行，除非你是在虚拟机上运行（出现问题你可以还原），因为它们会实实在在的破坏你的系统。"}
{"publishtime": "2017/05/25··", "title": "为何你会觉得写测试很烦？", "desc": "在学校里学了几年的编程，很少人有机会去写测试，对测试这门手艺活当然很陌生了。摆正思想，多练习，自然就熟练了。"}
{"publishtime": "", "title": "未知", "desc": "暂无简介"}
{"publishtime": "2017/04/20··", "title": "用户 4 亿多，Instagram是如何做持续部署的？", "desc": "Instagram 每天部署后端代码大约是 30~50 次。无论什么时候，只要工程师提交了修改到服务器，都会做一次部署，而大多数情况下都无人参与。尤其是在 4 亿多用户规模之下，这听起来很疯狂。"}
{"publishtime": "", "title": "未知", "desc": "暂无简介"}
{"publishtime": "", "title": "未知", "desc": "暂无简介"}
{"publishtime": "2017/04/20·", "title": "适用于开发者的最佳火狐插件", "desc": "嗨…你还记得火狐么？ 谷歌的 Chrome 浏览器现在是浏览器群英中的王者，不过火狐依然独树一帜并且依旧是网页应用开发者最好的浏览器。我知道它稍微有点慢，并且略占内存，不过其各种定制化功能绝对是无懈可击的。我们列举出了一些我们收藏的火狐插件，让我们作为开发者的生活变得更加简单，并且希望它能帮助节省你一点点时间。"}
{"publishtime": "2017/04/19·", "title": "在微服务中使用领域事件", "desc": "领域事件主要用于解耦微服务，此时各个微服务之间将形成最终一致性。事件风暴活动有助于我们对微服务进行拆分，并且有助于我们深入了解某个领域。领域事件作为已经发生过的历史数据，在建模时应该将其创建为不可变的特殊值对象。存在多种方式用于发布领域事件，其中“在聚合中临时保存领域事件”的方式是值得推崇的。"}
{"publishtime": "2017/04/19··", "title": "MySQL 主从复制搭建，基于日志（binlog）", "desc": "什么是MySQL主从复制？简单来说，就是保证主SQL（Master）和从SQL（Slave）的数据是一致性的，向Master插入数据后，Slave会自动从Master把修改的数据同步过来（有一定的延迟），通过这种方式来保证数据的一致性，就是主从复制。"}
{"publishtime": "2017/04/19·,·", "title": "谷歌大牛的 C 语言编程建议和技巧", "desc": "① 不要断定程序会在什么地方耗费运行时间；④ 花哨的算法比简单的算法更容易有 bug，而且实现起来也更困难。"}
{"publishtime": "2017/04/17··", "title": "技术面试宝典： 很全面的算法和数据结构知识（含代码实现）", "desc": "本文汇总了程序员技术面试时需要了解的算法和数据结构知识。"}
{"publishtime": "2017/04/17·", "title": "初级开发者面试中的不合理问题", "desc": "我有很多刚做开发的朋友，有位给我讲了他在应聘初级开发工程师时的事。下面就说说我和另一个朋友是如何解题，两个高级工程师来解决这个初级工程师的面试题，显得有点大材小用，但结果令人出乎意外。"}
{"publishtime": "2017/04/17·", "title": "大白话解析模拟退火算法", "desc": "介绍模拟退火前，先介绍爬山算法。爬山算法是一种简单的贪心搜索算法，该算法每次从当前解的临近解空间中选择一个最优解作为当前解，直到达到一个局部最优解。"}
{"publishtime": "2017/04/17·", "title": "大白话讲解遗传算法", "desc": "遗传算法 ( GA , Genetic Algorithm ) ，也称进化算法 。 遗传算法是受达尔文的进化论的启发，借鉴生物进化过程而提出的一种启发式搜索算法。因此在介绍遗传算法前有必要简单的介绍生物进化知识。"}
{"publishtime": "2017/04/17··", "title": "Linux DNS 服务器安装、配置和维护", "desc": "每个 IP 地址都可以有一个主机名，主机名由一个或多个字符串组成，字符串之间用小数点隔开。有了主机名，就不要死记硬背每台 IP 设备的 IP 地址，只要记住相对直观有意义的主机名就行了。这就是 DNS 协议所要完成的功能。"}
{"publishtime": "2017/04/17··", "title": "软件的复杂性：命名的艺术", "desc": "想把一个东西写好很难。为什么呢？因为只要写好了，才会有很好的阅读体验。我们往往关注了前者而忽略了后者。我们忘记了代码只写一次，但要读很多次。"}
{"publishtime": "2017/04/13··", "title": "编程语言的叛逃路线，猜猜 PHP 转投最多的是？", "desc": "为什么我们要从 X 语言转到 Y 语言，这类主题的技术文章，网上有很多。程序员 Erik 看过某篇文章后，突发奇想，是不是可以把这些文章归纳起来，生成一个关于从 X 语言转到 Y 语言的表。他说干就干！"}
{"publishtime": "2017/04/15·", "title": "Bloom Filter 概念和原理", "desc": "Bloom Filter 是一种空间效率很高的随机数据结构，它利用位数组很简洁地表示一个集合，并能判断一个元素是否属于这个集合。"}
{"publishtime": "2017/04/01··", "title": "APP「登录注册模块」详解", "desc": "设计一个好的登录注册系统并不是很轻松。 登录注册的方式都有哪些？登录注册的流程都是怎样的？登录过程中的异常状态怎么处理？怎样设计一个完整的登录注册流程等等，其间还要考虑大量的细节问题。"}
{"publishtime": "2017/04/11··", "title": "未来是属于算法的，不是代码", "desc": "大数据的时代已经来临。数据带来的狂潮就犹如又一次工业革命一样席卷着人类。在大数据的时代，人类对世界的理解方法从有限具体向抽象过渡，这也就是为什么算法比代码更加重要的原因。"}
{"publishtime": "2017/04/15··", "title": "马拉松式学习与技术人员的成长性", "desc": "一个人，要想在某方面获得睿智，唯一的办法就是持续地学习、调整、提高、成长。这个过程需要耐力和坚持，而最终你会收获成功和乐趣。"}
{"publishtime": "2017/04/01·", "title": "Apache Spark 内存管理详解", "desc": "Spark 是基于内存的分布式计算引擎，本文旨在按照堆内和堆外内存规划、内存空间分配、存储内存管理和执行内存管理的线索，全方位梳理 Spark 内存管理的脉络。"}
{"publishtime": "2017/04/11··", "title": "Linux 命令行工具使用小贴士及技巧（4）", "desc": "在这第四期、也是最后一期文章中，我们会讨论别名的概念以及你可以如何使用它们使你的命令行导航更加轻松和平稳。 "}
{"publishtime": "2017/04/15·", "title": "负载均衡原理的解析", "desc": "不能狭义地理解为分配给所有实际服务器一样多的工作量，因为多台服务器的承载能力各不相同，这可能体现在硬件配置、网络带宽的差异，也可能因为某台服务器身兼多职……"}
{"publishtime": "2017/04/01·", "title": "Nginx+Tomcat 配置负载均衡集群", "desc": "本文详细介绍Nginx和Tomcat来配置负载均衡集群的过程以及Nginx的复杂均衡策略。"}
{"publishtime": "2017/03/31·", "title": "神秘的 10 倍效率程序员", "desc": "在编程的神话中，一个 10 倍效率的程序员可以完成一个普通程序员 10 倍的工作。"}
{"publishtime": "2017/04/15·", "title": "程序员的“认知失调”", "desc": "“不可能啊”、“一定是服务器的原因”、“我的程序不应该有问题啊”，这些年工作听到的最多的就是这些话了，程序员都是比较自信的，总是觉得自己的程序肯定没问题。"}
{"publishtime": "2017/04/11·", "title": "Linux 命令行工具使用小贴士及技巧（3）", "desc": "CDPATH 环境变量时一把双刃剑，如果没有掌握完善的知识和随意使用，可能会令你陷入困境，并花费你大量宝贵时间去解决问题。"}
{"publishtime": "2017/03/31·", "title": "从某网站的支付泄漏看安全实践", "desc": "混用测试环境与产品环境、明文记录用户敏感数据、违反相关技术标准、公网暴露数据库密码。X网站的安全事故对很多企业的IT部门都是警示，它提醒我们，随着互联网的发展，软件安全和信息安全不再是安装防火墙所能保障的，它需要企业从软件开发的第一分钟就开始关注安全并积极采取行动，把软件安全内建到研发过程中。"}
{"publishtime": "2017/04/10··", "title": "技术的成长曲线", "desc": "小李毕业后在一家公司做软件工程师，转眼间一年多的时间已经过去了。回想刚毕业那会，他是怀着无比忐忑的心情进入了这家公司的技术部门。各种新奇的开发工具，叫不上名字的众多软件框架，庞大的代码库，井然有序的工作流程，都是小李以前在学校里不曾遇到过的，这让他感到了前所未有的压力。"}
{"publishtime": "2017/04/14··", "title": "200 行代码实现一个简单的区块链", "desc": "区块链的基础概念很简单：一个分布式数据库，存储一个不断加长的 list，list 中包含着许多有序的记录。本文将通过 200 行 JS 实现的超级简单的区块链，来帮助大家理解。"}
{"publishtime": "2017/03/31··", "title": "Emacs 是否真的能煮咖啡？", "desc": "坊间有传言曰:“emacs 无所不能, 甚至能够用来煮咖啡!”"}
{"publishtime": "2017/03/25··", "title": "我不再强求生活完美，而是让它有趣", "desc": "Dropbox 的 CEO Drew Houston 是 MIT 2005 届校友，本文是他在 2013 年 6 月 7 日麻省理工学院第 147 届毕业典礼上的演讲。"}
{"publishtime": "2017/04/10··", "title": "开发者技能修炼的五个等级", "desc": "这里的阶梯划分出自我过往八年的工作经验，对于第四、第五阶梯，我本无意划出高下之分，怎奈文笔功力有限，只好粗断为两个部分。回顾前文，我对于开发者的阶段划分又有了新的想法，开发者在历经以上五个层级之后又该如何发展，是科学家还是哲学家？我想听听你的见解。"}
{"publishtime": "2017/04/14·", "title": "用户熟悉的设计，才是最好的设计", "desc": "在设计上没有太大变动，用户的学习成本低了，也降低了工作难度。"}
{"publishtime": "2017/03/30·", "title": "Linux 命令行工具使用小贴士及技巧（1）", "desc": "无论你的技术能力水平怎么样，这篇文章中的一些小贴士和技巧都会对你有所帮助。 "}
{"publishtime": "2017/03/24··", "title": "看漫画学 SELinux 强制策略", "desc": "SELinux 是一个功能强大的标签系统，控制着内核授予每个进程的访问权限。最主要的特性是类型强制，策略规则定义的进程访问权限基于进程被标记的类型和客体被标记的类型。"}
{"publishtime": "2017/04/10··", "title": "零 bug 策略：要么立马修复，要么忽略", "desc": "所谓的 0 Bug 策略：当发现一个新的 bug，要么立刻马上修复，要么直接忽略不再理会。与对待生活中的人与事一样，不是每个 bug 都值得去花时间的。你得成长到有能力去判断什么该花时间、什么不该花时间。"}
{"publishtime": "", "title": "未知", "desc": "暂无简介"}
{"publishtime": "2017/03/29··", "title": "C♯ 7 中的 Tuple 特性", "desc": "Tuple是异类对象的有序序列。 我们经常可以写出返回多个值的方法，所以我们需要创建一个包含多个数据元素的简单结构。 "}
{"publishtime": "2017/03/24·", "title": "远程办公这 5 年的感受", "desc": "了解到可以在家办公、可以选择位置无关的生活方式的时刻，对我来说是一个非常重要的时刻。在此之前，我还从未有过“工作自由”之类的概念。"}
{"publishtime": "2017/04/09·", "title": "第 0 期技术微周刊，从经典的 Linux 命令系列开始", "desc": "每周一期，一期包括和技术相关的重要业界资讯 和 技术文章与动态。周刊的内容甄选自一周的精彩内容，有技术干货、技术动态，也有技术人生，末尾还加了小彩蛋。"}
{"publishtime": "2017/03/29··", "title": "为什么机器学习行业的发展离不开 “开源”", "desc": "2016 年底，Google DeepMind 开源了它们的机器学习平台 — DeepMind Lab。尽管像霍金教授这样的专家曾就人工智能技术发出过警告，谷歌仍决定向其他开发人员开源其软件，这也是它们进一步发展机器学习能力的一部分。"}
{"publishtime": "2017/03/24··", "title": "没时间思考，思维之死", "desc": "没时间思考。一有空闲就刷手机、刷社交媒体。一天下来好像接受了许许多多的信息，但却没有动脑思考消化这些信息。"}
{"publishtime": "2017/04/08··", "title": "我是小有成就，但我过不了白板面试", "desc": "关于程序员面试时现场写代码，大家还记得 2015 年 6 月的一个新闻，知名包管理工具 Homebrew 的作者 Max Howell 去 Google 面试。因为他没能写出反转二叉树算法，最后被 Google 拒绝了。"}
{"publishtime": "2017/03/29··", "title": "不给代码写文档，让代码文档化", "desc": "要不要给代码写文档？需要给代码写文档吗？这是程序员讨论了很久的一个话题。我曾经觉得这个话题实在是让人难以应付。也认为除去一些特殊的情况（比如编写公用 API），代码文档并不是那么必要。"}
{"publishtime": "2017/03/03·", "title": "搜索引擎原理及使用", "desc": "此项目是自己学习搜索引擎过程中的一些心得，在使用 Go 语言的时候，发现了悟空这个搜索引擎项目，结合此项目代码以及《信息检索导论》，自己对搜索引擎的原理是实现都有了一个初步的认识，然后结合工作中可能遇到的场景，做了一个简单的 Demo。"}
{"publishtime": "2017/03/23·", "title": "Linux 日志终极指南", "desc": "虽然提取的时候，不总是和你想的一样简单，但是日志中有大量信息在等着你。在这部分，我们会讲一些基本分析示例，你可以马上拿来处理你的日志（只是搜索里面有什么）。"}
{"publishtime": "2017/04/07··", "title": "开发者的实用 Vim 插件（3）", "desc": "在之前已介绍了 Pathogen 插件管理包安装基本的 vim 插件，也提及了另外三个插件：Tagbar、delimitMate 和 Syntastic。现在，在最后一部分将介绍另一个十分有用的插件 a.vim。 "}
{"publishtime": "2017/03/28·", "title": "Etsy 在试验了一些 SEO 小技巧后得出的结论", "desc": "1，网页标题越短越好，搜索关键词匹配的百分比越高越好；2，Meta description尽量长；3，网页里要使用 H1."}
{"publishtime": "2017/03/02··", "title": "编程能力与编程年龄", "desc": "程序员这个职业究竟可以干多少年，在中国这片神奇的土地上，很多人都说只能干到30岁，然后就需要转型，每每我听到这样的言论，都让我感到相当的无语。今天，看到一篇论文，写下这篇文章，送给那些和我一样准备为技术和编程执着和坚持的人。"}
{"publishtime": "2017/03/23··", "title": "下一代蓝领职业大军是程序员", "desc": "提起程序员，在很多人的印象里是扎克伯格那样的人用技术改变世界，然而现实是像小扎那样的人只是很小一部分，更多人拿着平常的薪水做着默默无闻的工作。《连线》文章认为，未来的蓝领职业就是程序员"}
{"publishtime": "2017/03/28·", "title": "无人驾驶技术与个人隐私的终结", "desc": "随着计算机视觉的发展，无人驾驶中使用到的技术会将它所经过的每一处都识别记录下来并上传至互联网，对我们的隐私造成巨大的冲击。"}
{"publishtime": "2017/04/07··", "title": "聊聊分布式事务", "desc": "分布式事务场景如何设计系统架构及解决数据一致性问题，个人理解最终方案把握以下原则就可以了，那就是：大事务=小事务（原子事务）+异步（消息通知）。解决分布式事务的最好办法其实就是不考虑分布式事务，将一个大的业务进行拆分，整个大的业务流程，转化成若干个小的业务流程，然后通过设计补偿流程从而考虑最终一致性。"}
{"publishtime": "2017/03/02··", "title": "推荐每个程序员都看的技术演讲", "desc": "我喜欢优秀的技术演讲。我不仅喜欢观看这类演讲，并乐于与人分享。最近我有充足的空闲时间，于是整理出了一个“每个程序员必看”的技术演讲列表。在选材时，我并没有把演讲的主题局限于具体的语言或库，而是选择了一些有宏观视野的内容。"}
{"publishtime": "2017/03/21··", "title": "没有功能需求设计文档？对不起，拒绝开发！", "desc": "在很多软件公司，特别是一些创业型的团队中，对于这样的情景可能大家都很熟悉：项目经理或者产品经理（产品狗）口头或者简单记录一下软件产品的大致要做的功能，直接就让研发团队的兄弟（程序猿）去狂撸代码。然后他就去喝茶撩妹或者回家陪老婆了…"}
{"publishtime": "2017/03/28·", "title": "关于新媒体盈利模式的讨论", "desc": "风投Hunter Walk、Kickstarter前PM、纽约时报CTO三人关于线上媒体、自媒体、艺术家们如何在网上赚钱的讨论。"}
{"publishtime": "2017/04/07··", "title": "自动补全不算什么，一键直达目录才是终极神器", "desc": "autojump 是一个命令行工具，它允许你可以直接跳转到你喜爱的目录，而不用管你现在身在何处。"}
{"publishtime": "2017/03/01··", "title": "怎样写出漂亮整洁的代码？聊聊 Clean Code 的编码、重构技巧", "desc": "Clean Code，顾名思义就是整洁的代码，或者说清晰、漂亮的代码，相信大多数工程师都希望自己能写出这样的代码。"}
{"publishtime": "2017/03/21··", "title": "和程序员谈恋爱，是什么样的体验", "desc": "我最近读了一篇关于为什么应该和程序员约会的文章。 当然了，那篇文章就是程序员写的。"}
{"publishtime": "2017/03/28··", "title": "周鸿祎：很多程序员一看就知道不会创业", "desc": "很多人都向往着有一天自己创业，程序员更是如此。如果你想创业，那么该怎样创业、需要有哪些准备、自己还有什么不足等等这些问题你考虑过吗？"}
{"publishtime": "2017/04/07··", "title": "阿里巴巴 Java 开发手册评述", "desc": "我想阿里巴巴发布的 Java 开发手册之所以叫做”开发手册”，而不是像 Google 那样叫做 “Style Guide(样式风格)”，是因为它不仅仅局限于style guide 这一方面。"}
{"publishtime": "2017/03/01·", "title": "防范 CSRF 跨站请求伪造", "desc": "本文将简要介绍CSRF产生的原因以及利用方式，然后对如何避免这种攻击方式提供一些可供参考的方案，希望广大程序猿们都能够对这种攻击方式有所了解，避免自己开发的应用被别人利用。"}
{"publishtime": "2017/03/20·", "title": "长 URL 转短链接的简单设计与实现", "desc": "非常多的时候，我们不想在分享的时候采用长长的链接。本文主要介绍代码实现短链接生成。"}
{"publishtime": "2017/03/28··", "title": "我也 30 了，来谈谈程序员的迷茫年龄", "desc": "今年 30 了，到了传说中程序员最应该迷茫的年龄了，那么我迷茫吗，没的说，按照某司 34 岁就要劝退的要求，我还有 4 年的程序生涯。"}
{"publishtime": "2017/04/07··", "title": "趣文：程序员相亲指南", "desc": "王美丽有些烦躁。她实在对程序员们失望了。这群码农，能把计算机搞得七颠八倒的，和女人打起交道竟这么笨蛋。"}
{"publishtime": "2017/02/28··", "title": "Nginx 日志分析及性能排查", "desc": "最近一直在做性能排查，思路就是根据分析nginx日志，得到响应耗时的url、以及请求时间，再得到这段时间的请求量，并发量，分析是并发的原因，还是本身就比较慢，如果是应用本身的原因"}
{"publishtime": "2017/03/20··", "title": "常坐电脑前面，这些健康问题你注意到了么？", "desc": "本文要讨论的健康问题其实并不仅仅限于程序员，其他那些需要长期坐在电脑前的工作，比如：网络编辑、网站管理员、IT 从业人员等，也会面临同样的健康问题。除了指出问题，本文还给出了相应建议。"}
{"publishtime": "2017/03/28·", "title": "提高 Unity 中 C# 代码质量的 21 条准则", "desc": "本文将《Effective C# Second Edition》一书中适用于 Unity 游戏引擎里使用 C# 的经验之谈进行了提炼，总结成为21条准则，供各位快速地掌握这本书的知识梗概，在 Unity 中写出更高质量的 C# 代码。"}
{"publishtime": "2017/04/06··", "title": "没热情就不够格做程序员么？", "desc": "作者根据自身软件开发的经验，加上整理比尔·盖茨，Peter Thiel 等各大名家曾经提过的理论及其中矛盾，试图找出软件开发生涯中的付出的努力、热情以及私人生活的平衡。"}
{"publishtime": "2017/02/28··", "title": "全面了解 Nginx 主要应用场景", "desc": "Nginx能做什么？反向代理；负载均衡；HTTP服务器（包含动静分离）；正向代理。以上就是我了解到的Nginx在不依赖第三方模块能处理的事情。接下来本文就详细说说这些功能。"}
{"publishtime": "2017/03/20··", "title": "为什么说 LINQ 要胜过 SQL", "desc": "如果你还没有沉溺于 LINQ，就会想这有啥大惊小怪的。SQL 并没有坏掉，为什么还要对它进行修补呢? 为什么我们还需要另外一种查询语言呢?"}
{"publishtime": "2017/03/28·", "title": "malloc 背后的系统知识", "desc": "面试的时候经常会被问到 malloc 的实现。从操作系统层面来说，malloc 确实是考察面试者对操作系统底层的存储管理理解的一个很好的方式，涉及到虚拟内存、分页/分段等。下面逐个细说。"}
{"publishtime": "2017/04/06··", "title": "适用于开发者的最佳 Chrome 扩展工具", "desc": "Chrome 备受开发者青睐，它提供了一套 Chrome DevTools，是 Web开发和性能调试的必备工具，旨在为开发人员提供更轻松的生活。 本文列出了一些对开发者的最有用的、用户友好和功能丰富的扩展工具并附上评分。"}
{"publishtime": "2017/02/27··", "title": "排序算法的彩色可视化，一目了然", "desc": "9 种排序算法的彩色可视化，各算法的速度快慢，一目了然。"}
{"publishtime": "2017/03/20·", "title": "编写好代码：如何减少代码的认知负荷", "desc": "Bug 少，性能好，容易修改。好的代码影响深远，而且它可能是产生 10 倍工作效率的开发者的主要原因。尽管好代码十分重要，但开发新手却不得要领。"}
{"publishtime": "2017/03/28··", "title": "为什么优秀的程序员喜欢命令行？", "desc": "我周围就有很多非常牛的程序员，无一例外都非常擅长在命令行中工作。那什么叫熟悉命令行呢？简单来说，就是90%的日常工作内容可以在命令行完成。当然，喜欢／习惯使用命令行可能只是表象，其背后包含的实质才是优秀的程序员之所以优秀的原因。"}
{"publishtime": "2017/04/04·", "title": "Linux 命令行工具使用小贴士及技巧（2）", "desc": "在本文中，我们将讨论如何使用 pushd 和 popd 命令在 Linux 命令行上获得更快的导航体验。 "}
{"publishtime": "2017/02/27·", "title": "Paxos 算法原理与推导", "desc": "Paxos算法在分布式领域具有非常重要的地位。但是Paxos算法有两个比较明显的缺点：1.难以理解 2.工程实现更难。"}
{"publishtime": "2017/03/18·", "title": "函数式编程从崛起到没落到再崛起", "desc": "λ演算是关于函数组合的。函数组合是一种极富有表现力的组合软件的方法。本文将讨论函数组合在软件设计中的重要性。"}
{"publishtime": "2017/02/27··", "title": "ZooKeeper 原理及其在 Hadoop 和 HBase 中的应用", "desc": "ZooKeeper是一个开源的分布式协调服务，由雅虎创建，是Google Chubby的开源实现。分布式应用程序可以基于ZooKeeper实现诸如数据发布/订阅、负载均衡、命名服务、分布式协调/通知、集群管理、Master选举、分布式锁和分布式队列等功能。"}
{"publishtime": "2017/04/04··", "title": "10 个常见的 Linux 终端仿真器", "desc": "对于 Linux 用户来说，最重要的应用程序之一就是终端仿真器。它允许每个用户获得对 shell 的访问。 "}
{"publishtime": "2017/03/18·", "title": "错误的抽象", "desc": "软件工程教科书教育我们，要把重复的代码抽取出来，变成函数或者类，美观实用好维护。实际上呢？往往随着时间的推移，原先抽象出来的类或者函数被改得凌乱不堪，还不如把原来重复的代码放回去……"}
{"publishtime": "2017/02/27··", "title": "HTTPS 为什么更安全，先看这些", "desc": "HTTPS 是建立在密码学基础之上的一种安全通信协议，严格来说是基于 HTTP 协议和 SSL/TLS 的组合。理解 HTTPS 之前有必要弄清楚一些密码学的相关基础概念，比如：明文、密文、密码、密钥、对称加密、非对称加密、信息摘要、数字签名、数字证书。"}
{"publishtime": "2017/04/03··", "title": "我为什么鼓励工程师写博客", "desc": "工程师该怎样才能突破自己能力瓶颈？写博客！工程师该怎样精进自己在职涯上所需要的能力？写博客！工程师该怎样才能保持学习与成长的动能？写博客！工程师该怎样才能证明自己的潜力与特质？写博客！"}
{"publishtime": "2017/03/18·", "title": "代码生成利器：IDEA 强大的 Live Templates", "desc": "对于这种小范围的代码生成，我们可以利用 IDEA 提供的 Live Templates功能。下面我来介绍一下Live Templates的用法。"}
{"publishtime": "2017/02/26··", "title": "也许，这样理解HTTPS更容易", "desc": "本文尝试一步步还原HTTPS的设计过程，以理解为什么HTTPS最终会是这副模样。但是这并不代表HTTPS的真实设计过程。在阅读本文时，你可以尝试放下已有的对HTTPS的理解，这样更利于“还原”过程。"}
{"publishtime": "2017/03/27·", "title": "卷积神经网络初探", "desc": "将神经网络应用于大图像时，输入可能有上百万个维度，如果输入层和隐含层进行“全连接”，需要训练的参数将会非常多。如果构建一个“部分联通”网络，每个隐含单元仅仅只能连接输入单元的一部分，参数数量会显著下降。卷积神经网络就是基于这个原理而构建的。"}
{"publishtime": "2017/04/02·,·", "title": "2017 年 PHP 程序员未来路在何方？", "desc": "作为一个资深的 PHP 开发者，在技术上给各位 PHP 程序十点未来的建议，希望对大家有所帮助。"}
{"publishtime": "2017/03/18··", "title": "为什么该和程序员约会？我有 20 个理由", "desc": "2009 年美国有一项关于离婚率的调查，发现绝大多数工程专业的从业人员的离婚率都位于 13% 以下。"}
{"publishtime": "2017/02/24··", "title": "会编程的 AI + 会修 Bug 的 AI，等于什么 ？", "desc": "2015年11月，MIT 研究人员对外展示了一个自动修复 Bug 的系统。最近微软和剑桥大学的研究员发布了一篇论文，对外展示一个会编程的机器学习系统。"}
{"publishtime": "2017/03/25··", "title": "为期一周的机器学习", "desc": "在门外汉看来，机器学习（Machine Learing，ML）入门是个不可完成的任务。如果你选错了方向，确实就是不可能的了。然而，在我学习机器学习的基本知识一周后，发现入门比我想象的容易。"}
{"publishtime": "", "title": "未知", "desc": "暂无简介"}
{"publishtime": "2017/03/17·", "title": "持续部署微服务的实践和准则", "desc": "微服务给业务和技术的扩展性带来了极大的便利，同时在组织和技术层面带来了极大的挑战。由于在架构的演进过程中，会有很多新服务产生，持续部署是技术层面的挑战之一，好的持续部署实践和准则可以让团队从基础设施抽离出来，关注与产生业务价值的功能实现。"}
{"publishtime": "2017/02/24··", "title": "为什么我再也不想和 Google HR 交谈了", "desc": "Google、Amazon、Facebook 等大公司是很多人向往的工作去处，能收到这些公司 HR 发来的邀请邮件，是件让人高兴的事，但知名程序员博主 Yegor Bugayenko 再也不想和这些公司的 HR 交谈了。"}
{"publishtime": "", "title": "未知", "desc": "暂无简介"}
{"publishtime": "2017/02/22··", "title": "一个屌丝程序猿的人生（49）", "desc": "从林萧的老家县城到学校，算上坐汽车和火车的时间，足足需要将近20个小时。而且，由于现在是开学季，正是人流大的时候，一路上更加折磨人。"}
{"publishtime": "2017/03/17··", "title": "Github 对程序员职业生涯的影响", "desc": "在未来的 12 到 24个月，即 2018 年到 2019 年，程序员的聘用方式将会彻底地发生改变。13 年前我在红帽时，上司对我说：“你在这里所做的一切工作都是开源的。将来你不再需要简历，人们可以直接通过谷歌来了解你。”"}
{"publishtime": "2017/02/22·", "title": "WASD 何时成了游戏操作的主流？", "desc": "在今天，WASD已成了游戏的标配。尽管多数玩家对此习以为常，但我们可以负责任地说，在20年前，这种键位还非常新鲜。"}
{"publishtime": "2017/03/15·", "title": "让我们再聊聊TDD（续）：人人都在做TDD", "desc": "现在还有非常多的软件工程师在质疑 TDD 的可行性，比如太难不会、成本太高无法推动、意义不是很大等，但是他们却一直都在做着TDD，只不过没有意识到而已，这便是“不识庐山真面目，只缘身在此山中”。"}
{"publishtime": "2017/02/22·", "title": "硬盘写到一半时断电，文件系统里会发什么？", "desc": "断电时文件系统发生了什么？硬盘又发生了什么？下一次开机时写到一半的文件在系统层面还在吗？在底层还在吗？"}
{"publishtime": "2017/03/15··", "title": "我们有一个富邻居，他叫施乐", "desc": "当乔布斯雇微软作为 Macintosh 的首个第三方应用软件开发者时，他就思考过他们可能会把苹果的创意复制到基于 PC 机的用户界面上。"}
{"publishtime": "2017/02/22··", "title": "看过这两张图，就明白 Buffer 和 Cache 之间区别", "desc": "Cache 和 Buffer 都是「缓存」，但它们之间有什么区别呢？看看沈万马的回答。"}
{"publishtime": "2017/02/22··", "title": "编程界 12 位祖师爷级别的 “大牛”", "desc": "每位程序员或多或少都为这个社会贡献着什么东西，然而有些程序员的贡献却超过了一个普通人一辈子能奉献的力量，他们是先驱，是伟大的，值得我们致敬。"}
{"publishtime": "", "title": "未知", "desc": "暂无简介"}
{"publishtime": "2017/02/21·", "title": "一个屌丝程序猿的人生（48）", "desc": "看着安玲聪的来电，林萧眉头紧锁，随后抬头瞅了眼跟前的三人，突然计上心头，随后接起了电话。"}
{"publishtime": "", "title": "未知", "desc": "暂无简介"}
{"publishtime": "2017/03/14··", "title": "漫画赏析：Linux 内核到底长啥样", "desc": "今天，我来为大家解读一幅来自 TurnOff.us 的漫画 “InSide The Linux Kernel”。 这幅漫画是以一个房子的侧方刨面图来绘画的。使用这样的一个房子来代表 Linux 内核。"}
{"publishtime": "2017/02/21··", "title": "生活中该最应该了解哪些重要的事？", "desc": "生活中你最需要知道哪些事情呢？看看 Quora 网友的三个精彩回答！"}
{"publishtime": "2017/03/14··", "title": "人人都可以做深度学习应用：入门篇", "desc": "这一轮AI的技术突破，主要源于深度学习技术。在这里，我尝试以一名工程师的视角，以尽量容易让大家理解的方式一起探讨下深度学习的原理。"}
{"publishtime": "2017/02/21··", "title": "为什么不能每周发布一次？", "desc": "要缩短发布周期、杜绝hotfix，需要从需求切分、迭代规划、技术架构、团队能力建设和测试策略调整等多方面进行优化，才能保证持续、快速的发布节奏，这是一个系统的问题。"}
{"publishtime": "2017/03/14··", "title": "C 语言高效编程与代码优化", "desc": "在本篇文章中，我收集了很多经验和方法。应用这些经验和方法，可以帮助我们从执行速度和内存使用等方面来优化C语言代码。"}
{"publishtime": "2017/02/21·", "title": "想写无Bug的安全代码？看防御性编程的艺术", "desc": "不安全的软件不仅无用，而且还可怕。软件 Bug 引发的惨烈案例有很多，比如 1996 年因为导航系统代码复用引发的 Bug，导致欧洲航天局 Ariane 5 型运载火箭偏离预定路径而自毁爆炸。"}
{"publishtime": "2017/03/14··", "title": "Stack Overflow 与全民编程时代", "desc": "曾有讽刺新闻吐槽，”计算机编程铁律”将会被正式命名为「Google 一下，然后 Stack Overflow」。 就像其他一些精彩的吐槽那样，这个玩笑并非无中生有。"}
{"publishtime": "2017/02/20··", "title": "代码发布系统实现", "desc": "在我日常运维工作中，代码发布可能是最普遍的一项工作之一，尤其是网页代码的更新，碎片化发布需求非常频繁。在前期开发人员比较少时，还可以由自己来上服务器通过脚本来发布代码。但随着公司项目的增多，更多的开发人员加入到公司，发布代码需求开始增多，这就占用了我大部分时间，经常的被打断其它工作来发布代码，非常地不爽，然后开始想解决方法。"}
{"publishtime": "2017/03/13·", "title": "TDD 已死？让我们再聊聊 TDD", "desc": "TDD并没有死，死的是你的持续学习、思考、实践与总结。当前国内很多软件开发人员对于TDD的理解比较模糊，大部分人也没有明确和有意识的去实施TDD，因此很多人都有着不同的理解。"}
{"publishtime": "2017/02/20··", "title": "记录一次 MySQL 死锁排查过程", "desc": "以前接触到的数据库死锁，都是批量更新时加锁顺序不一致而导致的死锁，但是上周却遇到了一个很难理解的死锁。借着这个机会又重新学习了一下mysql的死锁知识以及常见的死锁场景。"}
{"publishtime": "2017/03/13·,·", "title": "TensorFlow 资源大全中文版", "desc": "jtoy 发起整理的 TensorFlow 资源，包含一些很棒的 TensorFlow 工程、库、项目等。"}
{"publishtime": "2017/02/20··", "title": "程序员的沟通之痛", "desc": "近年来发现沟通越发成为一件重要的事。在近期工作中也会观察到一些沟通问题，比如跨团队开会沟通时发生的一些分歧与争论。作为程序员的我，感觉沟通一直是一个痛点，所以近年来一直在思考关于沟通的问题，下面就写写我的观察与思考吧。"}
{"publishtime": "2017/03/11·", "title": "实例化 DevOps 原则", "desc": "本文所讨论的DevOps原则可以用“人、产品、流程和工具”这4个维度来进行组织。"}
{"publishtime": "2017/02/20·", "title": "百亿互金平台救火故事", "desc": "多年前，又是周六客服打电话过来，平台官网不能访问，app完全无法打开，客户在QQ群和微信群中各种反馈，说平台是不是跑路了？客服的多条400热线完全被打爆，电话已经接不过来…"}
{"publishtime": "2017/02/15·", "title": "趣文：三分钟了解敏捷开发", "desc": "小灰经过千辛万苦，终于拿到了心仪的offer。"}
{"publishtime": "2017/03/09··", "title": "勾搭程序员的 11 个技巧", "desc": "大家都知道， 在所有的上班族当中，软件工程师是一群最有特点，智商最高，最自命不凡的人。我非常确信这一点——因为我就要嫁给这样一个人了。但是，为了让这群自命不凡的人能拜倒在自己的石榴裙下，你不必像我一样把一生的幸福搭进去。我这里有11个非常巧妙的技巧"}
{"publishtime": "2017/02/19··", "title": "推荐给程序员的一些书（不止是技术书）", "desc": "阅读对一个人的职业生涯至关重要。我也有一些好书推荐给同为程序员的你们，希望你们能试着读一读。"}
{"publishtime": "2017/02/15··", "title": "一个程序员要扔掉多少代码，才能成为真正的程序员", "desc": "俗语说，女怕嫁错郎，男怕入错行。程序员这行当，不贫不富，靠技术吃饭，一直还算个体面职业。进了程序员这行的兄弟们，即便日后飞黄腾达了，谈起早年的编程生涯，都还是自豪的。"}
{"publishtime": "2017/03/08··", "title": "有前途的程序员的14个习惯，你有几个？", "desc": "慎于说Yes；敢于说No；构建自己的知识体系；代码规范；代码审查；良好的时间管理；深入理解客户需求……"}
{"publishtime": "2017/02/18··", "title": "2016 腾讯软件开发面试题（部分）", "desc": "这篇博客是 2016 腾讯软件开发面试题中不定项选择题集合中的 1 -12 题，而且选择题相对来说，难度没那么大，更主要的是为了让大家全面的感受一下腾讯的面试题。"}
{"publishtime": "2017/02/15·", "title": "程序员提高编程能力万无一失的办法", "desc": "那就是去读别人写的代码。读那些你常用的库、编程框架的源代码，读那些你景仰的大牛的源代码，读代码里的测试（测试本身就是一种有效的文档）；读代码、改代码、运行代码。"}
{"publishtime": "2017/03/08··", "title": "趣文：程序员和HR的交锋", "desc": "程序员和HR们一言不合就开始互怼，但是吐槽归吐槽，文章的目的就是为了告诉大家，程序员和HR双方都不容易。站在对方的角度上考虑一下，很多槽点笑一下也就过去了。"}
{"publishtime": "2017/02/18··", "title": "坑：时间和空间的平衡", "desc": "这一篇的坑主要来说说架构中时间和空间的平衡吧，这里的时间指代比较广，可能是开发时间，但大部分指的是执行时间，也就是算法的时间复杂度了，而空间就是算法中经常说的空间换时间中的空间了"}
{"publishtime": "2017/02/14··", "title": "使用 LVS 实现负载均衡原理及安装配置详解", "desc": "常用的负载均衡开源软件有nginx、lvs、haproxy，商业的硬件负载均衡设备F5、Netscale。本文主要是学习 LVS 并对其进行了详细的总结记录。"}
{"publishtime": "2017/03/07·", "title": "分布式系统设计的求生之路", "desc": "分布式系统理念渐渐成为了后台架构技术的重要选择，本文介绍了作者在手游领域对分布式系统进行的种种尝试，并在尝试中制定了对服务的定义、整体框架的构建以及服务内部拆分的流程。"}
{"publishtime": "2017/02/17·", "title": "为什么越来越少的开源项目使用 GPL 协议", "desc": "前段时间，我在 RedMonk 上看到了一篇来自 Stephen O’Grady 的有趣推文，介绍了开源许可证目前的状态，以及此图表： 此图展示了从2010年到2017年开源许可证的使用情况。能很明显看到，GPL 2.0 的使用量已经减少了…"}
{"publishtime": "2017/03/07··", "title": "QQ18年，解密8亿月活的QQ后台服务接口隔离技术", "desc": "1999年2月10日，腾讯QQ横空出世。光阴荏苒，那个在你屏幕右下角频频闪动的企鹅已经度过了18个年头。随着QQ一同成长的你，还记得它最初的摸样吗？"}
{"publishtime": "2017/02/17··", "title": "趣文：编程其实是文科", "desc": "编程究竟是文科还是理科？"}
{"publishtime": "2017/02/14·,", "title": "9 个超酷的深度学习案例", "desc": "深度学习是机器学习中一种基于对数据进行表征学习的方法。关于深度学习的应用，网上有非常多的出色案例，伯乐在线在本文摘录 9 个。"}
{"publishtime": "2017/03/07·", "title": "高性能服务器架构思路，不仅是思路", "desc": "在服务器端程序开发领域，性能问题一直是备受关注的重点。业界有大量的框架、组件、类库都是以性能为卖点而广为人知。然而，服务器端程序在性能问题上应该有何种基本思路，这个却很少被这些项目的文档提及。"}
{"publishtime": "2017/02/14·", "title": "为什么 QA 不喜欢重构？", "desc": "作为一名QA，每次听到“重构”两个字，既想给追求卓越代码的开发人员点赞，同时又会感觉非常紧张，为什么又要重构？马上就要上线了，怎么还要改？是不是应该阻止开发人员做重构？"}
{"publishtime": "2017/02/16·", "title": "赶集网三年 DBA 总结", "desc": "2012年初入职赶集，当时处在流量讯猛增长的阶段，3年DBA生涯收获坡多，其实坑更多(泪… 后来在做开发时，慢慢体会到 ”运维“ 和 “开发” 确实存在沟通问题：知识不对称。如何解决呢？"}
{"publishtime": "2017/02/16··", "title": "在 Google 工作 10 年，到底能学到啥？", "desc": "我在 2006 年 3 月加入 Google，2016 年 9 月离开，前后 10.5 年。代码写了不少，团队也带过好几个。"}
{"publishtime": "2017/03/07·", "title": "记一次MySQL性能优化过程", "desc": "所谓mysql的优化，三分是配置的优化，七分是sql语句的优化，通过一些案例分析，希望给大家在工作中带来一些思路。"}
{"publishtime": "2017/02/14·", "title": "不局限技术领域，结交其他行业的精英", "desc": "对那些还处于事业初期或者发展期的技术从业者一点建议：多关注弱联系。当你在技术领域建立一定数量的人脉后，比如去结识 100 个不同的人，你与领域内绝大多数陌生人之间只有一跳的距离。"}
{"publishtime": "2017/02/16·", "title": "一个由进程内存布局异常引起的问题", "desc": "前段时间业务反映某类服务器上更新了 bash 之后，ssh 连上去偶发登陆失败。该版本 bash 为部门这边所定制，但实现上并没有改动原有逻辑，只是加入了些监控功能，那么错误是从哪里来？是 bash 的锅吗？"}
{"publishtime": "2017/03/07·", "title": "数据库新手常犯的 5 个错误", "desc": "刚做开发人时，需要掌握的东西非常多。首先是编程语言本身，还有所有你用到的框架的的特定用法，前端开发的东西也会混进来，在开发过程中你还要考虑数据存在哪的问题。由于你有太多东西需要迅速掌握，在应用设计的过程中，会倾向于把数据库放在后面考虑（大概因为它对用户的使用体验没什么影响）。结果就是在处理数据库的时候，会发现很多不好的实践。"}
{"publishtime": "2017/02/14·,", "title": "通过这 9 本开源好书学习 C 语言", "desc": "我们都是通过阅读书籍来帮助掌握某种语言的基本知识。随后又通过阅读书籍来全面探索这门语言的灵活性。我仔细考察了一些我最喜爱的 C 语言书籍，并从其中选出了对我意义最大的九本。有没有哪一本能够吸引你？好好享受吧！"}
{"publishtime": "2017/01/31·,", "title": "每天一个 Linux 命令（53）： route 命令", "desc": "Linux系统的route命令用于显示和操作IP路由表（show / manipulate the IP routing table）。要实现两个不同的子网之间的通信，需要一台连接两个网络的路由器，或者同时位于两个网络的网关来实现。"}
{"publishtime": "2017/02/16··", "title": "技术人员的发展之路", "desc": "2012年我写过《程序算法与人生选择》，我用算法来类比如何做选择，说白了就是怎么去计算，但是并没有讲程序员可以发展的方向有哪些。 所以就算是有这些所谓的方法论，我们可能对自己的发展还是会很纠结和无所事从，尤其是人到了30岁，这种彷徨和迷惑越来越重。"}
{"publishtime": "2017/03/06··", "title": "技术的热门度曲线", "desc": "全球最大的 IT 咨询公司 Gartner，有一个”技术热门度曲线”模型（Gartner Hype Cycle）。"}
{"publishtime": "2017/02/13··", "title": "误删 300G，GitLab 官方对删库事故的事后分析", "desc": "2月1日，一个GitLab工程师误删了一个包含 300GB 实时产品数据的文件夹，在取消 rm -rf 删除命令后只剩下 4.5GB 数据。并且最近的数据还是在6小时前备份的。"}
{"publishtime": "2017/01/30·", "title": "每天一个 Linux 命令（52）： ifconfig 命令", "desc": "许多windows非常熟悉ipconfig命令行工具，它被用来获取网络接口配置信息并对此进行修改。Linux系统拥有一个类似的工具，也就是ifconfig(interfaces config)。通常需要以root身份登录或使用sudo以便在Linux机器上使用ifconfig工具。"}
{"publishtime": "2017/02/16·", "title": "全球分布式数据库：Google Spanner（论文翻译）", "desc": "Spanner 是谷歌公司研发的、可扩展的、多版本、全球分布式、同步复制数据库。它是第一个把数据分布在全球范围内的系统，并且支持外部一致性的分布式事务。本文描述了 Spanner 的架构、特性、不同设计决策的背后机理和一个新的时间 API，这个 API 可以暴露时钟的不确定性。"}
{"publishtime": "2017/02/13··", "title": "一次 DNS 缓存引发的惨案", "desc": "时间2015年的某个周六凌晨5点，公司官方的QQ群有用户反馈官网打不开了，但有的用户反馈可以打开，客服爬起来自己用电脑试了一下没有问题，就给客户反馈说，可能是自己网络的问题，请过会在试试。早点8点，越来越多的用户反馈官网无法打开，并且有部分用户开发反馈app也打不开了，客服打电话叫起了还在梦乡中的我。"}
{"publishtime": "2017/01/29·,", "title": "每天一个 Linux 命令（51）： lsof 命令", "desc": "lsof（list open files）是一个列出当前系统打开文件的工具。在linux环境下，任何事物都以文件的形式存在，通过文件不仅仅可以访问常规数据，还可以访问网络连接和硬件。"}
{"publishtime": "2017/03/05··", "title": "用 C 语言写面向的对象是一种什么样的体验", "desc": "最近从老东家离职，跳出来跟这几个以前的老同事，拉了一个创业团队，准备干一票，去之前也了解了一番，此次将使用C语言来开发，对于毕业之后一直从事C++面向对象思维编码的我来说，虽然不舍，但是仔细想了下，这都不是事，谁说用C语言写不了面向对象？"}
{"publishtime": "2017/02/16··", "title": "一个脚本引发的血案", "desc": "我们本身是一家互联网金融公司，公司的主流业务就是p2p，因为各种原因吧，15年底启动建设众筹平台。考虑到前期开发过程中的一些弊端和架构经验，本次架构引用了dubbo做soa服务的治理，web容器nginx+tomcat，后端语言采用java,框架选择spring+mybaits,前端模板引擎使用的是btl……"}
{"publishtime": "2017/02/13·", "title": "一次生产事故的优化经历", "desc": "在一次正常的活动促销之后，客服开始陆续反馈有用户反应在抢标的时候打不开网页或者APP，在打开的时候标的就已经被抢光了，刚开始没有特别的上心，觉得抢标不就是这样吗，抢小米手机的时候也不就这样吗？随着活动继续推进，有更多的用户强烈抗议，用户领了加息卷或者抵现卷之后抢不上标的，认为是平台作假故意不让使用以达到节省资源。"}
{"publishtime": "2017/01/28·,", "title": "每天一个 Linux 命令（50）： crontab 命令", "desc": "前一天学习了 at 命令是针对仅运行一次的任务，循环运行的例行性计划任务，linux系统则是由 cron (crond) 这个系统服务来控制的。Linux 系统上面原本就有非常多的计划性工作，因此这个系统服务是默认启动的。"}
{"publishtime": "2017/03/03·", "title": "如何给品牌取个英文名字？", "desc": "“我们是用现有的词取名，还是造个新词？” 经常有做消费者产服务的企业家这样问我。2009 年，微软公司重新推出的微软 MSN 即时搜索——“Bing”，我想是时候更新一下我对于起名、造词和品牌的一些旧想法了。"}
{"publishtime": "2017/02/16··", "title": "坑：缓存 + 哈希 = 高并发？", "desc": "上篇已经讲了高可用，当前互联网时代，怎么少的了高并发呢？高并发和高可用一样， 已经变成各个系统的标配了，如果你的系统QPS没有个大几千上万，都不好意思跟人打招呼，虽然可能每天的调用量不超 100。"}
{"publishtime": "2017/02/12·", "title": "技术文章如何写，才能有较好的阅读体验？", "desc": "技术文章如何写作能让读者有较好的阅读体验，是一个仁者见仁，智者见智的问题。甚至很多人都认为根本不需要考虑读者的感受，把技术写好写准确就可以了，这其实就是一大误区，你的写作如果只是给自己看，当然我也就不多说什么，但如果你的写作是给别人看，就一定要考虑如何写的问题"}
{"publishtime": "2017/01/27·,·", "title": "每天一个 Linux 命令（49）： at 命令", "desc": "在windows系统中，windows提供了计划任务这一功能，在控制面板 -> 性能与维护 -> 任务计划， 它的功能就是安排自动运行的任务。 通过’添加任务计划’的一步步引导，则可建立一个定时执行的任务。"}
{"publishtime": "2017/03/03··", "title": "在大公司成长的烦恼", "desc": "我在微软工作多年后加入了谷歌，一年后又离开谷歌去了一家创业公司。原因很简单：绩效考核体系。当开发者的薪酬几乎不取决于产品质量，而是在很大程度上取决于他与同行相比表现如何时，工程师文化就会受损。"}
{"publishtime": "2017/02/15··", "title": "从零到百亿互联网金融架构发展史", "desc": "回想起从公司成立敲出的第一行代码算起到现在也快三年了，平台的技术架构，技术体系也算是经历了四次比较重大的升级转化（目前第四代架构体系正在进行中），临近年底也想抽出时间来回顾一下，一个小公司从最开始的零交易到现在交易量超过百亿背后的技术变迁。"}
{"publishtime": "2017/02/12··", "title": "写技术博客的无限好处", "desc": "没有读者，写技术博客文章感觉不到太多的作用，是浪费时间的事情，是这样吗？"}
{"publishtime": "2017/01/26·", "title": "每天一个 Linux 命令（48）： watch 命令", "desc": "watch是一个非常实用的命令，基本所有的Linux发行版都带有这个小工具，如同名字一样，watch可以帮你监测一个命令的运行结果，省得你一遍遍的手动运行。"}
{"publishtime": "2017/03/03··", "title": "在 Stack Overflow 远程办公是怎样一种体验？", "desc": "StackOverflow 公司近 400 个员工里有 85 人在家远程办公。为了让这些远程办公的人有归属感，他们公司采取了一系列很人性化的手段、并额外提供一些福利。"}
{"publishtime": "", "title": "未知", "desc": "暂无简介"}
{"publishtime": "2017/02/10·,·", "title": "趣文：妓女、二奶和软件外包哪个靠谱", "desc": "公司要开发一款 app。没有移动上的开发工程师，便考虑把这个项目外包了。但对于外包是否靠谱，公司里分成两派，产生了很大争议。CEO 看大家争论得不可开交，就把王大锤叫来，让他谈谈看法。王大锤是个项目经理，在某家外包公司干过几年，也许能知道点实际情况。"}
{"publishtime": "2017/01/25·", "title": "照顾好应用的缓存，应付大流量", "desc": "为了提升系统的响应速度，通常会系统中使用缓存，例如：中央缓存，本地缓存等。但是使用缓存有好有坏，坏处是，如果缓存数据是旧的，那么应用输出的数据便是错误的数据，可能造成严重的影响。"}
{"publishtime": "", "title": "未知", "desc": "暂无简介"}
{"publishtime": "2017/02/10·", "title": "软件咨询师的工具箱", "desc": "作为软件领域的专家，软件咨询师擅长利用个人丰富的领域知识，去解决软件开发、测试过程中的各种难题。除此之外，他们需要利用各种技能与工具帮助自己快速收集信息，分析、定位客户的问题所在。"}
{"publishtime": "2017/02/10·", "title": "一个开源项目维护者的笔记：为什么我关闭 PR", "desc": "我在 GitHub 上和其他地方维护着许多的开源项目（截止本文写作时超过 160 个）。在过去几年里，我已经合并 以及/或者 关闭了上千个 Pull Requests (PRs) 和补丁，现在想在这里总结一下我不合并许多 PRs 的原因。 "}
{"publishtime": "2017/02/10·", "title": "无需跑路，GitLab 删库事件的借鉴意义", "desc": "俗话说，天灾可怕，人祸更甚，最近的 GitLab 删库曾一度牵动了码界尤其是运维圈的神经。"}
{"publishtime": "2017/02/10··", "title": "程序员在周末偏向用哪些编程语言？", "desc": "程序员周末主要做哪什么呢？有些陪伴家人，有些看书学习，还有有些忙个人项目……总之答案很多。那些周末还在投身于编程项目或学习的程序员，他们常用哪些编程语言（技术）呢？StackOverflow 的数据工程师 Julia Silge 根据 SO 的公开数据集，分析工作日和周末 SO 问答帖的差异，为你揭开答案。"}
{"publishtime": "2017/02/09·,·", "title": "每天一个 Linux 命令（60）： scp命令", "desc": "scp是secure copy的简写，用于在Linux下进行远程拷贝文件的命令，和它类似的命令有cp，不过cp只是在本机进行拷贝不能跨服务器，而且scp传输是加密的。可能会稍微影响一下速度。"}
{"publishtime": "2017/02/09··", "title": "一个工程师对流程管理的思考", "desc": "以工程师的视角对流程管理的理解和认知，从逻辑上探讨需要注意的因素。"}
{"publishtime": "", "title": "未知", "desc": "暂无简介"}
{"publishtime": "2017/01/25·", "title": "每天一个 Linux 命令（47）： iostat 命令", "desc": "Linux系统中的 iostat是I/O statistics（输入/输出统计）的缩写，iostat工具将对系统的磁盘操作活动进行监视。它的特点是汇报磁盘活动统计情况，同时也会汇报出CPU使用情况。"}
{"publishtime": "2017/01/23·,", "title": "每天一个 Linux 命令（46）： vmstat 命令", "desc": "vmstat是Virtual Meomory Statistics（虚拟内存统计）的缩写，可对操作系统的虚拟内存、进程、CPU活动进行监控。他是对系统的整体情况进行统计，不足之处是无法对某个进程进行深入分析。"}
{"publishtime": "2017/01/22·", "title": "开源项目 RethinkDB 关闭，创始人总结失败教训", "desc": "当我们宣布RethinkDB关闭时，我答应写一个调查分析。我花了一些时间来整理所得的教训和经验，现在可以清楚地写出来。 在HN讨论贴中，人们提出了许多关于为什么RethinkDB失败的原因，从莫名的人性和聪明的MongoDB…"}
{"publishtime": "2017/01/22·", "title": "每天一个 Linux 命令（45）： free 命令", "desc": "free命令可以显示Linux系统中空闲的、已用的物理内存及swap内存,及被内核使用的buffer。在Linux系统监控的工具中，free命令是最经常使用的命令之一。"}
{"publishtime": "2017/01/21··", "title": "每天一个 Linux 命令（44）： top 命令", "desc": "top命令是Linux下常用的性能分析工具，能够实时显示系统中各个进程的资源占用状况，类似于Windows的任务管理器。下面详细介绍它的使用方法。"}
{"publishtime": "2017/01/20·,", "title": "每天一个 Linux 命令（41）： ps 命令", "desc": "Linux中的ps命令是Process Status的缩写。ps命令用来列出系统中当前运行的那些进程。ps命令列出的是当前那些进程的快照，就是执行ps命令的那个时刻的那些进程，如果想要动态的显示进程信息，就可以使用top命令。"}
{"publishtime": "2017/01/19··", "title": "亲戚问你每月多少工资？程序员该如何机智回答", "desc": "每次一回家，看到各种亲戚就觉得不敢和他们说话，不敢提钱，不敢提工作，原因是什么呢？当然是怕他们问工资多少。程序员的工资虽然不少，但是也不想这样被问来问去的，起码咱是读书人啊……"}
{"publishtime": "2017/01/19·", "title": "3 个在 Linux 中永久并安全删除文件和目录的方法", "desc": "在大多数情况下，我们习惯于使用 Delete 键、垃圾箱或 rm 命令从我们的计算机中删除文件，但这不是永久安全地从硬盘中（或任何存储介质）删除文件的方法。"}
{"publishtime": "2017/01/19·,", "title": "每天一个 Linux 命令（40）： wc 命令", "desc": "Linux系统中的wc(Word Count)命令的功能为统计指定文件中的字节数、字数、行数，并将统计结果显示输出。"}
{"publishtime": "2017/01/19··", "title": "坑：高可用架构的银弹", "desc": "我想很多人理解的高可用就是单台机器挂掉了整个服务不会挂掉，所以写代码的时候使用集群的思想去写代码，比如做成无状态的服务，保证在集群使用的时候无状态，单机故障不影响服务，从而达到高可用的效果。"}
{"publishtime": "2017/01/18··", "title": "坑：重构过程中的过度设计", "desc": "本文说的「重构」，和《重构:改善既有代码的设计》这本书中的重构不太一样，这是本好书，它主要说的是代码级别的重构，这种重构是需要在编码的时候时时刻刻进行的，更多的是一种编程思想的训练，而我们这篇的重构主要是说系统设计的重构。"}
{"publishtime": "2017/02/09··", "title": "如何利用 C++ 的 Lambda 表达式提升 Qt 代码", "desc": "Lambda 表达式是在 C++11 中加入的 C++ 特性。在这篇文章中我们将看到如何用 Lambda 表达式来简化 Qt 代码。Lambda 很强大，但也要小心它带来的陷阱。"}
{"publishtime": "2017/01/18·,·", "title": "每天一个 Linux 命令（39）： grep 命令", "desc": "Linux系统中grep命令是一种强大的文本搜索工具，它能使用正则表达式搜索文本，并把匹 配的行打印出来。grep全称是Global Regular Expression Print，表示全局正则表达式版本，它的使用权限是所有用户。"}
{"publishtime": "2017/02/09··", "title": "编程没有捷径：奇葩冒牌程序员的故事", "desc": "成为优秀的编程人员没有捷径，你要拥有高智商，要保持谦逊，还要不断的努力，犯错，在错误中成长，深刻理解你所学习的材料。"}
{"publishtime": "2017/01/18·", "title": "服务拆分与架构演进", "desc": "企业想要实施微服务架构，经常问到的第一个问题是，怎么拆？如何从单体到服务化的结构？第二个问题是拆完后业务变了增加了怎么办？另外，我们想要改变的系统往往已经成功上线，并有着活跃的用户。那么对其拆分还需要考虑现有的系统运行，如何以安全最快最低成本的方式拆分也是在这个过程中需要回答的问题。本文会针对以上问题，介绍我们团队在服务拆分和演进过程中的实践和经验总结。"}
{"publishtime": "2017/01/17··", "title": "如何做到老板来了就自动切换桌面（含源码）", "desc": "当你工作的时候，肯定会浏览一些与工作无关的东西，别说你没有过。这时被老板发现就太尴尬了。当然，我也可以马上切换桌面，但这种举动太可疑了，而且有的时候我根本没注意到老板来了。"}
{"publishtime": "", "title": "未知", "desc": "暂无简介"}
{"publishtime": "2017/02/08·", "title": "100 行 C 代码终端打印树形结构", "desc": "树形结构是算法里很常见的一种数据结构，从二叉树到多叉树，还有很多变种。很多涉及到算法的工作，就需要程序员自己手动实现树形结构，但出于结构本身复杂性，不太容易做对，需要一种调试工具来检测正确性。"}
{"publishtime": "2017/01/16·", "title": "每天一个 Linux 命令（38）： cal 命令", "desc": "cal命令可以用来显示公历（阳历）日历。公历是现在国际通用的历法，又称格列历，通称阳历。“阳历”又名“太阳历”，系以地球绕行太阳一周为一年，为西方各国所通用，故又名“西历”。"}
{"publishtime": "2017/02/08·", "title": "从测试策略到测试架构", "desc": "现在业界流行的测试金字塔和测试象限只是两种高度抽象和简化的测试策略模型，不具备实际可操作性，只具备高层次的指导性和参考性。直接根据这两个模型来工作是低效的，甚至可能带来负面效果。"}
{"publishtime": "2017/01/16·", "title": "每天一个 Linux 命令（37）： date 命令", "desc": "在linux环境中，不管是编程还是其他维护，时间是必不可少的，也经常会用到时间的运算，熟练运用date命令来表示自己想要表示的时间，肯定可以给自己的工作带来诸多方便。"}
{"publishtime": "2017/02/08··", "title": "Linus 谈软件开发管理经验", "desc": "没有人比 Linus Torvalds 更了解软件开发项目管理中的酸甜苦辣了。作为 Linux 的创建者，Torvalds在过去二十年指导了数以千计的开发者共同改进开源操作系统内核。文中Linus Torvalds分享了他在软件管理方面的宝贵经验。"}
{"publishtime": "2017/02/07··", "title": "研发团队 GIT 开发流程新人学习指南", "desc": "本文定位于为使用GIT标准分支开发流程的开发团队新人提供一份参考指南，其中的内容都是我们公司在研发团队初创时所遵循的一些开发流程标准，经过近一年的实践，虽说还有很多不足，但是随着团队经验的丰富和人员的扩张，我会适时地更新本文，分享我们在使用GIT开发流程中遇到的问题和解决方案。"}
{"publishtime": "2017/02/06··", "title": "垃圾回收原来是这么回事", "desc": "John McCarthy身为Lisp之父和人工智能之父，同时，他也是GC之父。1960年，他在其论文中首次发布了GC算法（其实是委婉的提出😂）。而Java的前身Oak是在1990发布的，利用JVM实现了跨平台。GC因此一举成名。"}
{"publishtime": "2017/02/06·,·", "title": "每天一个 Linux 命令（59）： rcp 命令", "desc": "rcp代表“remote file copy”（远程文件拷贝）。该命令用于在计算机之间拷贝文件。rcp命令有两种格式。第一种格式用于文件到文件的拷贝；第二种格式用于把文件或目录拷贝到另一个目录中。"}
{"publishtime": "2017/02/06··", "title": "首批程序员他们是如何编程的？", "desc": "我们大家都记得自己用过的第一台电脑。Joyce Wheeler 也不例外。但是她的情况略有不同，她是第一批使用电脑的人。"}
{"publishtime": "2017/01/15·,", "title": "每天一个 Linux 命令（36）： diff 命令", "desc": "diff 命令是 linux上非常重要的工具，用于比较文件的内容，特别是比较两个版本不同的文件以找到改动的地方。diff在命令行中打印每一个行的改动。最新版本的diff还支持二进制文件。"}
{"publishtime": "2017/02/05·", "title": "分布式系统中唯一 ID 的生成方法", "desc": "本文主要介绍在一个分布式系统中, 怎么样生成全局唯一的 ID"}
{"publishtime": "2017/01/14··", "title": "每天一个 Linux 命令（35）： ln 命令", "desc": "ln是linux中又一个非常重要命令，它的功能是为某一个文件在另外一个位置建立一个同步的链接.当我们需要在不同的目录，用到相同的文件时，我们不需要在每一个需要的目录下都放一个必须相同的文件，我们只要在某个固定的目录，放上该文件，然后在 其它的目录下用ln命令链接（link）它就可以，不必重复的占用磁盘空间。"}
{"publishtime": "2017/02/05·,", "title": "每天一个 Linux 命令（58）： telnet 命令", "desc": "telnet命令通常用来远程登录。telnet程序是基于TELNET协议的远程登录客户端程序。Telnet协议是TCP/IP协议族中的一员，是Internet远程登陆服务的标准协议和主要方式。"}
{"publishtime": "2017/01/14··", "title": "放弃测试优先式开发（TDD）", "desc": "再来一篇批判 TDD（test-driven development）教条主义的文章。用了TDD，写程序的目就变成了让一堆测试通过，变得保守、不敢改代码，因为惧怕花大时间去修复坏掉的测试。"}
{"publishtime": "2017/01/07·", "title": "关于【error C3646: 未知重写说明符】的若干种可能性", "desc": "如果在程序中出现了error C3646，那么这个错误可能是由多种问题所导致的，这篇文章将对多种错误及对应解决方法进行分析。"}
{"publishtime": "2017/02/05··", "title": "IDEA 代码生成插件 CodeMaker", "desc": "Java 开发过程中经常会遇到手工编写重复代码的事情，例如说：编写领域类和持久类的时候，大部分时候它们的变量名称，类型是一样的，在编写领域类的时候常常要重复写类似的代码。所以开发了一个 IDEA 的代码生成插件，通过 Velocity 支持自定义代码模板来生成代码。"}
{"publishtime": "2017/01/14·", "title": "如何用 OllyDbg 的跟踪功能分析虚拟机保护", "desc": "虚拟机保护已经是现代保护壳不可缺少的一环，虽然逆向方也发展出各种插件帮助分析，但只针对特定某款，通用性的方法却不多见。我总在想，既然虚拟机的结构是固定的，如果有一款工具能够记录指令流，那么按图索骥，也许能发展出一套通用的分析方法来。"}
{"publishtime": "2017/01/07·", "title": "Qt 5 中的信号槽", "desc": "Qt4信号槽存在一些明显的不足，Qt5中不仅解决了上述Qt4中的问题,而且还有一些扩充。"}
{"publishtime": "2017/02/05·", "title": "一个屌丝程序猿的人生（47）", "desc": "“咦？竟然还锁住了？”安玲聪的妈妈拧了拧把手，门并没有打开，不过这下安玲聪的妈妈彻底炸了，朝着安玲聪大声呵斥道：“竟然还锁门了！里面要是没人，为什么要锁门？你还说没带人回来？那个男生肯定藏在这屋子里！”"}
{"publishtime": "2017/01/14··", "title": "谷歌大脑 2016 年机器学习的 9 大进展", "desc": "多年来，Google Brain 团队致力于智能的机器学习来改善人们的生活。为此，无论是在纯理论研究的领域，还是将研究成果投入实际应用，探索从未停止。近期，Google Brain 团队负责人 Jeff Dean 对2016年在各领域取得的重大进展进行了总结。"}
{"publishtime": "2017/01/07·", "title": "一个简单粗暴的人脸认证标注工具的实现", "desc": "这个程序主要的功能是完成一个人脸认证的标注工具。"}
{"publishtime": "2017/02/04·,", "title": "每天一个 Linux 命令（57）： ss 命令", "desc": "ss是Socket Statistics的缩写。顾名思义，ss命令可以用来获取socket统计信息，它可以显示和netstat类似的内容。但ss的优势在于它能够显示更多更详细的有关TCP和连接状态的信息，而且比netstat更快速更高效。"}
{"publishtime": "2017/01/13··", "title": "Spring Batch 在大型企业中的最佳实践", "desc": "Spring Batch对批处理场景进行了合理的抽象，封装了大量的实用功能，使用它来开发批处理应用可以达到事半功倍的效果。在使用的过程中我们仍需要坚持总结一些最佳实践，从而能够交付高质量的可维护的批处理应用，满足企业级应用的苛刻要求。 "}
{"publishtime": "2017/01/07·", "title": "每天一个 Linux 命令（28）：tar 命令", "desc": "通过SSH访问服务器，难免会要用到压缩，解压缩，打包，解包等，这时候tar命令就是是必不可少的一个功能强大的工具。linux中最流行的tar是麻雀虽小，五脏俱全，功能强大。"}
{"publishtime": "2017/02/03·", "title": "全栈必备：网络编程基础", "desc": "我们是幸运的，因为我们拥有网络。网络是一个神奇的东西，它改变了你和我的生活方式，改变了整个世界。 然而，网络的无标度和小世界特性使得它又是复杂的，无所不在，无所不能，以致于我们无法区分甚至无法描述。对于一个码农而言，了解网络的基础知识可能还是从了解定义开始，认识OSI的七层协议模型，深入Socket内部，进而熟练地进行网络编程。"}
{"publishtime": "2017/01/13··", "title": "我是如何开发公司年会抽奖系统的？", "desc": "在年会开始之前必须做出一个抽奖系统。这个系统很简单，后台可以设置总金额，然后每个用户可以获得的金额范围，金额派完则显示很遗憾没有中奖，还要设置抽奖活动时间。"}
{"publishtime": "2017/01/06··", "title": "自写信息管理系统—— C 实现", "desc": "该管理系统分为三个权限：学生，老师，管理员，用双向链表实现，文件储存，有账号密码功能。密码实现MD5加密，较难破解，实现了链表添加，查找，排序，删除等基本操作"}
{"publishtime": "2017/02/03·", "title": "程序员如何提一个好问题？", "desc": "提出好的问题是在编写软件时的一个非常重要的技能。"}
{"publishtime": "2017/01/13·,", "title": "每天一个 Linux 命令（34）： du 命令", "desc": "Linux du命令也是查看使用空间的，但是与df命令不同的是Linux du命令是对文件和目录磁盘使用的空间的查看，还是和df命令有一些区别的."}
{"publishtime": "2017/01/06··", "title": "使用 C++ 的 StringBuilder 提升 4350% 的性能", "desc": "你测试大字符串写文件的速度，发现快如闪电。然后你再测试所有字符串拼接的速度。"}
{"publishtime": "2017/02/03·,", "title": "每天一个 Linux 命令（56）： netstat 命令", "desc": "netstat命令用于显示与IP、TCP、UDP和ICMP协议相关的统计数据，一般用于检验本机各端口的网络连接情况。netstat是在内核中访问网络及相关信息的程序，它能提供TCP连接，TCP和UDP监听，进程内存管理的相关报告。"}
{"publishtime": "2017/01/13··", "title": "面试被问设计模式？不要怕看这里：观察者模式", "desc": "从上篇工厂模式中，就已经有角色的概念。大家想想，工厂模式中有哪些角色？没错，就是工厂角色和产品角色。同样，在观察者模式中，也有两个角色，就是观察者和被观察者。"}
{"publishtime": "2017/01/06·", "title": "C++模板”>>”编译问题与词法消歧设计", "desc": "在编译理论中，通常将编译过程抽象为5个主要阶段：词法分析(Lexical Analysis)，语法分析(Parsing)，语义分析(Semantic Analysis)，优化(Optimization)，代码生成(Code Generation)。这5个阶段类似Unix管道模型，上一个阶段的输出作为下一个阶段的输入。"}
{"publishtime": "2017/02/02·,", "title": "每天一个 Linux 命令（55）： traceroute 命令", "desc": "通过traceroute我们可以知道信息从你的计算机到互联网另一端的主机是走的什么路径。当然每次数据包由某一同样的出发点（source）到达某一同样的目的地(destination)走的路径可能会不一样，但基本上来说大部分时候所走的路由是相同的。"}
{"publishtime": "2017/01/12·", "title": "GC垃圾回收机制： 浅析与理解", "desc": "这是非常有害的，毫无疑问。结果将是不确定的（编译器能产生一些输出，导致任何事情都有可能发生），应该躲开写出这样代码的人除非他们同意改正错误。如果你担心这样的代码会出现在你的软件里，那么你最好完全避免使用引用，要不然就去让更优秀的程序员去做。"}
{"publishtime": "2017/01/06·", "title": "每天一个 Linux 命令（27）：linux chmod 命令", "desc": "chmod命令用于改变linux系统文件或目录的访问权限。用它控制文件或目录的访问权限。该命令有两种用法。一种是包含字母和操作符表达式的文字设定法；另一种是包含数字的数字设定法。"}
{"publishtime": "2017/02/02··", "title": "试试Linux下的ip命令，ifconfig已经过时了", "desc": "linux的ip命令和ifconfig类似，但前者功能更强大，并旨在取代后者。使用ip命令，只需一个命令，你就能很轻松地执行一些网络管理任务。ifconfig是net-tools中已被废弃使用的一个命令，许多年前就已经没有维护了。iproute2套件里提供了许多增强功能的命令，ip命令即是其中之一。 "}
{"publishtime": "2017/01/12·,", "title": "每天一个 Linux 命令（33）：df 命令", "desc": "linux中df命令的功能是用来检查linux服务器的文件系统的磁盘空间占用情况。可以利用该命令来获取硬盘被占用了多少空间，目前还剩下多少空间等信息。"}
{"publishtime": "2017/01/06·", "title": "一个屌丝程序猿的人生（44）", "desc": "“去你家？现在吗？”林萧有点蒙圈。"}
{"publishtime": "2017/02/01·", "title": "每天一个 Linux 命令（54）： ping 命令", "desc": "Linux系统的ping命令是常用的网络命令，它通常用来测试与目标主机的连通性，我们经常会说“ping一下某机器，看是不是开着”、不能打开网页时会说“你先ping网关地址192.168.1.1试试”。"}
{"publishtime": "2017/01/12·", "title": "无锁数据结构：队列", "desc": "队列多种多样，不同之处在于消息生产者、消费的数量不同；在于是基于预先分配的buffer有界队列，还是基于List的无界队列；在于是否支持优先级；在于是无锁非阻塞，还是有锁；在于严格遵守FIFO，公平还是非公平等等。"}
{"publishtime": "2017/01/05·", "title": "RESTful 架构风格下的 4 大常见安全问题", "desc": "伴随着RESTful架构风格的大量应用微服务架构的流行，一些本来难以察觉到的安全问题也逐渐开始显现出来。在我经历过的各种采用RESTful微服务架构风格的应用中，某些安全问题几乎在每个应用中都会出现。然而它们并非是什么高深的技术难题，只不过是借着微服务的流行而显得越发突出，这些都可以通过一些安全实践来避免。"}
{"publishtime": "2017/01/10·", "title": "每天一个 Linux 命令（31）: /etc/group 文件详解", "desc": "  Linux /etc/group文件与/etc/passwd和/etc/shadow文件都是有关于系统管理员对用户和用户组管理时相关的文件。linux /etc/group文件是有关于系统管理员对用户和用户组管理的文件,linux用户组的所有信息都存放在/etc/group文件中。"}
{"publishtime": "", "title": "未知", "desc": "暂无简介"}
{"publishtime": "2017/01/11·", "title": "每天一个 Linux 命令（32）：gzip 命令", "desc": "减少文件大小有两个明显的好处，一是可以减少存储空间，二是通过网络传输文件时，可以减少传输的时间。gzip是在Linux系统中经常使用的一个对文件进行压缩和解压缩的命令，既方便又好用。"}
{"publishtime": "2017/01/05··", "title": "秒杀抢购思路以及高并发下数据安全", "desc": "秒杀和抢购的场景，流量往往是超乎我们系统的准备和想象的。在多线程写入同一个文件的时候，会存现“线程安全”的问题；而在秒杀和抢购的场景中，还有另外一个问题，就是“超发”，如果在这方面控制不慎，会产生发送过多的情况。"}
{"publishtime": "2017/01/10·", "title": "虚拟机中的快照和备份之间的区别", "desc": "快照和备份的概念很容易被混淆和滥用，不便于新入行者的理解。该篇文章虽然篇幅较短，但是对于新人有很大的科普意义。这是我工作中涉及到的，顺手推荐。"}
{"publishtime": "2017/01/11·", "title": "面向开发人员的机器学习指南", "desc": "现如今，大多数的开发人员都听说过机器学习，但是当他们试图寻找捷径来学习这些技术时，却有很多人都对机器学习中的一些抽象概念望而却步，诸如回归、无监督学习、概率密度函数和其他许多定义。"}
{"publishtime": "2017/01/05··", "title": "微服务架构的基础框架选择：Spring Cloud还是Dubbo？", "desc": "最近一段时间不论互联网还是传统行业，凡是涉及信息技术范畴的圈子几乎都在讨论微服务架构。那么第一次实施微服务架构时，我们应该选择哪个基础框架更好呢？"}
{"publishtime": "2017/01/10··", "title": "10年回顾：从机械绘图到炼油，再到微软MVP的华丽转身", "desc": "年底了，各种总结计划满天飞，有空的时候我也一直在思考这么多年，是怎么过来的。也曾经很迷茫，希望经验和经历能给大家一点带来一点正能量的东西。10年很长，10年前说实话我没有思考过现在的样子，但10年前的日子还历历在目。"}
{"publishtime": "2017/01/11··", "title": "PHP 是最好的语言吗？", "desc": "最近被朋友们拉入了几个技术社群，有微信群，也有QQ群，尤其对一些年轻的朋友，大家乐此不疲的问题居然是 PHP 是最好的语言么？"}
{"publishtime": "2017/01/05·", "title": "Nginx 性能调优", "desc": "调优的时候要遵循的一个准则：一次只改一个设置，如果对性能无有效提升，就改回默认值。我们先从讨论Linux调优开始，因为一些操作系统配置的设置决定了如何优化Nginx的配置。"}
{"publishtime": "2017/01/10··", "title": "编辑器性能测试：Atom 、VS Code、Sublime Text", "desc": "我用 Sublime Text 已经差不多有三年了，在一两年前，我也尝试过用 Atom，其 UI 设计尤其吸引我，但我仍然坚持使用 Sublime 是因为 Atom 太慢了。近期我在网上搜索想看看 Atom 有没有什么显著改善。后来看到了 VS Code。所以做一个小测试，看看这几种编辑器的性能差异。"}
{"publishtime": "2017/01/11··", "title": "万人创业失败记：用户所关心的", "desc": "时刻要牢记，不管是功能多还是少，但核心的功能一定是最需要完善的。在添加新功能之前，要考虑清楚这个功能是不是用户真正需要的，不然就很容易成为一次性功能。"}
{"publishtime": "2017/01/05·", "title": "C++ 程序内存泄漏检测方法", "desc": "在Windows平台，服务器和客户端开发人员惯用的调试方法有很大不同。下面结合我的实际经验，整理下常见定位内存泄漏的方法，对比它们的优缺点。"}
{"publishtime": "2017/01/09·", "title": "MySQL 之 ROUND 函数四舍五入的陷阱", "desc": "在MySQL中，ROUND函数用于对查询结果进行四舍五入，不过最近使用ROUND函数四舍五入时意外发现并没有预期的那样，本文将这一问题记录下来，以免大家跟我一样犯同样的错误。"}
{"publishtime": "2017/01/10··", "title": "SQL 注入详解扫盲", "desc": "本文并不是什么很深入的技术文章，带领大家学习 SQL 注入的基本知识。"}
{"publishtime": "2017/01/05·", "title": "C++ STL 内存配置的设计思想与关键源码分析", "desc": "我认为要读懂STL中allocator部分的源码，并汲取它的思想，至少以下几点知识你要了解：operator new和operator delete、handler函数以及一点模板知识。下面会结合关键源码分析C++STL(SGI版本)的内存配置器设计思想"}
{"publishtime": "2017/01/09·", "title": "你听说过“风格指南驱动开发”吗？", "desc": "它驱动着我们尽最大可能去重新使用已有的组件（代码）和设计更通用的组件，也驱动着我们（开发、UX、BA）进行更加频繁的沟通，它驱动着BA书写更加合理的Story，也驱动开发进行更加合理的代码和资源的管理。"}
{"publishtime": "", "title": "未知", "desc": "暂无简介"}
{"publishtime": "2017/01/05·", "title": "C++ 中的也能使用正则表达式", "desc": "正则表达式Regex(regular expression)是一种强大的描述字符序列的工具。在许多语言中都存在着正则表达式，C++11中也将正则表达式纳入了新标准的一部分，不仅如此，它还支持了6种不同的正则表达式的语法，分别是：ECMASCRIPT、basic、extended、awk、grep和egrep。其中ECMASCRIPT是默认的语法，具体使用哪种语法我们可以在构造正则表达式的时候指定。"}
{"publishtime": "2017/01/09·", "title": "每天一个 Linux 命令（30）:  chown 命令", "desc": "chown将指定文件的拥有者改为指定的用户或组，用户可以是用户名或者用户ID；组可以是组名或者组ID；文件是以空格分开的要改变权限的文件列表，支持通配符。系统管理员经常使用chown命令，在将文件拷贝到另一个用户的名录下之后，让用户拥有使用该文件的权限。 "}
{"publishtime": "2017/01/05·", "title": "每天一个 Linux 命令（26）：用 SecureCRT 来上传和下载文件", "desc": "用SSH管理linux服务器时经常需要远程与本地之间交互文件.而直接用SecureCRT自带的上传下载功能无疑是最方便的，SecureCRT下的文件传输协议有ASCII、Xmodem、Zmodem。"}
{"publishtime": "2017/01/09··", "title": "神经网络浅讲：从神经元到深度学习", "desc": "神经网络是一门重要的机器学习技术。它是目前最为火热的研究方向–深度学习的基础。学习神经网络不仅可以让你掌握一门强大的机器学习方法，同时也可以更好地帮助你理解深度学习技术。"}
{"publishtime": "2017/01/04·", "title": "面试被问设计模式？不要怕看这里：工厂模式", "desc": "设计模式是老生常谈的问题，有人工作多年却对设计模式一窍不通，但是更多的人是懂一点点，但是不求甚解。其实这样不好，暂且不说在工作中的应用，即便是在面试时，被面试官问到设计模式时一脸懵逼，是非常尴尬的事情。本文不废话，不谈大篇理论教学，只针对面试，给出设计模式的关键点，从应试的角度，让大家认识和理解设计模式。"}
{"publishtime": "2017/01/04·", "title": "模板显式、隐式实例化和（偏）特化、具体化的详细分析", "desc": "最近看了看到了模板的特化，突然想起来上说的显式具体化、隐式具体化、特化、偏特化、具体化等概念弄得头晕脑胀，我在网上了找了好多帖子，才把概念给理清楚。"}
{"publishtime": "2017/01/02·", "title": "C++ 类中调用基类带参数构造函数以及常量如何初始化", "desc": "文章解决了有时候，基类构造函数是带有参数，而子类构造函数是不带参数的如何定义的问题"}
{"publishtime": "2017/01/04··", "title": "现代 C++ 中的异步操作", "desc": "老实说，C++11中对异步的支持不比Python和JavaScript弱。"}
{"publishtime": "2017/01/09··", "title": "一个 Linux 上分析死锁的简单方法", "desc": "本文主要介绍一种在 Linux 上分析死锁问题的简单方法。主要介绍死锁的基本概念，以及如何使用 pstack 和 gdb 对死锁问题进行分析。"}
{"publishtime": "2017/01/04·", "title": "ZAB协议和Paxos算法", "desc": "本文介绍了一个和Chubby拥有类似功能的开放源码的分布式协调服务Zookeeper，以及Zookeeper数据一致性的核心算法ZAB。"}
{"publishtime": "2017/01/01·", "title": "内存映射文件详解-----C++实现（即一块内存和一个文件相映射对应）", "desc": "内存映射文件，是由一个文件到一块内存的映射。Win32提供了允许应用程序把文件映射到一个进程的函数 (CreateFileMapping)。内存映射文件与虚拟内存有些类似"}
{"publishtime": "2017/01/04··", "title": "Node.js 和 C++ 之间的类型转换", "desc": "虽然在 Node.js 官方网站有很多的关于怎么使用这些 API 的文档，但是在 JavaScript 和 C++ 之间传递数据是一件非常麻烦的事情，C++ 是强类型语言（”1024” 是字符串类型而不是整数类型），而 JavaScript 却总是默认的帮我们做一些类型转换。"}
{"publishtime": "2017/01/08··", "title": "MySQL 线程池内幕", "desc": "在MySQL中，线程池指的是用来管理处理MySQL客户端连接任务的线程的一种机制，我厂用的percona版本已经是集成了线程池，只需要通过如下参数开启即可。"}
{"publishtime": "2017/01/04·", "title": "每天一个 Linux 命令（25）：Linux 文件属性详解", "desc": "Linux 文件或目录的属性主要包括：文件或目录的节点、种类、权限模式、链接数量、所归属的用户和用户组、最近访问或修改的时间等内容。"}
{"publishtime": "2017/01/01·", "title": "C++ 中两个类互相引用的问题", "desc": "最近在改一个C++程序的时候碰到一条警告信息，从警告信息来看，程序应该存在内存泄露的问题，我决定解决这个问题，以下是我解决的过程"}
{"publishtime": "", "title": "未知", "desc": "暂无简介"}
{"publishtime": "2017/01/08·", "title": "聊聊面试时让候选人写代码", "desc": "我们正在对后端开发人员招聘流程做了一些改变，简化了岗位描述与面试流程，但额外增加了一个环节：请候选人写点代码。 这是基于我对招聘流程的经验，和他们对代码评审的使用来考虑的。"}
{"publishtime": "2017/01/03·", "title": "MySQL 闪回原理与实战", "desc": "DBA或开发者有时会误删或者误更新数据，如果是线上环境并且影响较大，就需要能快速回滚。"}
{"publishtime": "2017/01/01·", "title": "delete 和 delete [] 的真正区别", "desc": "c++中对new申请的内存的释放方式有delete和delete[两种方式，到底这两者有什么区别呢？"}
{"publishtime": "2017/01/08·", "title": "一个屌丝程序猿的人生（46）", "desc": "“哎！马上就来啊！”安玲聪一边安抚着门外的父母，一边和林萧商量着对策。"}
{"publishtime": "2017/01/03··", "title": "HAProxy和Nginx负载均衡分析", "desc": "出于对负载均衡工具的疑问，分别对HAProxy和nginx的负载均衡进行了抓包分析，分析的过程跟大家分享下。"}
{"publishtime": "2017/01/01··", "title": "Git 最佳实践：分支管理", "desc": "git 和 svn 的一个显著区别就是提供更丰富的分支特性，我们今天就要说一下如何合理并且高效地利用这些分支。"}
{"publishtime": "2017/01/08··", "title": "一个提高查找速度的小技巧", "desc": "在一个数组中查找某一个元素，或是在一个字符串中查找某个字符，我们一般用的代码虽然简洁明了，但在数组元素很多的情况下，并不是一个很好的解决方案，今天我就来分享一个提高查找速度的小技巧."}
{"publishtime": "2017/01/03··", "title": "Linux Shell从入门到删除根目录跑路指南", "desc": "shell 作为一门 linux 下使用广泛的系统语言，语法简单，上手容易，但是想要用好，少犯错误，也不是那么容易的一件事。本文会详细的讲述不同的场景下误删目录，以及相应的解决方案。"}
{"publishtime": "2017/01/01·", "title": "每天一个 Linux 命令（22）：find 命令的参数详解", "desc": "find一些常用参数的一些常用实例和一些具体用法和注意事项。例如文件名选项是find命令最常用的选项，要么单独使用该选项，要么和其他选项一起使用。  可以使用某种文件名模式来匹配文件，记住要用引号将文件名模式引起来。"}
{"publishtime": "2017/01/08·", "title": "MFC双缓冲绘图实例", "desc": "本人之前一直了解双缓冲绘图的基本原理，但是在研究很久之后才大概知道具体的使用过程，本文将详细介绍本人在实际项目中使用双缓冲绘图的案例。"}
{"publishtime": "2017/01/03·", "title": "bind( )适配器(Adapter) -- 调用全局函数及成员函数", "desc": "分析了bind( )适配器调用全局函数及成员函数，个人学习之路，若有误，欢迎指正。"}
{"publishtime": "2016/12/31·", "title": "C++中几个值得分析的小问题", "desc": "下面3个小问题都是我认为C++ Beginner应该能够解答或辨别清楚的。希望我们能通过题目挖掘更多的信息，而不仅仅局限在解题。我最喜欢说的话：能力有限，所以作为抛砖引玉，希望共同讨论，指出错误。"}
{"publishtime": "2017/01/08·", "title": "C++大随机数的问题", "desc": "C++的随机数最大值是RAND_MAX，在头文件中定义。"}
{"publishtime": "2017/01/03·", "title": "一次性能优化实战经历", "desc": "每次经历数据库性能调优，都是对性能优化的再次认识、对自己知识不足的有力验证，只有不断总结、学习才能少走弯路。"}
{"publishtime": "2016/12/31··", "title": "C++中泛型使用导致的膨胀问题", "desc": "C++有个问题就是模板的滥用会导致生成的文件膨胀。"}
{"publishtime": "2017/01/08··", "title": "变量命名指南", "desc": "软件是写给人来理解的；因此要合理地选择变量名。别人需要梳理你的代码，并且去理解代码的意图，才能够扩展或者修复。既浪费了空间又不直接明了的变量名很多。即使用心良苦，很多工程师最后选的变量名最多也只是徒有其表。"}
{"publishtime": "2017/01/03·", "title": "C++ 自由存储区是否等价于堆？", "desc": "自由存储区与堆是两块不同的内存区域吗？它们有可能相同吗？"}
{"publishtime": "2016/12/31·", "title": "浅谈C++指针直接调用类成员函数", "desc": "本文分析了C++编程中用指针调用“类” 成员函数时出现的问题、原因及后果，讨论了一般函数指针和“类”成员函数指针的不同。得出结论：任何指向“类”的成员函数指针，由于携带额外的所属对象信息，与一般的函数有根本的不同，不能直接用来进行函数调用。此外，本文给出了几种间接调用类的成员函数的方法。"}
{"publishtime": "2017/01/08·", "title": "每天一个 Linux 命令（29）: chgrp 命令", "desc": "在lunix系统里，文件或目录的权限的掌控以拥有者及所诉群组来管理。可以使用chgrp指令取变更文件与目录所属群组，这种方式采用群组名称或群组识别码都可以。Chgrp命令就是change group的缩写！要被改变的组名必须要在/etc/group文件内存在才行。"}
{"publishtime": "2017/01/03··", "title": "从汇编层面深度剖析 C++ 虚函数", "desc": "虚函数是C++语言实现运行时多态的唯一手段，因此掌握C++虚函数也成为C++程序员是否合格的试金石。C++虚函数的结构会因编译器不同而异，但所使用的原理是一样的。为此，本文使用linux平台下的g++编译器，试图从汇编的层面上分析虚函数表的结构，以及如何利用它来实现运行时多态。"}
{"publishtime": "2016/12/29·", "title": "自动化是节省脑力，而非时间", "desc": "花 60 分钟写了个每次运行可节省 2 分钟的自动化脚本，但该脚本使用频率极低，还有必要花时间写这个脚本吗？"}
{"publishtime": "2016/12/31·", "title": "每天一个 Linux 命令（21）：find命令之xargs", "desc": "在使用 find命令的-exec选项处理匹配到的文件时， find命令将所有匹配到的文件一起传递给exec执行。但有些系统对能够传递给exec的命令长度有限制，这样在find命令运行几分钟之后，就会出现溢出错误。错误信息通常是“参数列太长”或“参数列溢出”。这就是xargs命令的用处所在，特别是与find命令一起使用。"}
{"publishtime": "2017/01/08·", "title": "如何在 Linux 中找出最近或今天被修改的文件", "desc": "Linux 用户在命令行上遇到的常见问题之一是定位具有特定名称的文件，如果你知道确定的文件名则可能会容易得假设你忘记了白天早些时候创建的文件的名称（在你包含了数百个文件的 home 文件夹中），但现在你有急用。"}
{"publishtime": "2017/01/03·", "title": "写出易调试的 SQL", "desc": "相比高级语言的调试，调试SQL是件痛苦的事。特别是那些上千行的存储过程，更是我等码农的噩梦。"}
{"publishtime": "2016/12/29·", "title": "一个复杂系统的拆分改造实践", "desc": "为什么要拆分？"}
{"publishtime": "2016/12/30·", "title": "Sku 多维属性状态判断算法", "desc": "这个问题来源于选择商品属性的场景。比如我们买衣服、鞋子这类物件，一般都需要我们选择合适的颜色、尺码等属性…"}
{"publishtime": "2017/01/07·", "title": "如何按最后修改时间对 ls 命令的输出进行排序", "desc": "我们列出目录内容时，可以按照不同的标准进行排序，例如文件名、修改时间、添加时间、版本或者文件大小。可以通过指定一个特别的参数来使用这些文件的属性进行排序。 "}
{"publishtime": "2017/01/03·", "title": "每天一个 Linux 命令（24）：Linux 文件类型与扩展名", "desc": "Linux文件类型和Linux文件的文件名所代表的意义是两个不同的概念。我们通过一般应用程序而创建的比如file.txt、file.tar.gz ，这些文件虽然要用不同的程序来打开，但放在Linux文件类型中衡量的话，大多是常规文件（也被称为普通文件）。"}
{"publishtime": "2016/12/29·", "title": "高速网络下的 Netmap 单 RX 队列内核旁路技术", "desc": "在 前一篇文章 中，我们讨论了 Linux 内核网络协议栈的性能瓶颈。我们详细说明了如何利用内核旁路技术，让用户空间程序可以接收大量的数据包。遗憾的是，没有开源解决方案讨论过这个问题，来满足我们的需求。为了改善现状，我们决定为 Netmap 项目 做点贡献。"}
{"publishtime": "2016/12/30··", "title": "面试被问设计模式？不要怕看这里：单例模式", "desc": "设计模式是老生常谈的问题，有人工作多年却对设计模式一窍不通，但是更多的人是懂一点点，但是不求甚解。其实这样不好，暂且不说在工作中的应用，即便是在面试时，被面试官问到设计模式时一脸懵逼，是非常尴尬的事情。"}
{"publishtime": "2017/01/07·", "title": "一个屌丝程序猿的人生（45）", "desc": "林萧懵逼的指了指自己，“你说我吗？”"}
{"publishtime": "2017/01/03·", "title": "哪种编程语言最流行？", "desc": "经常有人问哪个编程语言最流行？这问题很简单，但是回答起来可没那么简单。 "}
{"publishtime": "2016/12/29·", "title": "每天一个 Linux 命令（19）：find 命令概览", "desc": "Linux下find命令在目录结构中搜索文件，并执行指定的操作。Linux下find命令提供了相当多的查找条件，功能很强大。由于find具有强大的功能，所以它的选项也很多，其中大部分选项都值得我们花时间来了解一下。即使系统中含有网络文件系统( NFS)，find命令在该文件系统中同样有效，只你具有相应的权限。"}
{"publishtime": "2016/12/30·", "title": "C 中 static 的常见作用", "desc": "编写C语言程序时经常会用到static，总结记录一下其常见作用"}
{"publishtime": "", "title": "未知", "desc": "暂无简介"}
{"publishtime": "2017/01/02··", "title": "漫画：程序员不是修电脑的！", "desc": "程序员春节回家，如果没被亲戚朋友叫去修电脑/手机/路由器之类的，那还真不好意思说自己是程序员了 :)"}
{"publishtime": "2016/12/28·", "title": "C++ 中三种正则表达式比较（C regex，C ++regex，boost regex）", "desc": "工作需要用到C++中的正则表达式，所以就研究了C regex，C ++regex，boost regex 三种正则。"}
{"publishtime": "2016/12/30·", "title": "C++读取、旋转和保存 bmp 图像文件编程实现", "desc": "通过我这些天用C++读写bmp图像的经历，摸索再摸索，终于对bmp文件的结构、操作有了一定的了解，下面就大概介绍bmp图片纯C++的读取、旋转和保存的实现过程。"}
{"publishtime": "2017/01/02··", "title": "一个屌丝程序猿的人生（43）", "desc": "“我想见见你……”"}
{"publishtime": "2016/12/28·", "title": "C程序编译过程浅析", "desc": "前几天看了《程序员的自我修养——链接、装载与库》中的第二章“编译和链接”，主要根据其中的内容简单总结一下C程序编译的过程吧。"}
{"publishtime": "2016/12/30·", "title": "C/C++ 二进制读写 png 文件", "desc": "为了弄OpenGl的纹理代码，发现书上没有图片像素的获取，然后就想写个来获取png的，只有最简单的读写"}
{"publishtime": "2017/01/02··", "title": "普通程序员如何转向人工智能方向？", "desc": "本文目的是给出一个简单平滑、易于实现的学习方法，帮助 “普通” 程序员踏入AI领域这个门。这里，我对普通程序员的定义是：拥有大学本科知识；平时工作较忙；自己能获取的数据有限。因此，本文更像是一篇从零开始的AI入门教程。"}
{"publishtime": "2016/12/28·", "title": "OpenCV矩阵运算", "desc": "总结了OpenCV矩阵运算的一些函数及其用法"}
{"publishtime": "2016/12/30··", "title": "每天一个 Linux 命令（20）：find命令之exec", "desc": "find是我们很常用的一个Linux命令，但是我们一般查找出来的并不仅仅是看看而已，还会有进一步的操作，这个时候exec的作用就显现出来了。"}
{"publishtime": "2017/01/02·", "title": "把 SQL Server 迁移到 Linux？不如换成 MySQL", "desc": "最近几年，数量庞大的个人和组织放弃 Windows 平台选择 Linux 平台，而且随着人们体验到更多 Linux 的发展，这个数字将会继续增长。"}
{"publishtime": "2016/12/28·", "title": "每天一个 Linux 命令（18）：locate 命令", "desc": "locate 让使用者可以很快速的搜寻档案系统内是否有指定的档案。其方法是先建立一个包括系统内所有档案名称及路径的数据库，之后当寻找时就只需查询这个数据库，而不必实际深入档案系统之中了。在一般的 distribution 之中，数据库的建立都被放在 crontab 中自动执行。"}
{"publishtime": "2016/12/29··", "title": "为什么软件开发，人多事少，还会工作量大？", "desc": "我来谈谈亲身经历过的“怪现象”。为什么说怪呢，人多力量大，似乎才符合常理，但是往往在软件项目开展的过程中会出现人多、事少、工作量大的情况，这跟我们以往的认知大相径庭。"}
{"publishtime": "2017/01/02··", "title": "每天一个 Linux 命令（23）：Linux 目录结构", "desc": "对于每一个Linux学习者来说，了解Linux文件系统的目录结构，是学好Linux的至关重要的一步.，深入了解linux文件目录结构的标准和每个目录的详细功能，对于我们用好linux系统只管重要，下面我们就开始了解一下linux目录结构的相关知识。"}
{"publishtime": "2016/12/27·", "title": "C++设计模式——适配器模式（对象适配器、类适配器）", "desc": "在设计模式中，也存在一种类似的模式，存在两个接口不同的类，可以使用一个适配器类来将一个接口转换为客户希望的另一个接口，称为适配器模式。"}
{"publishtime": "2016/12/29·", "title": "C/C++ 结构体字节对齐详解", "desc": "从理论上讲，对于任何 变量的访问都可以从任何地址开始访问，但是事实上不是如此，实际上访问特定类型的变量只能在特定的地址访问，这就需要各个变量在空间上按一定的规则排列， 而不是简单地顺序排列，这就是内存对齐。"}
{"publishtime": "2017/01/02·", "title": "char* 转 LPCWSTR 解决方案", "desc": "在Windows编程中，经常会碰到字符串之间的转换，char*转LPCWSTR也是其中一个比较常见的转换。下面就列出几种比较常用的转换方法。"}
{"publishtime": "2016/12/27·", "title": "拷贝构造函数中的陷阱", "desc": "拷贝构造函数大家都比较熟悉，通俗讲就是传入一个对象，拷贝一份副本。不过看似简单的东西，实际不注意的话就会产生问题！"}
{"publishtime": "2016/12/29·", "title": "pthread_create() 给创建的线程传递参数", "desc": "对于pthread_create为创建线程传递参数的问题，先前只知道传递单个参数的方法，现在需要传递多个参数。对于新手的我比较纠结，下面把帖子中认为对自己有用的知识摘录下来，以后经常看看。"}
{"publishtime": "2017/01/02·", "title": "在 C++ 中子类继承和调用父类的构造函数方法", "desc": "构造方法用来初始化类的对象，与父类的其它成员不同，它不能被子类继承（子类可以继承父类所有的成员变量和成员方法，但不继承父类的构造方法）。因此，在创建子类对象时，为了初始化从父类继承来的数据成员，系统需要调用其父类的构造方法。"}
{"publishtime": "2016/12/27·", "title": "opencv中的图像形态学——腐蚀膨胀", "desc": "腐蚀膨胀是图像形态学比较常见的处理，腐蚀一般可以用来消除噪点，分割出独立的图像元素等。"}
{"publishtime": "2016/12/29·", "title": "详解 C++ 的模板中 typename 关键字的用法", "desc": "在C++的Template中我们经常可以见到使用typename来定义类型名称,更加具体的我们就在接下来为大家详解C++的模板中typename关键字的用法,需要的朋友可以参考下"}
{"publishtime": "", "title": "未知", "desc": "暂无简介"}
{"publishtime": "2016/12/27··", "title": "shell 中的>/dev/null 2>&1 是什么鬼？", "desc": "以前的我并没有去深入地理解这段命令的作用，照搬照用，直到上周我将这段命令不小心写成了2>&1 >/dev/null，出了一点小问题之后，我才开始去了解这段命令背后的“玄机”。"}
{"publishtime": "", "title": "未知", "desc": "暂无简介"}
{"publishtime": "2016/12/27·,·", "title": "这些最热门的 PHP 框架，哪一款是你的菜？", "desc": "本文通过 Symfony 、Laravel 、Yii 三款最流行的 PHP 框架的概述和比较，让开发者能够根据自己的具体情况选择一款最适合自己的框架。"}
{"publishtime": "2016/12/27··", "title": "Tomcat多实例单应用部署方案", "desc": "通常，我们对tomcat部署需求可以分为几种：单实例单应用，单实例多应用，多实例单应用，多实例多应用。如果不要求周期性地维护tomcat版本，一般的做法是把打好的war包丢到webapps目录下，然后执行startup.sh脚本，并且可以在浏览器里访问就行了。"}
{"publishtime": "2016/12/27·", "title": "每天一个 Linux 命令（17）：whereis 命令", "desc": "whereis命令只能用于程序名的搜索，而且只搜索二进制文件（参数-b）、man说明文件（参数-m）和源代码文件（参数-s）。如果省略参数，则返回所有信息。"}
{"publishtime": "2016/12/27··", "title": "程序员的 12 个新年愿望", "desc": "对于程序员来讲，挑战自我是重要的。有创造力的以及技术性的休整是可行的。在新年来临之际，我整理了 12 个心愿。"}
{"publishtime": "2016/12/26·", "title": "如何实现内核旁路（Kernel bypass）？", "desc": "在前两篇文章中，我们讨论了如何每秒接收百万 UDP 数据包 以及 如何减少往返时间 。我们在 Linux 上做试验，因为它是一个性能非常好的通用操作系统。"}
{"publishtime": "2016/12/26·", "title": "C++ new A 和 new A() 的区别详解", "desc": "我们在C++程序中经常看到两种new的使用方式：new A以及new A()。那么这两种究竟有什么区别呢？"}
{"publishtime": "2016/12/26··", "title": "你很烫吗？我很烫", "desc": "相信经常用VC的朋友对屏幕输出的一大堆“烫烫烫烫烫烫烫烫烫烫烫烫烫烫烫烫烫烫烫烫烫烫烫”不会陌生，但是也许会很奇怪，为什么会出现“烫”字呢？"}
{"publishtime": "2016/12/26·", "title": "使用 C++ 读写 Excel", "desc": "C++有很好的文本文件读写函数，日常生活中我们会用到Excel表格，让我们来看看怎么用C++程序读写Excel文件"}
{"publishtime": "", "title": "未知", "desc": "暂无简介"}
{"publishtime": "2016/12/26··", "title": "10 个有趣的程序员笑话，不懂可以看解释", "desc": "嘿嘿，程序员的幽默可以程序员们捧腹大笑，而其他人则一头雾水，看不到懂这些段子的笑点。如果你不是程序员，请看看下方对应的解释。"}
{"publishtime": "2016/12/26··", "title": "一个屌丝程序猿的人生（42）", "desc": "“MD，你特么到底是谁啊？说话！”"}
{"publishtime": "2016/12/26·", "title": "基于Nginx的软件负载均衡实现解读", "desc": "负载均衡可以分为硬件负载均衡和软件负载均衡，前者一般是专用的软件和硬件相结合的设备，设备商会提供完整成熟的解决方案，通常也会更加昂贵。软件的复杂均衡以Nginx占据绝大多数，本文也是基于其手册做相应的学习研究的。"}
{"publishtime": "2016/12/26·", "title": "每天一个 Linux 命令（16）：which命令", "desc": "which命令的作用是，在PATH变量指定的路径中，搜索某个系统命令的位置，并且返回第一个搜索结果。也就是说，使用which命令，就可以看到某个系统命令是否存在，以及执行的到底是哪一个位置的命令。 "}
{"publishtime": "2016/12/25·", "title": "STL 的 erase() 陷阱-迭代器失效总结", "desc": "STL中的容器按存储方式分为两类，一类是按以数组形式存储的容器（如：vector 、deque)；另一类是以不连续的节点形式存储的容器（如：list、set、map）。在使用erase方法来删除元素时，需要注意一些问题。"}
{"publishtime": "2016/12/25·", "title": "深入解析 C++ 中的字符数组和处理字符串的方法", "desc": "这篇文章主要介绍了深入解析C++中的字符数组和处理字符串的方法,需要的朋友可以参考下"}
{"publishtime": "2016/12/25·", "title": "C++成员函数的重载，继承，覆盖和隐藏", "desc": "成员函数的重载(overloaded)、覆盖（ override）与隐藏很容易混淆， C++程序员必须要搞清楚概念，否则错误将防不胜防。"}
{"publishtime": "2016/12/25·", "title": "C/C++遍历文件夹和文件", "desc": "遍历文件夹和文件，本方法可用于windows和linux双平台，采用C/C++标准库函数。"}
{"publishtime": "2016/12/25··", "title": "C++ 中的替换空格", "desc": " 例，请实现一个函数，把字符串中的每个空格替换成“%20”。例如输入“We are happy.”，则输出“We%20are%20happy.”。"}
{"publishtime": "2016/12/25·", "title": "C++常用字符串分割方法", "desc": "经常碰到字符串分割的问题，这里总结下，也方便我以后使用。"}
{"publishtime": "2016/12/25·", "title": "每天一个 Linux 命令（15）：tail 命令", "desc": "tail 命令从指定点开始将文件写到标准输出，使用tail命令的-f选项可以方便的查阅正在改变的日志文件，tail -f filename会把filename里最尾部的内容显示在屏幕上，并且不但刷新，使你看到最新的文件内容。"}
{"publishtime": "2016/12/24··", "title": "每天一个 Linux 命令（14）：head 命令", "desc": "head 与 tail 就像它的名字一样的浅显易懂，它是用来显示开头或结尾某个数量的文字区块，head 用来显示档案的开头至标准输出中，而 tail 想当然尔就是看档案的结尾。"}
{"publishtime": "2016/12/23·", "title": "GitHub 开源的 MySQL 在线更改 Schema 工具", "desc": "MySQL在线更改schema的工具很多，如Percona的pt-online-schema-change、 Facebook的 OSC 和 LHM 等，但这些都是基于触发器（Trigger）的，今天咱们介绍的 gh-ost 号称是不需要触发器（Triggerless）支持的在线更改表结构的工具。"}
{"publishtime": "2016/12/23··", "title": "MySQL 大表优化方案", "desc": "当 MySQL 单表记录数过大时，增删改查性能都会急剧下降，可以参考本文以下步骤来优化。"}
{"publishtime": "2016/12/23·", "title": "C++中的复制控制", "desc": "每种类型，无论是内置类型还是类类型，都对该类型对象的一组操作的含有进行了定义。每种类型还定义了创建该类型的对象时会发生什么——构造函数定义了该类类型对象的初始化。类型还能控制复制、赋值或撤销该类型的对象时会发生什么——类通过特殊的成员函数：复制构造函数、赋值操作符和析构函数来控制这些行为。"}
{"publishtime": "2016/12/23·", "title": "new 和 malloc 的区别", "desc": "以下是分别是对new和malloc的区别进行了详细的分析及介绍"}
{"publishtime": "2016/12/23·", "title": "标准 C++ 中的 string 类的用法总结", "desc": "标准C++中提供的string类得功能也是非常强大的，一般都能满足我们开发项目时使用。现将具体用法的一部分罗列如下，只起一个抛砖引玉的作用吧，好了，废话少说，直接进入正题吧！"}
{"publishtime": "2016/12/23·", "title": "10 个有关代码审查和代码质量的事实", "desc": "这是一篇关于代码质量和代码评审重要事实的简短文章。问及了 680 家公司的代码质量和代码审查实践。"}
{"publishtime": "2016/12/23··", "title": "MyCAT 数据分片入门实战", "desc": "近日尝试了关于Mycat分表分库的特性，这里做一些整理，作为入门的参考。本文不对Mycat配置的每一项都进行详细解释，这些内容在其官方的权威指南中都有介绍，这里阐述部署mycat的实际操作过程。"}
{"publishtime": "2016/12/23··", "title": "警惕那些产生负价值的开发者", "desc": "在软件开发者的职业生涯中，我们一定会遇上一两个产生负价值的同事。你也许会想：负价值是个什么鬼？ "}
{"publishtime": "2016/12/23·", "title": "Git 最佳实践：commit msg", "desc": "git commit 是很小的一件事情，但是往往小的事情往往引不起大家的关注，不妨去打开某个 repo，查看 commit log，满篇的 update 和 fix，完全不知道这些 commit 是要做啥。下面就说一些最近的看到和自己尝试的一些还不错的实践。"}
{"publishtime": "2016/12/23··", "title": "程序员伤不起的 30 岁", "desc": "程序员干到30岁，好不容易从码奴混到了白领，却再也干不动了，还时时面临失业的危险。30岁，是一个程序员伤不起的年龄。明天，何去何从？"}
{"publishtime": "2016/12/23·", "title": "每天一个 Linux 命令（13）：less 命令", "desc": "less 工具也是对文件或其它输出进行分页显示的工具，应该说是linux正统查看文件内容的工具，功能极其强大。less 的用法比起 more 更加的有弹性。在 more 的时候，我们并没有办法向前面翻， 只能往后面看，但若使用了 less 时，就可以使用 [pageup] [pagedown] 等按键的功能来往前往后翻看文件，更容易用来查看一个文件的内容！"}
{"publishtime": "", "title": "未知", "desc": "暂无简介"}
{"publishtime": "2016/12/23··", "title": "程序员必读的十篇文章", "desc": "作为一个程序员，我从许多『关于某某每个程序员必知』这类文章中学到了很多东西，它们会就一个特定的话题给出很多有用有深度而且难以被发现的信息。我在求知的过程中遇到过一些很有用的文章，并将它们存为书签用于日后参考和重复阅读。"}
{"publishtime": "2016/12/22··", "title": "C++函数中那些不可以被声明为虚函数的函数", "desc": "常见的不不能声明为虚函数的有：普通函数（非成员函数）；静态成员函数；内联成员函数；构造函数；友元函数。"}
{"publishtime": "2016/12/22·", "title": "MFC 消息映射机制详解", "desc": "MFC程序掩盖了消息处理的过程，以消息映射的方式呈现在开发者面前，使得开发消息的处理十分简单。用多了mfc就想对它的消息映射机制有一个本质的了解，下面将对消息映射做详细的分析。当然，在分析MFC消息映射之前首先对Windows程序的消息处理过程进行一个简单的描述"}
{"publishtime": "2016/12/22··", "title": "C++ 线程同步的四种方式", "desc": "在WIN32中，同步机制主要有以下几种："}
{"publishtime": "2016/12/22·", "title": "每天一个 Linux 命令（12）：more 命令", "desc": "more命令，功能类似 cat ，cat命令是整个文件的内容从上到下显示在屏幕上。 more会以一页一页的显示方便使用者逐页阅读，而最基本的指令就是按空白键（space）就往下一页显示，按 b 键就会往回（back）一页显示，而且还有搜寻字串的功能 。more命令从前向后读取文件，因此在启动时就加载整个文件。"}
{"publishtime": "2016/12/21··", "title": "当今世界最NB的25位大数据科学家", "desc": "在大数据技术飞速发展的今天，谁才是我们大数据科研与工业界中最有威望的科学家呢？下面我们来进行梳理，共罗列了25位当今世界，无论是在学术与工业界都产生巨大影响的数据科学家（Data Scientists）。他们推动了整个领域的发展，毫无疑问，无论是在学术界还是还工业界，他们都是一座座山头式的人物。"}
{"publishtime": "2016/12/21··", "title": "深入理解 Java G1 垃圾收集器", "desc": "本文首先简单介绍了垃圾收集的常见方式，然后再分析了G1收集器的收集原理，相比其他垃圾收集器的优势，最后给出了一些调优实践。"}
{"publishtime": "2016/12/21·", "title": "C++多重继承要慎用!", "desc": "前几天在写程序时，发现一个多重继承类，调用virtual函数会出现一个问题，该问题比较隐晦（因为不会引起程序core dump等严重的效果，我是很偶然的在单元测试中发现的），不容易定位，但是如果出现，可能对程序逻辑会带来致命的问题。"}
{"publishtime": "2016/12/20··", "title": "递归算法转换为非递归算法的技巧", "desc": "递归函数具有很好的可读性和可维护性，但是大部分情况下程序效率不如非递归函数，所以在程序设计中一般喜欢先用递归解决问题，在保证方法正确的前提下再转换为非递归函数以提高效率。"}
{"publishtime": "2016/12/21·", "title": "C++泛型算法", "desc": "本文主要讨论C++标准库中的泛型算法(generic algorithm)。泛型算法是使用容器的强有力的辅助工具。"}
{"publishtime": "2016/12/20·", "title": "每天一个 Linux 命令（10）：cat 命令", "desc": "cat命令的用途是连接文件或标准输入并打印。这个命令常用来显示文件内容，或者将几个文件连接起来显示，或者从标准输入读取内容并显示，它常与重定向符号配合使用。"}
{"publishtime": "2016/12/21·", "title": "C++ 中捕获整数除零错误", "desc": " 继承自 C 的优良传统, C++ 也是一门非常靠近底层的语言, 可是实在是太靠近了, 很多问题语言本身没有提供解决方案, 可执行代码贴近机器, 运行时没有虚拟机来反馈错误, 跑着跑着就毫无征兆地崩溃了, 简直比过山车还刺激."}
{"publishtime": "2016/12/20·", "title": "无锁数据结构（机制篇）：内存管理规则", "desc": "我在前文已经提到，实现无锁数据结构最大的两个困难，一是ABA问题，二是内存回收。即便它们之间有联系，却鲜有两全其美的办法，同时解决这两大难题，因此我将其分为两个问题进行讨论。"}
{"publishtime": "2016/12/21··", "title": "为什么有的人工作多年还是老样子？", "desc": "前段时间面试了一位三年工作经验的程序员，期望薪资10k。在程序员这行业，三年工作经验，又是一线城市，这期望薪资算是一般。"}
{"publishtime": "2016/12/19··", "title": "16道嵌入式Ｃ语言面试题(经典)", "desc": "16道比较经典的嵌入式C语言面试题"}
{"publishtime": "2016/12/21··", "title": "关于Epoll，你应该知道的那些细节", "desc": "Epoll，位于头文件sys/epoll.h，是Linux系统上的I/O事件通知基础设施。epoll API为Linux系统专有，于内核2.5.44中首次引入，glibc于2.3.2版本加入支持。其它提供类似的功能的系统，包括FreeBSD kqueue，Solaris /dev/poll等。"}
{"publishtime": "2016/12/19·", "title": "函数内联", "desc": "C++ 语言支持函数内联，其目的是为了提高函数的执行效率（速度）。在 C 程序中，可以用宏代码提高执行效率。"}
{"publishtime": "2016/12/21··", "title": "C 语言随机数生成器的实现分析", "desc": "本文是为了记录和澄清一个由来已久的关于 C 语言随机数生成器的误解。"}
{"publishtime": "2016/12/19··", "title": "C 语言画图之画个太极图", "desc": "呵呵昨天花了一个圆，今天想画个太极图，我知道没啥技术含量，但是挺有意思的，希望各位看官不要鄙视我不务正业，画完此图，不再做这些事情。"}
{"publishtime": "2016/12/21·", "title": "每天一个 Linux 命令（11）：nl 命令", "desc": "nl命令在linux系统中用来计算文件中行号。nl 可以将输出的文件内容自动的加上行号！其默认的结果与 cat -n 有点不太一样， nl 可以将行号做比较多的显示设计，包括位数与是否自动补齐 0 等等的功能。"}
{"publishtime": "2016/12/19·", "title": "MySQL 高性能存储引擎：TokuDB初探", "desc": "TokuDB 是一个支持事务的“新”引擎，有着出色的数据压缩功能，由美国 TokuTek 公司研发。拥有出色的数据压缩功能，如果您的数据写多读少，而且数据量比较大，强烈建议您使用TokuDB，以节省空间成本，并大幅度降低存储使用量和IOPS开销，不过相应的会增加 CPU 的压力。"}
{"publishtime": "2016/12/20··", "title": "PouchDB：一个开源的 JS 数据库", "desc": "PouchDB 是一个受 Apache CouchDB 启发的开源 JavaScript 数据库，可以完美运行在浏览器中。设计初衷是，帮助Web开发者构建能在本地离线运行的App，一如在线时运行的一样。"}
{"publishtime": "2016/12/19·,·", "title": "而立之年，未开始的创业路", "desc": "“现代人不是渴望成功，而是渴望马上成功。”"}
{"publishtime": "2016/12/20·", "title": "浅谈内存泄漏", "desc": "对于一个c/c++程序员来说，内存泄漏是一个常见的也是令人头疼的问题。已经有许多技术被研究出来以应对这个问题，比如Smart Pointer，Garbage Collection等。"}
{"publishtime": "2016/12/19··", "title": "每天一个 Linux 命令（9）：touch 命令", "desc": "linux的touch命令不常用，一般在使用make的时候可能会用到，用来修改文件时间戳，或者新建一个不存在的文件。"}
{"publishtime": "2016/12/20·", "title": "C++ 值传递、指针传递、引用传递详解", "desc": "最近写了几篇深层次讨论数组和指针的文章，其中提到了“C语言中，所有非数组的形式参数传递均以值传递形式”而关于值传递，指针传递，引用传递这几个方面还会存在误区， 所有我觉的有必要在这里也说明一下~"}
{"publishtime": "2016/12/19··", "title": "PHP命令行下的世界", "desc": "PHP作为一门web开发语言，通常情况下我们都是在Web Server中运行PHP，使用浏览器访问，因此很少关注其命令行操作以及相关参数的使用，但是，特别是在类Unix操作系统上，PHP可以作为一门脚本语言执行与shell类似的处理任务。"}
{"publishtime": "", "title": "未知", "desc": "暂无简介"}
{"publishtime": "2016/12/19··", "title": "三十分钟学会SED", "desc": "本文承接之前写的三十分钟学会AWK一文，在学习完AWK之后，趁热打铁又学习了一下SED，不得不说这两个工具真的堪称文本处理神器，谁用谁知道！"}
{"publishtime": "2016/12/19··", "title": "三十分钟学会AWK", "desc": "本文大部分内容翻译自我开始学习AWK时看到的一篇英文文章 AWK Tutorial ，觉得对AWK入门非常有帮助，所以对其进行了粗略的翻译，并对其中部分内容进行了删减或者补充"}
{"publishtime": "2016/12/19··", "title": "还以为 Java 是免费的？甲骨文可能要对 Java 非付费用户下手了", "desc": "甲骨文公司目前审查的客户和合伙人的数量越来越多，他们都被认为有违规使用 Java 的行为。2010 年甲骨文收购了 Sun，因此获得了 Java 的所有权。不过据知情人士透露，这是收购 6 年以来，甲骨文首次由其许可证管理服务部门企图通过 Java 向用户收费。"}
{"publishtime": "2016/12/17··", "title": "从 HTML 提取文本的 7 个工具", "desc": "本文包括了为初学者和小项目而设计的简单工具，还有需要一定的编码知识，旨在用于更大，更困难的任务的高级工具。"}
{"publishtime": "2016/12/19·", "title": "测试自动化后，我们需要怎样的QA？", "desc": "我们先讨论一下在传统的瀑布模型下QA是如何工作的，其中最主要的问题是什么；然后作为对比，我们再来看看敏捷团队里的QA是如何工作的，工作重点又是什么；最后，我们详细看一看在新的职责下，QA应该如何做。"}
{"publishtime": "2016/12/17·", "title": "PHP 内核分析（2）：ZTS和zend_try", "desc": "这里阅读的php版本为PHP-7.1.0 RC3，阅读代码的平台为linux"}
{"publishtime": "2016/12/17·", "title": "把《编程珠玑》读薄", "desc": "看着厚厚的一本《编程珠玑》是不是觉得难以下口，本文将这本书的要点精华做了提取和总结，也希望广大读者自己去将这本书读薄，读透。"}
{"publishtime": "2016/12/17··", "title": "聊聊创业初期的技术选择", "desc": "小型创业团队在创业初期面临的一个重要问题：如何选择合适的技术来优化、助推创业过程。"}
{"publishtime": "2016/12/17·", "title": "每天一个 Linux 命令（7）：mv命令", "desc": "mv命令是move的缩写，可以用来移动文件或者将文件改名（move (rename) files），是Linux系统下常用的命令，经常用来备份文件或者目录。"}
{"publishtime": "2016/12/17·", "title": "C 可变长参数 VS C++11 可变长模板", "desc": "有些时候，我们定义一个函数，可能这个函数需要支持可变长参数，也就是说调用者可以传入任意个数的参数。比如C函数printf().那么这个函数是怎么实现的呢？其实C语言支持可变长参数的。对于C++这种强类型语言而言，C的这种可变长方案等于是开了个后门，函数居然不知道传进来的参数是什么类型。所以在C++11里面专门提供了对可变长参数的更现代化的支持，那就是可变长模板。"}
{"publishtime": "2016/12/17·", "title": "C++ 运算符重载讲解与经典实例", "desc": "C++中预定义的运算符的操作对象只能是基本数据类型，实际上，对于很多用户自定义类型，也需要有类似的运算操作。"}
{"publishtime": "2016/12/17·", "title": "C++ 中 this 指针的用法详解", "desc": "一个对象的this指针并不是对象本身的一部分，不会影响sizeof(对象)的结果。this作用域是在类内部，当在类的非静态成员函数中访问类的非静态成员的时候，编译器会自动将对象本身的地址作为一个隐含参数传递给函数。也就是说，即使你没有写上this指针，编译器在编译的时候也是加上this的，它作为非静态成员函数的隐含形参，对各成员的访问均通过this进行。"}
{"publishtime": "2016/12/18··", "title": "REST 在 Java 中的使用", "desc": "Java是在 J2EE 6中引入了对REST的支持，即JSR-311，现在JAX-RS到2.0版本了，对应的是JSR-339，JSR是Java技术规范提案，由JCP组织进行管理。该规范使得使用Java进行开发的人员使用一套固定的接口来开发 REST 应用，避免了依赖于第三方框架。"}
{"publishtime": "2016/12/16·", "title": "常见 SQL Server 规范集锦", "desc": "常见 SQL Server 规范有常见的字段类型选择、约束与索引、禁止使用SELECT * 和禁止在索引列上使用函数或计算等。"}
{"publishtime": "2016/12/18·", "title": "C 语言位域使用及其注意事项", "desc": "所谓“位域”是把一个字节中的二进位划分为几个不同的区域， 并说明每个区域的位数。每个域有一个域名，允许在程序中按域名进行操作。 这样就可以把几个不同的对象用一个字节的二进制位域来表示。"}
{"publishtime": "2016/12/16·", "title": "常对象与常成员函数", "desc": "用const修饰的对象叫对象常量，常对象实例化后将不能被改变，而且常对象也不能调用其它成员函数，那么它有什么用呢？办法是，C++编译器故意设计成，常对象只能调用常成员函数，这是它唯一的对外接口。"}
{"publishtime": "2016/12/18··", "title": "理解 Thread.Sleep 函数", "desc": "我们可能经常会用到 Thread.Sleep 函数来使线程挂起一段时间。那么你有没有正确的理解这个函数的用法呢？思考下面这两个问题："}
{"publishtime": "2016/12/16·", "title": "一致性非锁定读与一致性锁定读", "desc": "一致性非锁定读指的是如果一条记录被加了X锁，其他事务还能读取这条记录。"}
{"publishtime": "2016/12/18··", "title": "（C语言版）猴子吃桃问题", "desc": "问题描述："}
{"publishtime": "2016/12/16·", "title": "利用 C++ 实现 md5 算法", "desc": "因为需要校验文件，所以要使用md5算法，发现用Python脚本生成文件的md5值不要太简单啊"}
{"publishtime": "2016/12/18·", "title": "关于 STL 中的 map 和 hash_map", "desc": "在网上看到有关STL中hash_map的文章，以及一些其他关于STL map和hash_map的资料，总结笔记如下："}
{"publishtime": "2016/12/16··", "title": "话说智能指针发展之路", "desc": "本文为了突出对比表现各种智能智能的优劣，所以虚构了一个“发展之路”。"}
{"publishtime": "2016/12/18·", "title": "每天一个 Linux 命令（8）：cp 命令", "desc": "cp命令用来复制文件或者目录，是Linux系统中最常用的命令之一。一般情况下，shell会设置一个别名，在命令行下复制文件时，如果目标文件已经存在，就会询问是否覆盖，不管你是否使用-i参数。但是如果是在shell脚本中执行cp时，没有-i参数时不会询问是否覆盖。"}
{"publishtime": "2016/12/16·", "title": "每天一个 Linux 命令（6）：rmdir 命令", "desc": "今天学习一下linux中命令： rmdir命令。rmdir是常用的命令，该命令的功能是删除空目录，一个目录被删除之前必须是空的。删除某目录时也必须具有对父目录的写权限。"}
{"publishtime": "", "title": "未知", "desc": "暂无简介"}
{"publishtime": "2016/12/16·", "title": "为什么我离开 Google 加入一个小创业公司", "desc": "2016年的6月我开始觉醒，下定决心离开谷歌——我事业生涯中最好的一份工作，加入一个区域性的初创公司“Careem”。我父亲说我疯了，我的朋友说我到了中年危机，但是我觉得我遇到了中年机遇，中年责任。"}
{"publishtime": "2016/12/16·", "title": "DSP基础算法与模型研究", "desc": "最近我研究了一下M6D公司的DSP算法，和大家分享一下我的理解，希望以一个实例让大家对DSP中的基础算法和模型有一个初步的了解。写得不对的地方，还请大家及时指正。"}
{"publishtime": "2016/12/16·", "title": "开源软件那么多，我们该如何选择？", "desc": "在我们日常的项目中，开源软件或者框架也被广泛的应用，从前端到后台，从WEB服务器到数据库，每一种类型都有很多可以使用的开源软件。面临这么多的选择，就算是老司机，可能会觉得难以取舍。"}
{"publishtime": "2016/12/15·", "title": "SVN、GIT日常看我就够了", "desc": "本文详细介绍了SVN和GIT两大版本控制工具的配置及使用，能熟练运用这两大工具，应付日常工作足够了。"}
{"publishtime": "2016/12/15·", "title": "每天一个 Linux 命令（5）：rm 命令", "desc": "rm是常用的命令，该命令的功能为删除一个目录中的一个或多个文件或目录，它也可以将某个目录及其下的所有文件及子目录均删除。对于链接文件，只是删除了链接，原有文件均保持不变。"}
{"publishtime": "2016/12/15·", "title": "C++命名空间", "desc": "命名空间是ANSIC++引入的可以由用户命名的作用域，用来处理程序中 常见的同名冲突。在 C语言中定义了3个层次的作用域，即文件(编译单元)、函数和复合语句。C++又引入了类作用域，类是出现在文件内的。在不同的作用域中可以定义相同名字的变量，互不于扰，系统能够区别它们。"}
{"publishtime": "", "title": "未知", "desc": "暂无简介"}
{"publishtime": "2016/12/15·", "title": "STL 之 vector 容器详解", "desc": "vector是C++标准模版库(STL,Standard Template Library)中的部分内容。之所以认为是一个容器，是因为它能够像容器一样存放各种类型的对象，简单的说：vector是一个能够存放任意类型的动态数组，能够增加和压缩数据。"}
{"publishtime": "2016/12/15·", "title": "互斥量与临界区的区别", "desc": "不管是辅助线程还是用户接口线程，在存取共享资源时，都需要保护共享资源，以免引起冲突，造成错误。处理方法类似于Win32 API函数的使用，但MFC为我们提供了几个同步对象C++类，即CSyncObject、CMutex、CSemaphore、CEvent、CCriticalSection。这里，CSyncObject为其它四个类的基类，后四个类分别对应前面所讲的四个Win32 API同步对象。"}
{"publishtime": "2016/12/15·", "title": "作为PHP开发者请务必了解Composer", "desc": "Composer是一个非常流行的PHP包依赖管理工具,已经取代PEAR包管理器,对于PHP开发者来说掌握Composer是必须的。对于使用者来说Composer非常的简单,通过简单的一条命令将需要的代码包下载到vendor目录下。"}
{"publishtime": "2016/12/15·", "title": "开发者如何使用 Node.js 的调查结果", "desc": "本文根据调查结果分析了 Node.js 的各方面使用情况。"}
{"publishtime": "2016/12/14·", "title": "每天一个 Linux 命令（4）：mkdir命令", "desc": "linux mkdir 命令用来创建指定的名称的目录，要求创建目录的用户在当前目录中具有写权限，并且指定的目录名不能是当前目录中已有的目录。"}
{"publishtime": "2016/12/14·", "title": "Ｃ语言中关于时间的函数", "desc": "本文从介绍基础概念入手，探讨了在C/C++中对日期和时间操作所用到的数据结构和函数，并对计时、时间的获取、时间的计算和显示格式等方面进行了阐述。本文还通过大量的实例向你展示了time.h头文件中声明的各种函数和数据结构的详细使用方法。"}
{"publishtime": "2016/12/14··", "title": "彻底解密 C++ 宽字符", "desc": "用多个字节来代表的字符称之为宽字符，今天我们就来聊一聊C++宽字符那些事。"}
{"publishtime": "2016/12/13·", "title": "每天一个Linux命令（3）：pwd命令", "desc": "Linux中用 pwd 命令来查看”当前工作目录“的完整路径。 简单得说，每当你在终端进行操作时，你都会有一个当前工作目录。 "}
{"publishtime": "2016/12/13·", "title": "memmove 和 memcpy 的区别", "desc": "memcpy和memmove（）都是C语言中的库函数，在头文件string.h中，作用是拷贝一定长度的内存的内容"}
{"publishtime": "2016/12/13·", "title": "C 语言预处理命令总结大全", "desc": "C程序的源代码中可包括各种编译指令，这些指令称为预处理命令。虽然它们实际上不是C语言的一部分，但却扩展了C程序设计的环境。本节将介绍如何应用预处理程序和注释简化程序开发过程，并提高程序的可读性"}
{"publishtime": "2016/12/13·", "title": "C 语言结构体的对齐原则", "desc": "关于结构体的对齐，到底遵循什么原则？"}
{"publishtime": "2016/12/13··", "title": "优化SQL查询：如何写出高性能SQL语句", "desc": "执行计划是数据库根据SQL语句和相关表的统计信息作出的一个查询方案，这个方案是由查询优化器自动分析产生的，比如一条SQL语句如果用来从一个 10万条记录的表中查1条记录，那查询优化器会选择“索引查找”方式，如果该表进行了归档，当前只剩下5000条记录了，那查询优化器就会改变方案，采用 “全表扫描”方式。"}
{"publishtime": "2016/12/13··", "title": "Git 王者超神之路", "desc": "本文详细介绍了Git从安装，配置，到仓库的搭建和提交，一步步带你超神。"}
{"publishtime": "2016/12/13··", "title": "一个屌丝程序猿的人生（41）", "desc": "Java的高级特性这一章，相对来说算是整个培训的内容当中，比较难的一部分了。"}
{"publishtime": "2016/12/13··", "title": "词法分析器的实现", "desc": "编译，简单的说，就是把源程序转换为可执行程序。在这个过程中，编译器做了很多重要的工作。对底层该兴趣的我，自然的，也就迫切想搞清楚编译的内部实现，也就是编译的原理。这篇文章主要说的是编译器前端，词法分析器的原理，最后会给出一个词法分析器的简单实现。 "}
{"publishtime": "2016/12/12·", "title": "c++: size_type 与 size_t一些概念", "desc": "size_t不是容器概念。"}
{"publishtime": "2016/12/12·", "title": "C++ 中四种强制类型转换的区别", "desc": "使用标准C++的类型转换符：static_cast、dynamic_cast、reinterpret_cast和const_cast。他们有什么不同之处呢"}
{"publishtime": "2016/12/12··", "title": "程序运行时的内存空间分布", "desc": "我们在写程序时，既有程序的逻辑代码，也有在程序中定义的变量等数据，那么当我们的程序进行时，我们的代码和数据究竟是存放在哪里的呢？下面就来总结一下。"}
{"publishtime": "2016/12/12··", "title": "MySQL误操作后如何快速恢复数据", "desc": "基本上每个跟数据库打交道的程序员（当然也可能是你同事）都会碰一个问题，MySQL误操作后如何快速回滚？比如，delete一张表，忘加限制条件，整张表没了。假如这还是线上环境核心业务数据，那这事就闹大了。误操作后，能快速回滚数据是非常重要的。"}
{"publishtime": "2016/12/12·", "title": "每天一个 Linux 命令（2）：cd命令", "desc": "Linux cd 命令可以说是Linux中最基本的命令语句，其他的命令语句要进行操作，都是建立在使用 cd 命令上的。所以，学习Linux 常用命令，首先就要学好 cd 命令的使用方法技巧。"}
{"publishtime": "2016/12/04·", "title": "例解 Linux 下 Make 命令", "desc": "Linux 下 make 命令是系统管理员和程序员用的最频繁的命令之一。管理员用它通过命令行来编译和安装很多开源的工具，程序员用它来管理他们大型复杂的项目编译问题。本文我们将用一些实例来讨论 make 命令背后的工作机制。"}
{"publishtime": "2016/12/04·", "title": "几种查找算法介绍", "desc": "几种查找算法:顺序查找，折半查找，分块查找，散列表"}
{"publishtime": "", "title": "未知", "desc": "暂无简介"}
{"publishtime": "2016/12/04·", "title": "C++ 结构体实例和类实例的初始化", "desc": "结构体实例（包括共用体）和类实例的初始化方法完全相同，二者都可以应用于继承层次中。不同点是结构体（包括共用体）默认成员为public，而类默认成员是private型的。"}
{"publishtime": "2016/12/04··", "title": "C++ 读取注册表", "desc": "昨天受一朋友要求，帮忙写一个用C++读取注册表的程序。这个朋友是搞Java的，肯定不知道C++怎么写啦！他的需求也奇怪：用js调用一个浏览器插件，通过插件获取注册表中指定键的值，插件肯定是用C++写了。"}
{"publishtime": "2016/12/04··", "title": "最让程序员沮丧的 10 件事，你中了几枪？", "desc": "软件开发是一个挺不错的工作，对于非程序员来说，程序员的工作看起来非常幸福。需求很高、待遇很好，公司提供各种各样的补贴福利等等。不过软件开发和其他工作一样都有差的一面。本文列出了大部分程序员对于写代码无法忍受的 10 件事，以及他们的遭遇。"}
{"publishtime": "2016/12/03·", "title": "浅析 C++ 继承与派生", "desc": "要分析继承，首先当然要知道什么是继承：继承是面向对象程旭设计中使代码可以复用的最重要的手段，它允许程序员在原有类特性的基础上进行扩展，增加功能。这样产生的新类，就叫做派生类（子类）。继承呈现了面向对象程序设计的层次结构,体现了由简单到复杂的认知过程。"}
{"publishtime": "2016/12/03··", "title": "如何检测内存泄漏", "desc": "灵活自由是C/C++语言的一大特色，而这也为C/C++程 序员出了一个难题。当程序越来越复杂时，内存的管理也会变得越加复杂，稍有不慎就会出现内存问题。内存泄漏是最常见的内存问题之一。"}
{"publishtime": "2016/12/03··", "title": "面试中的 Singleton", "desc": "“请写一个Singleton。”面试官微笑着和我说。"}
{"publishtime": "2016/12/03·", "title": "setjmp 和 longjmp 函数使用详解", "desc": "非局部跳转语句—setjmp和longjmp函数。非局部指的是，这不是由普通C语言goto，语句在一个函数内实施的跳转，而是在栈上跳过若干调用帧，返回到当前函数调用路径上的某一个函数中。"}
{"publishtime": "2016/12/03·", "title": "虚析构函数(√)、纯虚析构函数(√)、虚构造函数(X)", "desc": "我们知道，为了能够正确的调用对象的析构函数，一般要求具有层次结构的顶级类定义其析构函数为虚函数。因为在delete一个抽象类指针时候，必须要通过虚函数找到真正的析构函数。"}
{"publishtime": "2016/12/03·", "title": "数独算法及源代码", "desc": "朋友手机装有数独游戏，开会报告等无聊的场合常拿来玩玩，游戏的算法似乎并不难，想想我也能做出来。今早闲的蛋疼，就写了个数独玩玩"}
{"publishtime": "2016/12/03·", "title": "漫画：什么是人工智能？", "desc": "上个世纪50年代一次学术讨论会议上，当时几位著名的科学家从不同学科的角度探讨人类各种学习和其他职能特征，并研究如何在原理上进行精确的描述，探讨用机器模拟人类智能等问题，并首次提出了“人工智能”的术语。"}
{"publishtime": "2016/12/02··", "title": "趣文：当程序员遇上智力题（第3季）", "desc": "悲催的小灰，究竟又被哪些题虐了？？？"}
{"publishtime": "2016/12/02··", "title": "玩转 GitHub 的问题单（issue）", "desc": "高质量的问题单是项目成功的关键。有些人把问题单仅仅看作是一堆你不得不去处理的问题列表，但是如果这些问题单管理完善，进行了分类并打上标签，会令人意想不到的提升我们对代码和社区的了解程度，也让我们更清楚问题的关键点在哪里。"}
{"publishtime": "2016/12/02··", "title": "GitHub 上 57 款最流行的开源深度学习项目", "desc": "本文整理了 GitHub 上最流行的 57 款深度学习项目（按 stars 排名），包括TensorFlow、Caffe、Neural style、deepdream、Keras等等。"}
{"publishtime": "2016/12/01·", "title": "C++ 多个类的 DLL 封装以及隐式链接和显式链接 2 种方法调用", "desc": "将OpenCL和OpenCV一些简单的方法封装成DLL"}
{"publishtime": "2016/12/01·", "title": "C++ 继承中的内存布局", "desc": "一个C++程序员，想要进一步提升技术水平的话，应该多了解一些语言的语意细 节。对于使用VC++的程序员来说，还应该了解一些VC++对于C++的诠释。"}
{"publishtime": "2016/12/01··", "title": "C++ 内存分布之菱形继承(无虚函数)", "desc": "菱形继承的定义是：两个子类继承同一父类，而又有子类同时继承这两个子类。例如a,b两个类同时继承c，但是又有一个d类同时继承a,b类。探究的过程还是很有趣的。 菱形继承的内存布局探究花了我几天时间，探究起来还是有点难度的。博文中如果有错误的地方，欢迎大家指正，大家共同进步。"}
{"publishtime": "2016/11/30··", "title": "C++基础：各种输入方法总结，cin、cin.get()、cin.getline()、getline()、gets()、getchar()", "desc": "在C++中，各种输入方法还是不少的，而且各有所异，本文做一点简要总结，主要涉及如下内容：cin、cin.get()、cin.getline()、getline()、gets()、getchar()。"}
{"publishtime": "2016/11/30··", "title": "让代码写代码，自主编程的 AI 离我们还有多远？", "desc": "设想一下 AI 的未来：家庭服务机器人、每个房间都有亚马逊的智能家庭音箱，快递无人机，还有能提供准确诊断信息的医用机器人，这该是多么美好的未来啊！不过，在这些美好设想吸引着大众眼球的同时，AI 在另外一个领域的可能带来的变革，却没有引起公众的足够注意——这就是：让计算机自己编程。"}
{"publishtime": "", "title": "未知", "desc": "暂无简介"}
{"publishtime": "2016/12/07·", "title": "PHP 内核分析（1）：sapi_module_struct", "desc": "这里阅读的php版本为PHP-7.1.0 RC3，阅读代码的平台为linux。首先是寻找php的入口，php有很多种模式，apache，php-fpm, cli模式，我要入手的话，只能先从最简单的cli模型开始。"}
{"publishtime": "2016/12/07··", "title": "C 语言中 define 的全部使用方法总结", "desc": "学习了这么多年C语言，说实话对宏自以为了如指掌了，没想到看内核代码的时候还是那么吃力，设备驱动代码中有很多这样或者那样的宏定义，各种define，博主在学习的过程中将C语言中所出现的#define定义整理总结了一下，供大家借鉴和学习。"}
{"publishtime": "2016/12/07·", "title": "详解 state 状态模式及在 C++ 设计模式编程中的使用实例", "desc": "这篇文章主要介绍了state状态模式及在C++设计模式编程中的使用实例,在设计模式中策略用来处理算法变化,而状态则是透明地处理状态变化,需要的朋友可以参考下"}
{"publishtime": "2016/12/07·", "title": "交叉引用的解决方法——类声明的应用", "desc": "什么是交叉引用？一言以蔽之，就是：A类中包含B类的对象，B类中包含A类的对象。"}
{"publishtime": "2016/12/06··", "title": "REST架构风格的由来", "desc": " REST 的第一版开发于 1994 年 10 月和 1995 年 8 月之间，起初是作为作者编写 HTTP/1.0规范和最初的HTTP/1.1 建议时，用来沟通各种 Web 概念的一种方法。它在随后的 5 年中以迭代的方式不断改进，并且被应用于各种 Web 协议标准的修订版和扩展之中。"}
{"publishtime": "2016/12/06··", "title": "漫画算法：无序数组排序后的最大相邻差值", "desc": "有一个无序整型数组，如何求出这个数组排序后的任意两个相邻元素的最大差值？要求时间和空间复杂度尽可能低。（例如：无序数组 2,3,1,4,6，排序后是1,2,3,4,6，最大差值是6-4=2）"}
{"publishtime": "2016/12/06·", "title": "Java利器之UML类图详解", "desc": "类图是软件工程的统一建模语言一种静态结构图，该图描述了系统的类集合，类的属性和类之间的关系"}
{"publishtime": "2016/12/06··", "title": "C++ string类的隐式共享写时拷贝的实现及设计要点", "desc": "我们知道，一个典型的Map-Reduce过程包括：Input->Map->Patition->Reduce->Output。Pation负责把Map任务输出的中间结果按key分发给不同的Reduce任务进行处理。Hadoop 提供了一个非常实用的partitioner类KeyFi"}
{"publishtime": "2016/12/06··", "title": "C++11智能指针解析——揭开底层面纱，完整理解智能指针", "desc": "C++的入门坑点大家都是有目共睹的，无非就是指针的理解不深导致一些野指针，内存泄露等问题，所以就不赘述。智能指针正好能够弥补这些问题，因为它本质是存放在栈的模板对象，只是在栈内部包了一层指针。而栈在其生命周期结束时，其中的指针指向的堆内存也自然被释放了。"}
{"publishtime": "2016/12/06·", "title": "C++设计模式——单例模式", "desc": "如何构造一个日志模块的实例呢？难道，每次new一个日志模块实例，写完日志，再delete，不要告诉我你是这么干的。在C++中，可以构造一个日志模块的全局变量，那么在任何地方就都可以用了"}
{"publishtime": "2016/12/06·", "title": "Java可重入锁原理", "desc": "线程使用ReentrantLock获取锁分为两个阶段，第一个阶段是初次竞争，第二个阶段是基于CHL队列的竞争。在初次竞争的时候是否考虑队列节点直接区分出了公平锁和非公平锁。在基于CHL队列的锁竞争中，依靠CAS操作保证原子操作，依靠LockSupport来做线程的挂起和唤醒，使用队列来保证并发执行变成了串行执行，从而消除了并发所带来的问题。"}
{"publishtime": "2016/12/06·", "title": "单机数据库优化", "desc": "数据库优化有很多可以讲，按照支撑的数据量来分可以分为两个阶段：单机数据库和分库分表，前者一般可以支撑500W或者10G以内的数据，超过这个值则需要考虑分库分表。另外，一般大企业面试往往会从单机数据库问起，一步一步问到分库分表，中间会穿插很多数据库优化的问题。"}
{"publishtime": "2016/12/06··", "title": "深入理解分布式事务", "desc": "分布式事务就是指事务的参与者、支持事务的服务器、资源服务器以及事务管理器分别位于不同的分布式系统的不同节点之上。以上是百度百科的解释，简单的说，就是一次大的操作由不同的小操作组成，这些小的操作分布在不同的服务器上，且属于不同的应用，分布式事务需要保证这些小操作要么全部成功，要么全部失败。"}
{"publishtime": "2016/12/05·", "title": "Apache Spark：大数据处理统一引擎", "desc": "工业和研究中数据的大幅增长为计算机科学带来了巨大的机会与挑战。由于数据大小超过了单台机器的能力，用户需要新的系统将计算扩展到多个节点。因此，针对不同计算工作负载的新集群编程模型已呈爆炸式增长。"}
{"publishtime": "2016/12/05··", "title": "大白话解析模拟退火算法", "desc": "模拟退火其实也是一种贪心算法，但是它的搜索过程引入了随机因素。模拟退火算法以一定的概率来接受一个比当前解要差的解，因此有可能会跳出这个局部的最优解，达到全局的最优解"}
{"publishtime": "2016/12/05··", "title": "多线程中的使用共享变量的问题", "desc": "一组并发线程运行在一个进程的上下文中，每个线程都有它自己独立的线程上下文，每个线程和其它的线程一起共享除此之外的进程上下文的剩余部分，包括整个用户的虚拟地址空间，当然也共享同样的打开的文件的集合。有了共享就要防止在对共享变量进行操作的过程中得到一个不可知的值"}
{"publishtime": "2016/12/05·", "title": "栈调用关系跟踪", "desc": "在发生段错误的时候，打印函数的调用栈信息是定位问题很好的手段，一般来讲，我们可以捕获SIGSEGV信号，在信号处理函数中将函数调用栈的关系打印出来。gdb调试中的backtrace，简称bt就是这个作用。"}
{"publishtime": "2016/12/05··", "title": "小谈 java 内部类对象的生成过程", "desc": "内部类指在一个外部类的内部再定义一个类，有点废话…，分为静态内部类和成员内部类，平常使用较多的为静态内部类，使用方式和普通类一样，本文准备在字节码层面看看成员内部类对象的生成过程。"}
{"publishtime": "2016/12/05·", "title": "如何使用 jstack 分析线程状态", "desc": "记得前段时间，同事说他们测试环境的服务器cpu使用率一直处于100%，本地又没有什么接口调用，为什么会这样？cpu使用率居高不下，自然是有某些线程一直占用着cpu资源，那又如何查看占用cpu较高的线程？"}
{"publishtime": "2016/12/04··", "title": "每天一个linux命令(1)：ls命令", "desc": "ls命令是linux下最常用的命令。ls命令就是list的缩写，缺省下ls用来打印出当前目录的清单。如果ls指定其他目录，那么就会显示指定目录里的文件及文件夹清单。 通过ls 命令不仅可以查看linux文件夹包含的文件而且可以查看文件权限(包括目录、文件夹、文件权限)查看目录信息等等。ls 命令在日常的linux操作中用的很多!"}
{"publishtime": "", "title": "未知", "desc": "暂无简介"}
{"publishtime": "2016/12/12··", "title": "程序员会喜欢的 12 款键盘", "desc": "程序员靠开发应用养家糊口，每天的大部分时间都要趴在电脑前面写代码和重构代码。一些人发明了专为程序员设计的键盘，这也不是什么新鲜事了。今天为大家介绍程序员最喜欢的十二款键盘。"}
{"publishtime": "2016/12/11·", "title": "从 Hello World 说程序运行机制", "desc": "学习任何一门编程语言，都会从hello world 开始。对于一门从未接触过的语言，在短时间内我们都能用这种语言写出它的hello world。然而，对于hello world 这个简单程序的内部运行机制，我相信还有很多人都不是很清楚。hello world 这些信息是如何通显示器过显示的？"}
{"publishtime": "2016/12/11·", "title": "无锁的数据结构（Lock-Free）及CAS（Compare-and-Swap）机制", "desc": "当同时存在读写线程时，默认情况下是不保证线程安全的，因而需要利用信号量来进行线程同步（Synchronization），如关键代码段、互斥体等，同时操作系统也提供了相应的API。然而同步并不总是满足条件的且有效率的，比如陷入内核时会有性能损失、死锁、活锁以及资源浪费等。于是Lock-Free和Wait-Free的思想出现了"}
{"publishtime": "2016/12/11·", "title": "C++ 类内存分布", "desc": "书上类继承相关章节到这里就结束了，这里不妨说下C++内存分布结构，我们来看看编译器是怎么处理类成员内存分布的，特别是在继承、虚函数存在的情况下。"}
{"publishtime": "2016/12/11·", "title": "C 语言中返回字符串函数的四种实现方法", "desc": "有四种方式："}
{"publishtime": "2016/12/10·", "title": "Linux 内核数据结构：位图（Bitmap）", "desc": "除了各种链式和树形数据结构，Linux内核还提供了位图接口。位图在Linux内核中大量使用。下面的源代码文件包含这些结构的通用接口"}
{"publishtime": "2016/12/10·", "title": "FB前工程主管：发布代码的正确方式", "desc": "亲爱的工程师们，请不要问「这个流程是好还是坏？」，而是要问「它适不适合我的场景？」。"}
{"publishtime": "2016/12/10··", "title": "REST架构风格的架构元素", "desc": "REST 风格是对分布式超媒体系统中的架构元素的一种抽象。REST 忽略了组件实现和协议语法的细节，以便聚焦于以下几个方面：组件的角色、组件之间的交 互之上的约束、组件对重要数据元素的解释。"}
{"publishtime": "2016/12/10··", "title": "C++ 的一大误区——深入解释直接初始化与复制初始化的区别", "desc": "有很多读者向我提出了疑问，并写了一些测试程序，来说明直接初始化与复制初始化是同一件事。让我了解到大家对于直接初始化与复制初始化的区别的确是不太清楚，无可否认，那篇文章的例子用得的确不太好，在这里表示歉意！所以我觉得还是有必要跟大家详细分享一下我对直接初始化和复制初始化的理解。"}
{"publishtime": "2016/12/10·", "title": "C++11 新特性——auto 的使用", "desc": "C++11中引入的auto主要有两种用途：自动类型推断和返回值占位。auto在C++98中的标识临时变量的语义，由于使用极少且多余，在C++11中已被删除。前后两个标准的auto，完全是两个概念。"}
{"publishtime": "2016/12/10·", "title": "C++11 std::bind std::function 高级用法", "desc": "类模版std::function是一种通用、多态的函数封装。std::function的实例可以对任何可以调用的目标实体进行存储、复制、和调用操作。bind是这样一种机制，它可以预先把指定可调用实体的某些参数绑定到已有的变量，产生一个新的可调 用实体，这种机制在回调函数的使用过程中也颇为有用。"}
{"publishtime": "2016/12/09·", "title": "C++ 11 中的右值引用", "desc": "右值引用是C++11中最重要的新特性之一，它解决了C++中大量的历史遗留问题，使C++标准库的实现在多种场景下消除了不必要的额外开销（如std::vector, std::string)，也使得另外一些标准库（如std::unique_ptr, std::function）成为可能。"}
{"publishtime": "2016/12/09·", "title": "C++ 虚基类表指针字节对齐模型", "desc": "6.本质&进阶：根据union固定首地址和union按最大需求开辟一段内存空间两个特征，可以发现，所有表面的定义都是虚的，所谓联合体union，就是在内存给你划了一个足够用的空间，至于你怎么玩~它不管~！没错，union的成员变量是相当于开辟了几个接口（即union包含的变量）！但是，没开辟就不能用了？当然也能用！"}
{"publishtime": "2016/12/09·", "title": "container_of 分析", "desc": "Container_of在Linux内核中是一个常用的宏，用于从包含在某个结构中的指针获得结构本身的指针，通俗地讲就是通过结构体变量中某个成员的首地址进而获得整个结构体变量的首地址。"}
{"publishtime": "2016/12/09·,", "title": "PHP7 中我们应该学习会用的新特性", "desc": "PHP7 带来显著的性能改进和新特性，并对之前版本的一些特性进行改进。本文将和大家一起来了解探讨 PHP7 中的新特性。 "}
{"publishtime": "2016/12/09··", "title": "单点登录原理与简单实现", "desc": "单点登录全称Single Sign On（以下简称SSO），是指在多系统应用群中登录一个系统，便可在其他所有系统中得到授权而无需再次登录，包括单点登录与单点注销两部分。那么单点登录如何实现呢？"}
{"publishtime": "2016/12/09·", "title": "程序员，你为什么值这么多钱？", "desc": "从个人角度看似乎工资也就是个人价值在市场上的一个价格。那我们的工资是如何被定义或确定的？因为我的程序员职业背景，下面就以这个职业为例来分析下这个问题。"}
{"publishtime": "2016/11/30·", "title": "数据结构：图的表示", "desc": "Yale大学前辈写的一份比较完美的code，他有动态分配的数组来存放邻接节点。"}
{"publishtime": "2016/12/08·,", "title": "Go 反射实践及剖析", "desc": "Golang reflect 包的使用方法，以及一个使用的具体实例。"}
{"publishtime": "2016/11/30··", "title": "程序员对比在大公司和创业公司的工作和报酬", "desc": "① 你在创业公司会赚更多钱；② 你在大公司做不了有趣的项目；③ 你在创业公司会学到更多，之后你将有更好的选择；"}
{"publishtime": "2016/12/08·", "title": "C++ 中文件流(fstream)的使用方法及示例", "desc": "这篇文章主要介绍了C++中文件流(fstream)的使用方法并给出了示例"}
{"publishtime": "2016/11/30·", "title": "并查集(Union-Find) 应用举例", "desc": "以树作为节点的组织结构，结构的形态很是否采取优化策略有很大关系，未进行优化的树结构可能会是“畸形”树(严重不平衡，头重脚轻，退化成链表等)，按尺寸(正规说法叫做秩，后文全部用秩来表示)进行平衡，同时辅以路径压缩后，树结构会高度扁平化。"}
{"publishtime": "2016/12/08·", "title": "不要被 C++“自动生成”所蒙骗", "desc": "我们不要被C++语法中所描述的那些条条框框所“蒙骗”了。的确，相信这些生成规则不会对我们的编程带来多大的影响（不会产生错误），但是只有了解它们的背后操作，我们才知道编译器究竟为我们做了什么，我们才知道如何使用C++才能让它变得更有效率。"}
{"publishtime": "2016/11/29··", "title": "C 语言开发 Linux 下 web 服务器(支持 GET/POST,SSL,目录显示等)", "desc": "这个主要是在CSAPP基础上做的，添加了POST，SSL，目录显示等功能。实现功能：1. 支持GET/POST方法，2. 支持SSL安全连接即HTTPS，3. 支持CGI，4. 基于IP地址和掩码的认证，5. 目录显示，6. 日志功能，7. 错误提示页面"}
{"publishtime": "", "title": "未知", "desc": "暂无简介"}
{"publishtime": "2016/11/27··", "title": "C++ 的 cin/cout 为什么比 C 语言的 scanf/printf 慢", "desc": "很早就知道，c 的scanf（printf）比c++的快。刷题时尤其明显，在这上面超时是常有的事儿。"}
{"publishtime": "2016/11/29··", "title": "用 C 编写的记事本", "desc": "最近想好好研究C，于是便拿记事本这个小程序练练手。自己从网上找了一个挺不错的，就从这个开始学习吧。。。。"}
{"publishtime": "2016/11/27·", "title": "如何正确的关闭 MFC 线程", "desc": "近日在网上看到很多人问及如何关闭一下线程，但是我看网上给出的并不详细，而且有些方法还是错误的。小弟在此拙作一篇，不谈别的，只谈及如何正确的关闭MFC的线程，至于Win32和C RunTime的线程暂不涉及。"}
{"publishtime": "2016/11/29·", "title": "C++ 类型转换详解 -- const_cast", "desc": "本文从作者自己的经验和理解出发，分析一下C++的类型转换"}
{"publishtime": "2016/11/27·", "title": "刨一刨内核 container_of() 的设计精髓", "desc": " 不是说0地址不可以访问么，那container_of()和offsetof()宏定义里用0时怎么没报错呢？到底该TM如何理解“零”地址？结构体被编译时有没有什么猫腻呢？程序到底是如何访问结构体里的每个成员属性的？"}
{"publishtime": "2016/11/29··", "title": "Log4j 日志体系结构", "desc": "我们在写日志的时候首先要获取logger，在每一个使用log4j的项目都有很多个地方要获取logger，这些logger是真实的被实例化的Logger对象，他们有可能被分散在无数不同的类中，日志体系结构讲的是这些logger对象是如何组织的，他们之间又有什么样的关系。"}
{"publishtime": "2016/11/27··", "title": "Linux命令行与命令", "desc": "我们通常所说的Linux命令行是运行在终端(terminal)的shell，所谓的命令，是我们在命令行输入的一串字符。shell负责理解并执行这些字符串。"}
{"publishtime": "2016/11/29··", "title": "一个小栗子聊聊 JAVA 泛型基础", "desc": "JAVA泛型属于JAVA基础技术的一项重要内容，这项技术在大多数的情况对我们来说并没有什么存在感，但是不了解他可能会引发一些潜在的问题，本文通过一个小栗子聊一聊JAVA泛型基础。"}
{"publishtime": "2016/11/27··", "title": "图解 Session（会话）", "desc": "Session代表着服务器和客户端一次会话的过程。直到session失效（服务端关闭），或者客户端关闭时结束。Session 是存储在服务端的，并针对每个客户端（客户），通过SessionID来区别不同用户的。Session是以Cookie技术或URL重写实现。默认以Cookie技术实现，服务端会给这次会话创造一个JSESSIONID的Cookie值。"}
{"publishtime": "2016/11/29··", "title": "轻松看懂机器学习十大常用算法", "desc": "通过本篇文章可以对ML的常用算法有个常识性的认识，没有代码，没有复杂的理论推导，就是图解一下，知道这些算法是什么，它们是怎么应用的，例子主要是分类问题。 "}
{"publishtime": "2016/11/26··", "title": "趣文：当程序员遇上智力题（第2季）", "desc": "在上次小灰被面试官用智力题虐了一回，这次小灰再次遭遇智力题。到底是什么题又让小灰垂头丧气的，赶紧打开来看看。"}
{"publishtime": "2016/11/26·", "title": "C++ Builder 多线程编程技术经验谈", "desc": "文简要讨论了C++Builder平台下如何利用多线程编程技术实现”生产者-消费者”问题,帮助我们更好得理解同步概念及其实现方法。"}
{"publishtime": "2016/11/29·", "title": "并查集(Union-Find)算法介绍", "desc": "本文主要介绍解决动态连通性一类问题的一种算法，使用到了一种叫做并查集的数据结构，称为Union-Find。"}
{"publishtime": "2016/11/26·", "title": "使用随机采样实现 soft shadow", "desc": "本篇文章主要针对《OpenGL 4 Sharding Language Cookbook》一书中第七章——Shadow的第四节Creating soft shadow edges with random sampling解释而得。"}
{"publishtime": "2016/11/26·", "title": "海量数据处理算法—Bit-Map", "desc": " Bit Map算法来自于《编程珠玑》。所谓的Bit-map就是用一个bit位来标记某个元素对应的Value， 而Key即是该元素。由于采用了Bit为单位来存储数据，因此在存储空间方面，可以大大节省。"}
{"publishtime": "2016/11/26··", "title": "图解 Cookie", "desc": "Cookie是请求头域和响应头域的字段。简单地说，就是伴随请求和响应的一组键值对的文本，小文本。所以称之为”Cookie“饼干。Cookie的生命来源于服务器。首先是客户端请求服务端，此时请求为第一次，无Cookie参数。这时候，服务端setCookie发送给客户端。记住，Cookie来源自服务端。"}
{"publishtime": "2016/11/26·", "title": "Linux文件管理", "desc": "文件被组织到文件系统(file system)中，通常会成为一个树状(tree)结构。Linux有一个根目录/, 也就是树状结构的最顶端。这个树的分叉的最末端都代表一个文件，而这个树的分叉处则是一个目录(directory, 相当于我们在windows界面中看到的文件夹)。在图1中看到的是整个的一个文件树。如果我们从该树中截取一部分，比如说从目录vamei开始往下，实际上也构成一个文件系统。"}
{"publishtime": "2016/11/29·", "title": "拓扑排序的原理及其实现", "desc": "假设我非常想学习一门机器学习的课程，但是在修这么课程之前，我们必须要学习一些基础课程，比如计算机科学概论，C语言程序设计，数据结构，算法等等。那么这个制定选修课程顺序的过程，实际上就是一个拓扑排序的过程，每门课程相当于有向图中的一个顶点，而连接顶点之间的有向边就是课程学习的先后关系。"}
{"publishtime": "2016/11/25·", "title": "用 Huffman 树实现文件压缩并解压", "desc": "如果你学习数据结构，就一定会学到Huffman树，而Huffman编码实际上上就是zip压缩的核心部分，所以，如果已经学习了Huffman树，为何不尝试写一个压缩程序出来呢？如果你没有学习Huffman树，那咱们就一起先学习一下Huffman树吧。"}
{"publishtime": "2016/11/29·,·", "title": "PHP 的错误机制总结", "desc": "PHP 的错误机制也是非常复杂的，做了几年 PHP 开发，也没有仔细总结过，本文就补上这一课。"}
{"publishtime": "2016/11/25·", "title": "OpenCV 图像处理篇之边缘检测算子", "desc": "灰度或结构等信息的突变位置是图像的边缘，图像的边缘有幅度和方向属性，沿边缘方向像素变化缓慢，垂直边缘方向像素变化剧烈。因此，边缘上的变化能通过梯度计算出来。"}
{"publishtime": "2016/11/29·", "title": "MySQL 的 20+ 条最佳实践", "desc": "数据库操作是当今 Web 应用程序中的主要瓶颈。 不仅是 DBA（数据库管理员）需要为各种性能问题操心，程序员为做出准确的结构化表，优化查询性能和编写更优代码，也要费尽心思。 在本文中，我列出了一些针对程序员的 MySQL 优化技术。"}
{"publishtime": "2016/11/25·", "title": "图解 HTTP 协议", "desc": "HTTP协议（HyperText Transfer Protocol）,即超文本传输协议是用于服务器传输到客户端浏览器的传输协议。Web上，服务器和客户端利用HTTP协议进行通信会话。有OOP思想的得出结论：其会话的结构是一个简单的请求/响应序列，即浏览器发出请求和服务器做出响应。"}
{"publishtime": "2016/11/29·", "title": "QQ会员活动运营平台演变实践", "desc": "QQ会员活动运营平台（AMS），是QQ会员增值运营业务的重要载体之一，承担海量活动运营的Web系统。本文将会分享QQ会员活动运营平台的架构设计实践，希望对做技术的同学有所帮助。"}
{"publishtime": "2016/11/28··", "title": "破解 YouTube 的视频推荐算法", "desc": "本文所指的算法，包含多个YouTube增长类算法（为你推荐（Recommended），建议观看（Suggest），相关视频（Related），搜索（Search），原始评分（MetaScore），等等）。这些不同的算法产品，各有侧重，但有一个共同点，那就是它们的优化目标相同，都是观看时长（Watch Time）"}
{"publishtime": "2016/11/28··", "title": "用 Wireshark 图解 TCP 三次握手", "desc": "简单地说，Wireshark 是抓包工具。官网说，“Wireshark 是一个网络包分析工具。 网络数据包分析仪将尝试捕获网络数据包并试图尽可能详尽显示该数据包。Wireshark 不单单能抓包，主要的 Features 是对数据包进行各种的分析。"}
{"publishtime": "2016/11/28··", "title": "C 缺陷与陷阱", "desc": "本文总结了C语言使用过程中遇到的陷阱，这些陷阱在某一方面能体现出C语言存在的缺陷"}
{"publishtime": "2016/11/28·", "title": "小问题大思考之 C++ 临时对象", "desc": "C++中有这样一种对象：它在代码中看不到，但是确实存在。它就是临时对象—由编译器定义的一个没有命名的非堆对象。研究临时对象主要是为了提高程序的性能以及效率。"}
{"publishtime": "2016/11/25·", "title": "二叉树的应用详解 - 数据结构", "desc": " 简述二叉树在数据结构的应用"}
{"publishtime": "2018/07/27·", "title": "一个安卓程序媛的人生经验", "desc": "本文基本上反应了她的心酸血泪史。"}
{"publishtime": "2016/11/28··", "title": "C++ 为什么不加入垃圾回收机制", "desc": "在本文中，是指出了C++中引入垃圾回收的可行性。请读者注意，这里介绍的方法更多的是基于当前标准和库设计的角度，而不是要求修改语言定义或者扩展编译器。"}
{"publishtime": "2018/07/26·", "title": "程序员，热爱你的 bug", "desc": "一个 Python 开发者，分享了两个他在 Dropbox 工作时遇到的难忘的 bug。"}
{"publishtime": "2016/11/25·", "title": "MyBatis 完全使用指南", "desc": "MyBatis作为一个轻量的SQL映射框架，确实很简单，但是知识点挺多，实际使用中还是会有时想不起来某个标签该怎么写，所以整理了这篇文章，以备查询。由于MyBatis如此简单，使得这一篇文章基本把实际使用中常碰到的事情都涵盖了，包括：MyBatis中的一些概念、MyBatis包含的内容、SQL映射、动态SQL。"}
{"publishtime": "2016/11/27··", "title": "MySQL数据库的高可用性分析", "desc": "MySQL数据库是目前开源应用最大的关系型数据库，有海量的应用将数据存储在MySQL数据库中。存储数据的安全性和可靠性是生产数据库的关注重点。本文分析了目前采用较多的保障MySQL可用性方案。"}
{"publishtime": "2018/07/26·", "title": "10 个你不知道的 PostgreSQL 功能：创建统计信息", "desc": "如果你曾使用 Postgres 做过一些性能优化，你或许已经使用过 EXPLAIN 。EXPLAIN 向你展示了 PostgreSQL planner 为提供的语句生成的执行计划。它说明了语句涉及到的表将会使用顺序扫描、索引扫描等方式进行扫描，在使用多表的情况下将会使用连接算法。但是， Postgres 是如何产生这些规划的？"}
{"publishtime": "2016/11/25··", "title": "谁需要 GUI？—— Linux 终端生存之道", "desc": "你是否曾想像过完完全全在 Linux 终端里生存？没有图形桌面，没有现代的 GUI 软件，只有文本 —— 在 Linux shell 中，除了文本还是文本。这可能并不容易，但这是绝对可行的。我最近尝试完全在 Linux shell 中生存30天。下边提到的就是我最喜欢用的 shell 应用，可以用来处理大部分的常用电脑功能。这些显然有些不足，因为纯文本操作实在是有些艰难。"}
{"publishtime": "", "title": "未知", "desc": "暂无简介"}
{"publishtime": "2018/07/24·", "title": "数据科学领域，你该选 Python 还是 R ？", "desc": "根据需求，为了那些希望知道在数据科学方面选择 Python 还是 R 编程语言的人，我发布了这篇指导文章。你可能在数据科学方面是个新手，或者你需要在一个项目中选出一个语言，这篇文章可能会帮助到你。"}
{"publishtime": "2016/11/25·", "title": "当一群程序员试图去做一个 Logo 时，闹剧发生了", "desc": "2015年夏天，名为 WebAssembly 的开源编程语言的开发人员决定给该项目设计一个 Logo。 随后，开发者之一，JF Bastien 在 GitHub 上宣布开启一场 Logo 大赛。 "}
{"publishtime": "2018/07/24·", "title": "Linux 的内存分页管理", "desc": "内存是计算机的主存储器。内存为进程开辟出进程空间，让进程在其中保存数据。我将从内存的物理特性出发，深入到内存管理的细节，特别是了解虚拟内存和内存分页的概念。"}
{"publishtime": "2016/11/25·", "title": "Mongos 与集群均衡", "desc": "mongodb元数据全部存放在configServer中，configServer 是由一组（至少三个）mongod实例组成的集群。configServer 的唯一功能是提供元数据的增删改查。和大多数元数据管理系统（etcd，zookeeper）类似，也是保证一致性与分区容错性。本身不具备中心化的调度功能。"}
{"publishtime": "2018/07/23·", "title": "什么情况下不应该使用 Windows Linux 子系统", "desc": "相比于先前的文章着眼于勾勒WSL的好处，在此我会站在相反的角度讲述五个不应运行WSL的原因。"}
{"publishtime": "2016/11/25··", "title": "你加班太多，是因为你的代码写的烂", "desc": "作为一名程序员，我渴望我加入的应该要是一支“30%的时间在写代码，而70%的时间在喝着咖啡讨论着如何将产品做好”的团队。我觉得软件工作应该成为一项技术和艺术融合的高智力活动，我们的项目经理应该是一个高度理解质量、范围和进度客观规律的明白人，“高效工作，快乐生活”才应该是我们的座右铭。可现实情况……"}
{"publishtime": "2018/07/17··", "title": "数据压缩算法：LZ77 算法的分析与实现", "desc": "LZ77是一种基于字典的算法，它将长字符串编码成短小的标记，用小标记代替字典中的短语，从而达到压缩的目的。也就是说，它通过用小的标记来代替数据中多次重复出现的长串方法来压缩数据。其处理的符号不一定是文本字符，可以是任意大小的符号。"}
{"publishtime": "", "title": "未知", "desc": "暂无简介"}
{"publishtime": "2018/07/14·", "title": "在 Linux 上如何得到一个段错误的核心转储", "desc": "在看完这篇博客后，你应该知道如何从“哦，我的程序出现 segmentation fault，但我不知道正在发生什么”到“我知道它出现段错误时的堆栈、行号了！ ”。 "}
{"publishtime": "2018/07/09··", "title": "Linus 定义 Linux", "desc": "LINUX是一个免费类unix内核，适用于386-AT计算机，附带完整源代码。主要让黑客、计算机科学学生使用，学习和享受。"}
{"publishtime": "2018/07/09·", "title": "如何成为 StackOverflow 上合格的提问者与回答者", "desc": "本文就要告诉你如何节约提问者与回答者的时间，解决问题，创造最大价值。"}
{"publishtime": "2018/07/09·", "title": "关于 Feed 流的几个热门问题", "desc": "本篇聊一下 Feed 流技术，由于这个话题在业界有丰富的实践经验，所以我特意选了个小的切入点，从相对微观的角度说几个具体的问题，避免一些无意义的重复。希望提炼实践中的具体问题来做讨论，使事情变得更有实际意义。"}
{"publishtime": "2018/07/09·", "title": "GitHub 的 MySQL 高可用性实践分享", "desc": "GitHub 使用 MySQL 作为所有非 git 仓库数据的主要存储, 它的可用性对 GitHub 的访问操作至关重要。本文将介绍 GitHub 的 MySQL 高可用性和主服务发现解决方案。"}
{"publishtime": "2018/07/06·", "title": "谈谈微信支付曝出的漏洞", "desc": "昨天（2018-07-04）微信支付的SDK曝出重大漏洞（XXE漏洞），通过该漏洞，攻击者可以获取服务器中目录结构、文件内容，如代码、各种私钥等。获取这些信息以后，攻击者便可以为所欲为，其中就包括众多媒体所宣传的“0元也能买买买”。"}
{"publishtime": "2018/07/05·", "title": "深入学习 Redis（3）：主从复制", "desc": "这篇文章中，将详细介绍Redis主从复制的方方面面，包括：如何使用主从复制、主从复制的原理（重点是全量复制和部分复制、以及心跳机制）、实际应用中需要注意的问题（如数据不一致问题、复制超时问题、复制缓冲区溢出问题）、主从复制相关的配置（重点是repl-timeout、client-output-buffer-limit slave）等。"}
{"publishtime": "2018/07/02·", "title": "Linux 文件系统详解", "desc": "这篇教程将帮你快速了解 Linux 文件系统。 "}
{"publishtime": "2018/07/01·", "title": "这两年在大数据行业中的工作总结", "desc": "今天的主题，主要是从大数据开发的角度，到大数据治理的必要性，再到图形化建模的畅想，最后在数据质量的把关，然后到大数据可视化的应用，博主总结两年的见闻，和我学习的成果，也不知理解有无偏差吧，希望大家能给出建议。"}
{"publishtime": "2018/06/29·", "title": "我作为开发者犯过的两次愚蠢的错误", "desc": "上周我和同事们简单地聊了聊我们工作中搞砸的那些事儿。如今早已不再犯那些错了，所以想起过去就觉得很好笑。但是笑归笑，其实当时犯的这些错让我们受益颇深。"}
{"publishtime": "2016/11/25·", "title": "我们是否处在新一轮人工智能的泡沫中？", "desc": "如果问及当下科技圈哪个词汇最火，十有八九会是“人工智能”。隔三差五，你就会看到主流媒体和业界大亨抛出这个词汇，宣称人工智能是人类当下最大的机会，是下一个风口，大家要提前做好布局，把你们的猪放上去等待翱翔云云。"}
{"publishtime": "2018/06/26··", "title": "通过可写文件获取 Linux root 权限的 5 种方法", "desc": "Linux系统中，全部都是以文件形式存在的，包括目录、设备都是有权限的，共有读、写、可执行三种。管理员为文件设置好权限后，应该要考虑哪些Linux用户会被允许和限制上述的三个权限。"}
{"publishtime": "2016/11/11·", "title": "Golang的方法集继承规则示例", "desc": "搞清Golang中的方法集继承对我们写出不啰嗦的代码很有用处，而在Golang中，对于指针的处理也比C/C++中灵活了一些。本篇通过具体示例来展现 Golang 机制中 methods set 的继承规则。"}
{"publishtime": "2016/11/22·,", "title": "字符集和字符编码（Charset & Encoding）", "desc": "相信大家一定碰到过，打开某个网页，却显示一堆像乱码，如”бЇЯАзЪСЯ”、”�????????”？还记得HTTP中的Accept-Charset、Accept-Encoding、Accept-Language、Content-Encoding、Content-Language等消息头字段？这些就是接下来我们要探讨的。"}
{"publishtime": "2016/11/25·", "title": "Linux开机启动(bootstrap)", "desc": "计算机开机是一个神秘的过程。我们只是按了开机键，就看到屏幕上的进度条或者一行行的输出，直到我们到达登录界面。然而，计算机开机又是个异常脆弱的过程，我们满心期望的登录界面可能并不会出现，而是一个命令行或者错误信息。了解计算机开机过程有助于我们修复开机可能出现的问题。"}
{"publishtime": "2018/06/25·", "title": "在 Linux 上用 DNS 实现简单的负载均衡", "desc": "DNS 轮询将多个服务器映射到同一个主机名，并没有为这里展示的魔法做更多的工作。 "}
{"publishtime": "2016/11/11·", "title": "从0到1起步-跟我进入堆外内存的奇妙世界", "desc": "堆外内存一直是Java业务开发人员难以企及的隐藏领域，究竟他是干什么的，以及如何更好的使用呢？"}
{"publishtime": "2016/11/22·", "title": "理解inode", "desc": "inode是一个重要概念，是理解Unix/Linux文件系统和硬盘储存的基础。理解inode，不仅有助于提高系统操作水平，还有助于体会Unix设计哲学，即如何把底层的复杂性抽象成一个简单概念，从而大大简化用户接口。"}
{"publishtime": "2016/11/24·", "title": "二叉树的可视化", "desc": "我前面的一篇博文数据结构之红黑树中，提到了数据结构之可视化的重要性。 因为如果我们能将二叉树可视化，也能提高加快调试，减少bug。原文给出了print_tree函数，会打印二叉树，但是旋转了90度，不优美，不友好。最近学习了下Graphviz这个软件，学了下怎么用这个软件绘制图片，基本解决了二叉树的可视化问题。"}
{"publishtime": "2018/06/25·", "title": "工作 8 个月后，一名工程师竟然被机器解雇了", "desc": "作者认真地工作却被“强大”的机器系统强制解雇的真实经历，并表示，事情发生的从始至终都没有人能够阻止它。"}
{"publishtime": "2016/11/10·", "title": "对 Linux 系统休眠的理解", "desc": "今天看了一个关于中断例程为什么不能休眠的文章，引发了我的思考。其实这个问题在学习驱动的时候早就应该解决了，但是由于5年前学驱动的时候属于Linux初学者，能力有限，所以对这个问题就知其然，没有能力知其所以然。现在回头看这个问题的时候，感觉应该可以有一个较为清晰的认识了。"}
{"publishtime": "2016/11/22·", "title": "每行字符数（CPL）的起源", "desc": "各种计算机语言的编码风格，有的建议源码每行的字符数（characters per line）不超过72个，还有的建议不超过80个，这是为什么？区别在哪里？怎么来的？"}
{"publishtime": "2016/11/24·", "title": "内核早期内存分配器：memblock", "desc": "Linux 内核使用伙伴系统管理内存，那么在伙伴系统工作前，如何管理内存？"}
{"publishtime": "", "title": "未知", "desc": "暂无简介"}
{"publishtime": "2016/11/10·", "title": "通信协议之序列化", "desc": "通信协议可以理解两个节点之间为了协同工作实现信息交换，协商一定的规则和约定，例如规定字节序，各个字段类型，使用什么压缩算法或加密算法等。协议有流程规范和编码规范。流程如呼叫流程等信令流程，编码规范规定所有信令和数据如何打包/解包。"}
{"publishtime": "2016/11/22·", "title": "Linux进程调度策略", "desc": "linux内核的三种主要调度策略：SCHED_OTHER 分时调度策略、SCHED_FIFO实时调度策略，先到先服务 、SCHED_RR实时调度策略，时间片轮转。实时进程将得到优先调用，实时进程根据实时优先级决定调度权值。分时进程则通过nice和counter值决定权值，nice越小，counter越大，被调度的概率越大，也就是曾经使用了cpu最少的进程将会得到优先调度。"}
{"publishtime": "2016/11/24·", "title": "C++ 中虚函数工作原理和(虚)继承类的内存占用大小计算", "desc": "虚函数的实现要求对象携带额外的信息，这些信息用于在运行时确定该对象应该调用哪一个虚函数。"}
{"publishtime": "2016/11/09·", "title": "浅谈字符串匹配算法—BF 算法及 KMP 算法", "desc": "字符串匹配，在实际编程中经常遇到。其相应的算法有很多，本文就BF算法和KMP算法，谈一下自己的理解。并结合平时编程，修改了一下，使其更符合我们的使用习惯。"}
{"publishtime": "2016/11/22·", "title": "Ubuntu 下 SSH 的应用", "desc": "本文主要介绍ssh的应用，包括ssh远程登录服务器、将文件/文件夹从远程服务器拷至本地(scp)、将文件/文件夹从本地拷至远程服务器(scp)等。"}
{"publishtime": "2016/11/24·", "title": "C++ 拷贝构造函数详解", "desc": "深拷贝和浅拷贝的定义可以简单理解成：如果一个类拥有资源(堆，或者是其它系统资源)，当这个类的对象发生复制过程的时候（复制指针所指向的值），这个过程就可以叫做深拷贝，反之对象存在资源但复制过程并未复制资源（只复制了指针所指的地址）的情况视为浅拷贝。 "}
{"publishtime": "2016/11/09·", "title": "判断链表是否有环", "desc": "有环的定义是，链表的尾节点指向了链接中间的某个节点。如何判断一个单链表是否有环呢？"}
{"publishtime": "2016/11/22·", "title": "C 语言的头文件是必须的吗", "desc": "N年前学习C语言开始，就被老师教导，要记得包含头文件。自己也养成了二话不说就#include的习惯。从来没有静下信来想想，C语言必需要有头文件吗？头文件到底起到什么的作用。"}
{"publishtime": "2016/11/24·", "title": "如何设计一个简单的 C++ ORM", "desc": "“没有好的接口，用C++读写数据库和写图形界面一样痛苦”"}
{"publishtime": "2016/11/09·", "title": "httpserver--如何解析HTTP请求报文", "desc": "在正常的开发中，应该根据不同的请求做出不同的响应。要做到上述的功能，首先要解析客户端发来的请求报文。报文在不同的上下文情景下有不同的理解，本文所说的报文都是在HTTP上下文中描述的名词。"}
{"publishtime": "2016/11/22··", "title": "Linux系统中“动态库”和“静态库”那点事儿", "desc": "今天我们主要来说说Linux系统下基于动态库(.so)和静态(.a)的程序那些猫腻。"}
{"publishtime": "2016/11/24·", "title": "Linux文件系统的实现", "desc": "Linux文件管理从用户的层面介绍了Linux管理文件的方式。Linux有一个树状结构来组织文件。树的顶端为根目录(/)，节点为目录，而末端的叶子为包含数据的文件。当我们给出一个文件的完整路径时，我们从根目录出发，经过沿途各个目录，最终到达文件。"}
{"publishtime": "2016/11/09··", "title": "从一次搬家经历看技术发展的未来", "desc": "事实上，人工智能技术在最近几年有非常大的技术突破。我们正在加速朝“万物皆可量化”的数字世界进发，所有的商业形式，生活方式，都可能因此发生改变。你，准备好了么？"}
{"publishtime": "2016/11/22··", "title": "让我至今仍引以为耻的编程经历", "desc": "如果你以编程为生，那么在职业生涯中可能会遇到某些人，要求你写些骗人的、不道德的代码。在 2000 年的时候，我身上就发生过这种事。这件事我永远都忘不了。"}
{"publishtime": "2016/11/24··", "title": "走近计算机大神：艾伦·图灵", "desc": "作为一名程序员，对计算机的历史了解甚少，比较惭愧。这里将记录从公开资料获取到的计算机人物系列知识。"}
{"publishtime": "2016/11/08··", "title": "幽默讲解 Linux 的 Socket IO 模型", "desc": "之前有看到用很幽默的方式讲解Windows的socket IO模型，"}
{"publishtime": "2016/11/21·", "title": "进程间通信---共享内存", "desc": "共享内存是一种最为高效的进程间通信方式，进程可以直接读写内存，而不需要任何数据的拷贝。"}
{"publishtime": "2016/11/24·", "title": "MySQL开发实践8问，你能hold住几个？", "desc": "最近研发的项目对DB依赖比较重，梳理了这段时间使用MySQL遇到的8个比较具有代表性的问题： MySQL读写性能和哪些性能相关的配置参数有关; 数据库负载高时，如何找到原因；针对具体的SQL做优化； SQL层面已难以优化，请求量继续增大时的应对策略；MySQL如何做主从数据同步等等。"}
{"publishtime": "2016/11/08·", "title": "Linux 修改本机 /etc/hosts 的 hostName 后经常不生效", "desc": "Linux 修改本机别名 /etc/hosts 的 hostName 后经常不生效解决"}
{"publishtime": "2016/11/21··", "title": "十年工龄的程序员为你揭示最危害程序员职业生涯的三大观念", "desc": "蓦然回首自己做软件开发已经十年了，其中的五年时间和很多程序员一样在困惑和迷茫中找不到出路！今天就为大家指出习以为常的观念，希望大家深入的思考一下这些观念对你的危害。"}
{"publishtime": "2016/11/24·", "title": "高效 Unix 管理员的 7 个习惯", "desc": "有些 Unix 管理员常常连续工作好几个小时，处理一大堆重要事情，但他们的工作却很少获得好评，而另一些看上去很傲慢的管理员，即使对最简单的问题也倾向于使用优雅的解决方案，他们对运用正则表达式来解决遇到的任何挑战的能力引以为豪，他们也真是懒到骨子里了"}
{"publishtime": "2016/11/08·", "title": "ZooKeeper的一致性算法赏析", "desc": "ZAB协议全称就是ZooKeeper Atomic Broadcast protocol，是ZooKeeper用来实现一致性的算法，分成如下4个阶段：electionEpoch、peerEpoch、zxid、lastProcessedZxid。"}
{"publishtime": "2016/11/21··", "title": "linux 内核 RCU机制详解", "desc": "RCU（Read-Copy Update）是数据同步的一种方式，在当前的Linux内核中发挥着重要的作用。RCU主要针对的数据对象是链表，目的是提高遍历读取数据的效率，为了达到目的使用RCU机制读取数据的时候不对链表进行耗时的加锁操作。"}
{"publishtime": "2016/11/23·", "title": "Memcached 与 Redis 实现的对比", "desc": "Memcached 与 Redis ，作为近些年最常用的缓存服务器，相信大家对它们再熟悉不过了。前两年还在学校时，我曾经读过它们的主要源码，如今写篇笔记从个人角度简单对比一下它们的实现方式，有理解错误之处，欢迎指正。"}
{"publishtime": "2016/11/08·", "title": "extern \"c\" 用法解析", "desc": "extern “C”的主要作用就是为了能够正确实现C++代码调用其他C语言代码。加上extern “C”后，会指示编译器这部分代码按C语言的进行编译，而不是C++的。"}
{"publishtime": "2016/11/21·", "title": "从 Swift 的面向协议编程说开去", "desc": "文章标题谈到了面向协议编程(下文简称 POP)，是因为前几天阅读了一篇讲 Swift 中 POP 的文章。本文会以此为出发点，聊聊相关的概念，比如接口、mixin、组合模式、多继承等，同时也会借助各种语言中的例子来阐述我的思想。"}
{"publishtime": "2016/11/08·", "title": "Maven 核心原理", "desc": "Maven 是每一位Java工程师每天都会接触的工具， 但据我所知其实很多人对Maven理解的并不深，只把它当做一个依赖管理工具(下载依赖、打包)。本文主要讲解Maven的坐标与依赖、仓库、生命周期与插件、模块聚合、模块继承等概念。"}
{"publishtime": "2016/11/23··", "title": "神圣的QA——写给应届毕业生们", "desc": "QA在一个软件开发团队，能与需求人员一起分析需求，能与开发人员一起编写测试，能给团队和客户详细展示系统功能，还能更新整个产品/项目的质量状态，是比PM更为了解产品、项目的人，听起来就很厉害，对不对？"}
{"publishtime": "2016/11/21·", "title": "Redis 主从配置心得及其高可用方案", "desc": "Redis的主从架构，如果master发现故障了，还得手动将slave切换成master继续服务，手动的方式容易造成失误，导致数据丢失，那Redis有没有一种机制可以在master和slave进行监控，并在master发送故障的时候，能自动将slave切换成master呢？有的，那就是哨兵。"}
{"publishtime": "2016/11/07·,·", "title": "漫画：什么是大数据？", "desc": "一群喜欢算法的小仓鼠们，在讨论什么是大数据"}
{"publishtime": "2016/11/23··", "title": "gdb 调试入门，大牛写的高质量指南", "desc": "没想到Brendan Gregg这样的大牛，会写出这样一篇gdb tutorials文章。但可能正如文章开头所说，大牛对网上的gdb文章都不太满意，所以才有了这篇高质量指南，gdb入门者的福音。"}
{"publishtime": "2016/11/21··", "title": "HTTPS中的加密算法相关概念", "desc": "密码学在计算机科学中使用非常广泛，HTTPS就是建立在密码学基础之上的一种安全的通信协议。HTTPS早在1994年由网景公司首次提出，而如今在众多互联网厂商的推广之下HTTPS已经被广泛使用在各种大小网站中。在完全理解HTTPS之前，有必要弄清楚一些密码学相关的概念，比如：明文、密文、密码、密钥、对称加密、非对称加密、摘要、数字签名、数字证书。"}
{"publishtime": "2016/11/06·,", "title": "关于 x86_64 架构下 atomic、mutex、rwlock 的性能对比", "desc": "这里以多线程操作long类型变量，进行加法运算1亿次的时间作为性能对比的标准。 "}
{"publishtime": "2016/11/23·", "title": "稀疏矩阵转置", "desc": "矩阵是线性代数中的一个知识，刚开始学习的时候可能感觉不到它有什么用处，最初的感觉就是对二维数据的操作。其实现实生活中矩阵的用处太大了，设计领域相当的广泛。在此只讨论稀疏矩阵的转置问题；"}
{"publishtime": "2016/11/21·", "title": "C 编译: 使用 gdb 调试", "desc": "在gdb中，你可以通过设置断点(break point)来控制程序运行的进度，并查看断点时的变量和函数调用状况，从而发现可能的问题。在许多IDE中，gdb拥有图形化界面。这里主要介绍gdb的命令行使用"}
{"publishtime": "2016/11/06·", "title": "Linux 线程（进程）数限制分析", "desc": "公司线上环境出现MQ不能接受消息的异常，原因是一个新同学的代码没有Review直接上线，里面有一个BUG触发了异常创建大量线程。问题解决了，工作之余研究了下Linux 线程数限制"}
{"publishtime": "2016/11/23··", "title": "彻底搞清楚 C/C++ 中日期和时间 time_t 与 struct tm,time(NULL),ctime;strftime", "desc": "本文从介绍基础概念入手，探讨了在C/C++中对日期和时间操作所用到的数据结构和函数，并对计时、时间的获取、时间的计算和显示格式等方面进行了阐述。本文还通过大量的实例向你展示了time.h头文件中声明的各种函数和数据结构的详细使用方法。"}
{"publishtime": "2016/11/20··", "title": "程序员的生活：学会放松地工作", "desc": "当我回顾作为软件工程师的早年生活觉得后悔的一件事时，我希望我能够更乐在其中。这也是我如今想知道的事情——我是否仍然漏掉了一些事情？"}
{"publishtime": "2016/11/06··", "title": "初学者如何从零学习人工智能？看完你就懂了", "desc": "此文是想要进入人工智能这个领域、但不知道从哪里开始的初学者最佳的学习资源列表。"}
{"publishtime": "2016/11/05··", "title": "linux中强大且常用命令：find、grep", "desc": "在linux下面工作，有些命令能够大大提高效率。本文就向大家介绍find、grep命令，他哥俩可以算是必会的linux命令，我几乎每天都要用到他们。"}
{"publishtime": "2016/11/23·", "title": "浅析 C++ 的封装性", "desc": "本专题，我们讲述封装性。封装性是C++的入门特性，要想学习C++语言，封装性是首先要掌握的。"}
{"publishtime": "2016/11/19··", "title": "有趣的问题：C 的表达式 x == x，何时为假？！", "desc": "今天的问题很有趣，C的表达式 x == x，何时为假呢？"}
{"publishtime": "2016/11/06·", "title": "Linux 新手容易犯的 7 个 错误", "desc": "换操作系统对每个人来说都是一件大事——尤其是许多用户根本不清楚操作系统是什么。然而，从 Windows 切换到 Linux 特别地困难。这两个操作系统有着不同的前提和优先级，以及不同的处理方式。结果导致 Linux 新手容易混淆，因为他们在 Windows 上面得到经验不再适用。"}
{"publishtime": "2016/11/05·", "title": "Linux Kernel 代码艺术——编译时断言", "desc": "本系列文章主要写我在阅读Linux内核过程中，关注的比较难以理解但又设计巧妙的代码片段，一来通过内核代码复习一下C语言及汇编语言的语法，二来学习内核开发大牛们书写代码的风格及思路。"}
{"publishtime": "2016/11/23··", "title": "Nginx 配置简述", "desc": "不论是本地开发，还是远程到 Server 开发，还是给提供 demo 给人看效果，我们时常需要对 Nginx 做配置，Nginx 的配置项相当多，如果考虑性能配置起来会比较麻烦。不过，我们往往只是需要一个静态 Server，或者一个反向代理 Server，这对 Nginx 来说小菜一碟。"}
{"publishtime": "2016/11/19·", "title": "遗传算法 (Genetic Algorithm)", "desc": " 遗传算法（Genetic Algorithm）又叫基因进化算法，或进化算法。属于启发式搜索算法一种，这个算法比较有趣，并且弄明白后很简单，写个100-200行代码就可以实现。在某些场合下简单有效。"}
{"publishtime": "2016/11/05·", "title": "Linux 下系统调用的三种方法", "desc": "系统调用（System Call）是操作系统为在用户态运行的进程与硬件设备（如CPU、磁盘、打印机等）进行交互提供的一组接口。当用户进程需要发生系统调用时，CPU 通过软中断切换到内核态开始执行内核系统调用函数。下面介绍Linux 下三种发生系统调用的方法。"}
{"publishtime": "2016/11/06·", "title": "SSH原理与运用（1）：远程登录", "desc": "SSH是每一台Linux电脑的标准配置。随着Linux设备从电脑逐渐扩展到手机、外设和家用电器，SSH的使用范围也越来越广。不仅程序员离不开它，很多普通用户也每天使用。SSH具备多种功能，可以用于很多场合。有些事情，没有它就是办不成。本文是我的学习笔记，总结和解释了SSH的常见用法，希望对大家有用。"}
{"publishtime": "2016/11/19··", "title": "位运算符及其应用", "desc": "C语言的六种位运算符：& 按位与、| 按位或、^ 按位异或、~ 取反、<> 右移"}
{"publishtime": "2016/11/18·", "title": "改善单元测试的新方法", "desc": "为什么要写单元测试？“满足需求”是所有软件存在的必要条件，单元测试一定是为它服务的。从这一点出发，我们可以总结出写单元测试的两个动机：驱动（如：TDD）和验证功能实现。"}
{"publishtime": "2016/11/05·", "title": "Linux 中设置服务自启动的三种方式", "desc": "有时候我们需要Linux系统在开机的时候自动加载某些脚本或系统服务，可以通过 3 种方式来实现。"}
{"publishtime": "2016/11/06··", "title": "为什么主引导记录的内存地址是 0x7C00？", "desc": "《计算机原理》课本说，启动时，主引导记录会存入内存地址0x7C00。我一直有疑问，为什么不存入内存的头部、尾部、或者其他位置，而偏偏存入这个比 32KB 小1024字节的地方？"}
{"publishtime": "", "title": "未知", "desc": "暂无简介"}
{"publishtime": "2016/11/22·", "title": "契约式编程与防御式编程", "desc": "事情的来由还要从几十几亿年前的一次星球大爆炸说起，sorry，背错台词了，是从几天前讨论接口返回数据和几个月前讨论课件本地数据结构说起，简单的说，就是碰到约定好的内容出现异常，是我们在程序中内部作兼容处理，还是抛出去。"}
{"publishtime": "2016/11/05··", "title": "链表与栈的典型应用——简单计算机的实现", "desc": "通过编写简单计算器程序来展示链表与栈的应用"}
{"publishtime": "2016/11/22·", "title": "PHP7 哈希表实现原理", "desc": "几乎每个C程序中都会使用到哈希表。鉴于C语言只允许使用整数作为数组的键名，PHP 设计了哈希表，将字符串的键名通过哈希算法映射到大小有限的数组中。这样无法避免的会产生碰撞，PHP 使用了链表解决这个问题。"}
{"publishtime": "2016/11/06··", "title": "写扩展性好的代码：函数", "desc": "如何写出扩展性好的代码？这是我工作最近半年来一直在考虑的问题。不管自己做一套系统还是接手别人的项目，只要你的项目需要和别人交互，这个问题都是需要考虑的。我们今天只说说如何写出扩展性好的函数代码。"}
{"publishtime": "2016/11/05·", "title": "C++ 多态深度剖析", "desc": "多态一词最初来源于希腊语,意思是具有多种形式或形态的情形,当然这只是字面意思，它在C++语言中多态有着更广泛的含义。"}
{"publishtime": "", "title": "未知", "desc": "暂无简介"}
{"publishtime": "2016/11/06·", "title": "借 shared_ptr 实现 copy-on-write", "desc": "一个多线程的C++程序，24h x 5.5d运行。有几个工作线程ThreadW{0,1,2,3}，处理客户发过来的交易请求，另外有一个背景线程ThreadB，不定期更新程序内部的参考数据。这些线程都跟一个hash表打交道，工作线程只读，背景线程读写，必然要用到一些同步机制，防止数据损坏。"}
{"publishtime": "2016/11/05·", "title": "内核内存分配常用函数使用", "desc": "内核内存分配常用kmalloc/kfree、vmalloc/vfree函数用法和区别"}
{"publishtime": "", "title": "未知", "desc": "暂无简介"}
{"publishtime": "2016/11/04··", "title": "数据交换利器 Protobuf 技术浅析", "desc": "protobuf是google旗下的一款平台无关，语言无关，可扩展的序列化结构数据格式。所以很适合用做数据存储和作为不同应用，不同语言之间相互通信的数据交换格式，只要实现相同的协议格式即同一proto文件被编译成不同的语言版本，加入到各自的工程中去。这样不同语言就可以解析其他语言通过protobuf序列化的数据。目前官网提供了C++，Python，JAVA，GO等语言的支持。"}
{"publishtime": "2016/11/04··", "title": "电源插座和软件设计", "desc": "2002 年的冬天，我在北京联通出差。刚参加工作，有点小紧张，给电脑接电源，插三孔插座的时候错位60度，噗哧一下冒起了火花。没有酿成事故，但是这件事情一直没能忘记。"}
{"publishtime": "2016/11/04··", "title": "图形化排序算法比较：快速排序、插入排序、选择排序、冒泡排序", "desc": "用Objective-C实现选择排序、冒泡排序、插入排序、快速排序、选择排序几种基本的排序算法，并把排序的过程图形化显示。其实算法还是挺有趣的 ^ ^."}
{"publishtime": "2016/11/04·", "title": "开发者的实用 Vim 插件（二）", "desc": "Syntastic 是一个非常有用的 Vim 插件，因为在出现语法相关错误时候，它至少能够让免去频繁编译的麻烦，而且不用说，同时也节约了你不少的时间。 "}
{"publishtime": "2016/11/04·", "title": "开发者的实用 Vim 插件（一）", "desc": "本文之中提到的两个插件，Tagbar 需要花费较多时间来适应——你应该会同样这个说法。但只要正确设置好它（这意味着你像是有了快捷键一样方便），就容易使用了。至于 delimitMate，不需要任何要求就可以上手。 "}
{"publishtime": "2016/11/04·", "title": "前方危险，写篇让很多「高逼格」高管深刻反思的文章", "desc": "在很多时候，现实会让我们每个人迷惑，周边的人和事可以让人极度的膨胀，你可以想吃了药一样，分不清是现实还是虚幻。"}
{"publishtime": "2016/11/04·", "title": "C++ 的三种访问权限与三种继承方式", "desc": "我们知道C++中的类，有三种访问权限(也称作访问控制)，它们分别是public、protected、private。"}
{"publishtime": "2016/11/04·", "title": "位置无关码、位置有关码、链接地址、加载地址", "desc": "在移植 uboot 时，接触到一个概念叫做 位置无关码，那么与它对应的就是位置有关码。提到这两个概念就还得提一提链接地址、加载地址。"}
{"publishtime": "2016/11/04·", "title": "自旋锁和互斥锁区别 --- 经典", "desc": "POSIX threads(简称Pthreads)是在多核平台上进行并行编程的一套常用的API。线程同步(Thread Synchronization)是并行编程中非常重要的通讯手段，其中最典型的应用就是用Pthreads提供的锁机制(lock)来对多个线程之间共 享的临界区(Critical Section)进行保护(另一种常用的同步机制是barrier)。"}
{"publishtime": "2016/11/03··", "title": "瞎忙的新手", "desc": "最近利用业余时间给朋友集成一台特殊用途服务器，专用板卡和驱动程序由第三方提供，我的任务是把软硬件集成起来，对上层软件提供API和样例代码。大约写了100行JAVA代码，配置脚本加起来20行不到，结果前前后后花掉整整一周的下班时间。"}
{"publishtime": "2016/11/03·", "title": "Linux吃掉我的内存", "desc": "在Windows下资源管理器查看内存使用的情况，如果使用率达到80%以上，再运行大程序就能感觉到系统不流畅了，因为在内存紧缺的情况下使用交换分区，频繁地从磁盘上换入换出页会极大地影响系统的性能。而当我们使用free命令查看Linux系统内存使用情况时，会发现内存使用一直处于较高的水平，即使此时系统并没有运行多少软件。"}
{"publishtime": "", "title": "未知", "desc": "暂无简介"}
{"publishtime": "2016/10/30·", "title": "C++ 头文件的包含顺序研究", "desc": "《Google C++ 编程风格指南》和《C++编程思想》倡导的头文件包含规则并不相同。Google的风格减少了依赖关系，《C++编程思想》的顺序是从“最特殊到最一般”到底哪一种包含顺序好呢？"}
{"publishtime": "2016/10/29·", "title": "Web服务器、应用程序服务器、HTTP服务器区别", "desc": "WEB服务器、应用程序服务器、HTTP服务器有何区别？IIS、Apache、Tomcat、Weblogic、WebSphere 都各属于哪种服务器？这些问题困惑了很久，今天终于梳理清楚了"}
{"publishtime": "2016/10/29·", "title": "程序员对内存的理解", "desc": "在C和C++语言开发中，指针、内存一直是学习的重点。因为C语言作为一种偏底层的中低级语言，提供了大量的内存直接操作的方法，这一方面使程序的灵活度最大化，同时也为bug埋下很多隐患。"}
{"publishtime": "2016/10/28·", "title": "SQL调优日记：并行等待的原理和问题排查", "desc": "什么是CXPAKET 等待呢。 当数据库引擎分析查询的开销超过设定的阈值时，SQL SERVER会选择并行执行。数据库引擎会为这个请求创建多个任务。每个任务处理数据的一个子集。每个任务可以在一个分开的CPU/核上执行。请求主要使用生产-消费 队列跟这些任务交互。"}
{"publishtime": "2016/10/28·", "title": "基于 LVS 的 AAA 负载均衡架构实践", "desc": "本次分享将从一次实际的负载均衡改造案例出发，通过介绍项目背景、选型思路、测试方法和问题分析等方面展开，总结负载均衡架构的一般套路和经验教训。"}
{"publishtime": "2016/10/28·", "title": "MongoDB 查询超时异常 SocketTimeoutException", "desc": "一次完整的请求包括三个阶段：1、建立连接 2、数据传输 3、断开连接。如果与服务器(这里指数据库)请求建立连接的时间超过ConnectionTimeOut，就会抛 ConnectionTimeOutException，即服务器连接超时，没有在规定的时间内建立连接。如果与服务器连接成功，就开始数据传输了。"}
{"publishtime": "2016/10/28··", "title": "编程的精进之法", "desc": "刚开始使用时，很多人会感觉到一些痛苦，这一点上我只能说，提升就是痛苦的，而新的习惯一旦养成，痛苦也就不翼而飞，所以美国心理学之父威廉詹姆士说，“我们需要在尽可能早的时候，让尽可能多的有用动作变成自动的和习惯的……一段痛苦的艰难时期之后就是自由的时光”。当我们的基础能力达到一个极高的水平之后，会发现争取自由的筹码会变得更多。"}
{"publishtime": "2016/10/28·", "title": "C++ 中的虚函数", "desc": "C++中的虚函数的作用主要是实现了多态的机制，文章从从虚函数的实现机制上面为大家 一个清晰的剖析"}
{"publishtime": "2016/10/27·", "title": "Linux 内核 tasklet 机制和工作队列", "desc": "上面我们介绍了软中断机制，linux内核为什么还要引入tasklet机制呢？主要原因是软中断的pending标志位也就32位，一般情况是不随意增加软中断处理的。而且内核也没有提供通用的增加软中断的接口。其次内，软中断处理函数要求可重入，需要考虑到竞争条件比较多，要求比较高的编程技巧。所以内核提供了tasklet这样的一种通用的机制。"}
{"publishtime": "2016/10/27··", "title": "从 .NET 和 Java 之争谈 IT 行业", "desc": "开篇我先表明自己的立场：同时使用 .Net 和 JAVA，但更加偏爱.Net。"}
{"publishtime": "2016/10/27·", "title": "MySQL 之动态字符串处理", "desc": "MySQL中，常常会看到一些关于动态字符串的处理，列如：DYNAMIC_STRING。为了记录动态字符串的实际长度，缓冲区的最大长度，以及每次字符串需要调整时，及时分配新的内存，以及调整长度。MySQL使用了DYNAMIC_STRING来保存动态字符串相关的信息。"}
{"publishtime": "2016/10/27·", "title": "细说MySQL 之MEM_ROOT", "desc": "这篇文章会详细解说MySQL中使用非常广泛的MEM_ROOT的结构体，同时省去debug部分的信息，仅分析正常情况下，mysql中使用MEM_ROOT来做内存分配的部分。"}
{"publishtime": "2016/10/27·", "title": "由浅入深介绍 Redis LRU 策略的具体实现", "desc": " 在使用redis作为缓存的场景下，内存淘汰策略决定的redis的内存使用效率。在大部分场景下，我们会采用LRU(Least Recently Used)来作为redis的淘汰策略。本文将由浅入深的介绍redis lru策略的具体实现。"}
{"publishtime": "2016/10/27··", "title": "测试经验总结：测试员的角色", "desc": "在工作中经常遇到当产品上线出了bug后，第一个受到指责的是测试人员，”测试为什么当初没有发现这个问题呢”，这种情况在现实工作中数不胜数，也许他们把测试人员当”超级魔法师”了，经过测试之手的东西就完美无瑕了，这就属于角色定位问题，当定位好自己的角色后，在协商角色内容时，就有了在可能出现的任何情况下现的问题时首先确立对自己预期的基础。"}
{"publishtime": "2016/10/27·", "title": "C++ 之预定义类型 IO 格式控制", "desc": "在C语言里，我们可以通过函数printf和scanf来进行格式化控制。而在C++中仍然包含了前者，但还提供了以下两种格式控制的方法：(1)使用流成员函数进行格式控制;(2)使用预定义操作符进行格式控制"}
{"publishtime": "2016/10/27··", "title": "给编程生涯充电的 10 本书", "desc": "作为程序员，我们都喜欢编写代码，都喜欢挑战艰深的算法，喜欢设计并创建炫酷的新技术。但不管你刚刚开始工作的小年轻，还是一个没什么时间去学习那些能让你迈向成功的种种额外知识的老手程序员，下面列出的这些书都会让你走向正轨。"}
{"publishtime": "2016/10/26·", "title": "Linux 软中断机制分析", "desc": "最近工作繁忙，没有时间总结内核相关的一些东西。上次更新博客到了linux内核中断子系统。这次总结一下软中断，也就是softirq。之后还会总结一些tasklet、工作队列机制。"}
{"publishtime": "2016/10/26·", "title": "PHP 中 SESSION 反序列化机制", "desc": "在php.ini中存在三项配置项"}
{"publishtime": "2016/10/26·", "title": "C 语言宏定义 #define 的理解与资料整理", "desc": "define 宏定义是个演技非常高超的替身演员，但也会经常耍大牌的，所以我们用它要慎之又慎。它可以出现在代码的任何地方，从本行宏定义开始，以后的代码就就都认识这个宏了；也可以把任何东西定义成宏。因为编译器会在预编译的时候用真身替换替身，而在我们的代码里面却又用常常用替身来帮忙。"}
{"publishtime": "2016/10/26··", "title": "程序员如何保持身体健康？", "desc": "最近听说公司的几个同事都大病了一场，有的还进行了大的手术，差点跟阎王爷报道了。努力工作固然重要，但是一定注意身体，身体不好了，随着来的就是，工作和生活双失。我根据自己的实践，列举了几个建议。"}
{"publishtime": "", "title": "未知", "desc": "暂无简介"}
{"publishtime": "2016/11/18··", "title": "如何有效提交 Bug 报告？", "desc": "花些时间，心里回想一下你电脑或手机上用的所有软件，有多少软件是付费的呢？50%？20%？0%？你可能像我一样，使用的多数软件都是免费的。我几乎是非开源软件不用的。我使用免费软件，但是这不代表软件就没有成本。我所用软件的每部分都投入了无数的开发工时。"}
{"publishtime": "2016/11/18··", "title": "彻底搞清C/C++中一维数组，二维数组，指针，数组指针和指针数组以及指向指针的指针，行地址和列地址之间的关系", "desc": "数组指针和二维数组有关，你可以到定义了数组指针后将二维数组名赋值给他；指针数组和指向指针的指针有关，你可以将两者赋值。"}
{"publishtime": "2016/11/18··", "title": "C/C++ 刁钻问题各个击破之细说 sizeof", "desc": "Sizeof的作用非常简单：求对象或者类型的大小。然而sizeof又非常复杂，它涉及到很多特殊情况，本篇把这些情况分门别类，总结出了sizeof的10个特性"}
{"publishtime": "2016/11/18··", "title": "程序员提交代码的 emoji 指南", "desc": "程序员都爱 github，而许多程序员喜欢在 github 提交代码时加入 emoji 表情。 并不是程序员喜欢故意卖萌，而是添加了 emoji 表情的提交记录真的能包含很多有用信息，阅读体验非常棒。"}
{"publishtime": "2016/11/17··", "title": "四位计算机的原理及其实现", "desc": "你是否想过，计算机为什么会加减乘除？或者更直接一点，计算机的原理到底是什么？Waitingforfriday有一篇详细的教程，讲解了如何自己动手，制作一台四位计算机。从中可以看到，二进制、数理逻辑、电子学怎样融合在一起，构成了现代计算机的基础。"}
{"publishtime": "2016/11/17··", "title": "SSH原理与运用（2）：远程操作与端口转发", "desc": "SSH不仅可以用于远程主机登录，还可以直接在远程主机上执行操作。这就是说，SSH可以在用户和远程主机之间，建立命令和数据的传输通道，因此很多事情都可以通过SSH来完成。"}
{"publishtime": "2016/11/17·", "title": "Unix版权史", "desc": "Unix诞生于1969年，是贝尔实验室员工Ken Thompson的个人项目。由于贝尔实验室是AT&T（美国电话电报公司）的下属机构，所以Unix的版权归AT&T所有。"}
{"publishtime": "2016/11/17·", "title": "嵌入式Linux文件系统详细介绍", "desc": "Linux支持多种文件系统，包括ext2、ext3、vfat、ntfs、iso9660、jffs、romfs和nfs等，为了对各类文件系统进行统一管理，Linux引入了虚拟文件系统VFS(Virtual File System)，为各类文件系统提供一个统一的操作界面和应用编程接口。"}
{"publishtime": "2016/11/17··", "title": "Thrift 入门教程", "desc": "thrift的全名叫做Apache thrift，是一款软件开发RPC框架，可以很高效地实现跨语言的RPC服务。"}
{"publishtime": "2016/11/17··", "title": "C 编译: makefile 基础", "desc": "在编译一个大型项目的时候，往往有很多目标文件、库文件、头文件以及最终的可执行文件。不同的文件之间存在依赖关系。UNIX系统下的make工具用于自动记录和处理文件之间的依赖关系"}
{"publishtime": "2016/11/16··", "title": "和各种诡异 Bug 打交道 13 年，我总结了 18 个经验", "desc": "在《程序员，你会从 Bug 中学习么？》一文中，我写了我是怎样追踪这些年遇到的最有趣 bug 的。最近我重新浏览了这所有的 194 个条目（历时 13 年），看看我从这些 bug 中学到了学到了那些重要的经验教训。我分为编码、测试和调试三大类。"}
{"publishtime": "2016/11/16·", "title": "C++ 泛型编程基础：模板通识", "desc": "泛型编程是编写与类型无关的代码。这是代码复用的一种手段。模板则是泛型编程的基础。"}
{"publishtime": "2016/11/16·", "title": "B-树和B+树的应用：数据搜索和数据库索引", "desc": "B-树是一种平衡的多路查找树，它在文件系统中很有用。B+树是应文件系统所需而产生的一种B-树的变形树。"}
{"publishtime": "2016/11/16·", "title": "Linux 下进程权限分析", "desc": "在linux下，关于文件权限，大部分人接触比较多，也比较熟悉了解.但是对进程权限一般知之甚少。本文总结一下linux系统下进程权限问题和现象。"}
{"publishtime": "2016/11/16··", "title": "系统管理员的 18 个基本准则", "desc": "禁止做任何不能回滚的操作、避免在周五做任何改动、弄清楚根本原因、为你的工作建立文档、重视你犯的错误、不要忽视日志文件、不要停止学习新技能……"}
{"publishtime": "2016/11/15··", "title": "程序员睡前发「73 76 79 86 85」，女孩熬夜破解发现竟是表白密码！", "desc": "在大家心目中程序员形象可能会是很呆、较木讷、不擅言词、不懂如何讨女生欢心。其实不然，程序员也有浪漫一面呢，现在有位程序员和妹子聊天时，选择用代码表达爱意，一句费解的「73 76 79 86 85」，让人看见不同的趣味与浪漫。"}
{"publishtime": "2016/11/15·,·", "title": "文件操作中的几个大坑", "desc": "在程序开发中你经常会碰到很多关于路径的问题的。比如读取文件，写文件等,加载一张图片，读取一个配制，你必要传一个文件的路径。然而你也许常常碰到这样的问题：逻辑是对的，但就出不来你想要的结果。这是为什么呢？因为对于文件操作的路径问题，有很多你稍不慎就会掉入的大坑。 "}
{"publishtime": "2016/11/15·,", "title": "Cuckoo Filter：设计与实现", "desc": "对于海量数据处理业务，我们通常需要一个索引数据结构，用来帮助查询，快速判断数据记录是否存在，这种数据结构通常又叫过滤器(filter)。"}
{"publishtime": "2016/11/15··", "title": "哪些人工智能电影演得最逼真？", "desc": "编剧和导演们几十年来一直在银幕上将人工智能放在人类的对立面，而这些情节的科学合理性如何？科学杂志咨询了一组人工智能专家并让他们评价 10 部人工智能的电影，根据真实程度顺序排列了这些电影。"}
{"publishtime": "2016/11/15·", "title": "调试器中的断点是如何设置的？", "desc": "调试器应该每一个程序员都会用，但肯定不是每一个人都知道是怎么回事。我对调试器非常着迷。它们太可爱了，我最近开发了一个小巧、非常基础的调试器。在这篇博文中，我将记录学到的一些如何设置断点的知识。"}
{"publishtime": "", "title": "未知", "desc": "暂无简介"}
{"publishtime": "2016/11/15··", "title": "Facebook上的一道题，超过50万的评论和1万3500次分享", "desc": "有网友在Facebook发了一道数学题，图中包含四个等式，前面三个已经有答案了，最后一个问题要求你得出相应的数值。"}
{"publishtime": "2016/11/15··", "title": "字符编码笔记：ASCII，Unicode和UTF-8", "desc": "我们知道，在计算机内部，所有的信息最终都表示为一个二进制的字符串。每一个二进制位（bit）有0和1两种状态，因此八个二进制位就可以组合出256种状态，这被称为一个字节（byte）。也就是说，一个字节一共可以用来表示256种不同的状态，每一个状态对应一个符号，就是256个符号，从0000000到11111111。"}
{"publishtime": "2016/11/15··", "title": "Linux Kernel代码艺术——数组初始化", "desc": "在 C89 标准中，要求按照数组中元素固定的顺序对数组的元素进行初始化；然而在 ISO C99 中，你可以以任意的顺序对数组元素初始化，只是需要给出数组元素所在的索引号；当然 GNU 编译器 GCC 对 C89 进行了扩展，也允许这么做。"}
{"publishtime": "2016/11/15·", "title": "Linux Core Dump", "desc": "当程序运行的过程中异常终止或崩溃，操作系统会将程序当时的内存状态记录下来，保存在一个文件中，这种行为就叫做Core Dump。我们可以认为 core dump 是“内存快照”，但实际上，除了内存信息之外，还有些关键的程序运行状态也会同时 dump 下来，例如寄存器信息、内存管理信息、其他处理器和操作系统状态和信息。"}
{"publishtime": "2016/11/14··", "title": "看我如何假装是一个编程极客", "desc": "如果我不是程序员，那我改如何假装是一个编程极客呢？"}
{"publishtime": "2016/11/14·", "title": "Linux 编程之 Socket", "desc": "介绍了socket封装的基本流程，并给出程序实例"}
{"publishtime": "2016/11/14·", "title": "Linux 中 17 个 tar 命令实用示例", "desc": "tar是类 Unix 系统中使用最广泛的命令，用于归档多个文件或目录到单个归档文件中，并且归档文件可以进一步使用 gzip 或者 bzip2 等技术进行压缩。本文将介绍 tar 的 17 个实用示例。"}
{"publishtime": "2016/11/14·,·", "title": "纸上谈兵: 哈希表 (hash table)", "desc": "哈希表(hash table)是从一个集合A到另一个集合B的映射(mapping)。映射是一种对应关系，而且集合A的某个元素只能对应集合B中的一个元素。"}
{"publishtime": "2016/11/14··", "title": "一个屌丝程序猿的人生（40）", "desc": "一日下午，林萧正在宿舍里盯着电脑屏幕，继续着自己的Java学习，史晓玲也如往常一样，沉默地坐在林萧身后，似有所思的看着窗外。"}
{"publishtime": "2016/11/13·,·", "title": "漫画：判断2的乘方", "desc": "一群喜欢研究算法的小仓鼠，这次在讨论如何判断2的乘方。"}
{"publishtime": "2016/11/13·,", "title": "【图形学】我理解的伽马校正（Gamma Correction）", "desc": "我相信几乎所有做图像处理方面的人都听过伽马校正（Gamma Correction）这一个名词，但真正明白它是什么、为什么要有它、以及怎么用它的人其实不多。我也不例外。直到我最近在看《Real Time Rendering，3rd Edition》这本书的时候，才开始慢慢对它有所理解。 "}
{"publishtime": "2016/11/13·", "title": "Linux 内核高-低端内存设置代码跟踪（ARM构架）", "desc": "对于ARM中内核如何在启动的时候设置高低端内存的分界线（也是逻辑地址与虚拟地址分界线（虚拟地址）减去那个固定的偏移）的简述"}
{"publishtime": "2016/11/12··", "title": "sudo 命令情景分析", "desc": "Linux 下使用 sudo 命令，可以让普通用户也能执行一些或者全部的 root 命令。本文就对我们常用到 sudo 操作情景进行简单分析，通过一些例子来了解 sudo 命令相关的技巧。"}
{"publishtime": "2016/11/12·", "title": "内核探测工具systemtap简介", "desc": "假如现在有这么一个需求：需要获取正在运行的 Linux 系统的信息，如我想知道系统什么时候发生系统调用，发生的是什么系统调用等这些信息，有什么解决方案呢？systemtap是内核开发者必须要掌握的一个工具，本文我将简单介绍一下此工具，后续将会有系列文章介绍systemtap的用法。"}
{"publishtime": "2016/11/12·", "title": "编译器的工作过程", "desc": "编译器在开始工作之前，需要知道当前的系统环境，比如标准库在哪里、软件的安装位置在哪里、需要安装哪些组件等等。这是因为不同计算机的系统环境不一样，通过指定编译参数，编译器就可以灵活适应环境，编译出各种环境都能运行的机器码。这个确定编译参数的步骤，就叫做”配置”。"}
{"publishtime": "2016/11/12··", "title": "MySQL 分区表", "desc": "表分区，是指根据一定规则，将数据库中的一张表分解成多个更小的，容易管理的部分。从逻辑上看，只有一张表，但是底层却是由多个物理分区组成。"}
{"publishtime": "2016/11/12·", "title": "Linux 内核的 thread_info 结构", "desc": "对每个进程，Linux内核都把两个不同的数据结构紧凑的存放在一个单独为进程分配的内存区域中：一个是内核态的进程堆栈，另一个是紧挨着进程描述符的小数据结构thread_info，叫做线程描述符。"}
{"publishtime": "2016/11/12·", "title": "C 语言的变量作用域及头文件", "desc": "关于C语言的变量作用域和头文件的问题都是比较基础的问题，但是这些问题在实际使用过程中的概念不清和混乱会对一个多文件的项目的组织结构及文件结构造成很大的影响，使得项目本身的脉络也变的很模糊。在项目中，多人相互协作完成的项目，这个问题就更加突出"}
{"publishtime": "2016/11/12··", "title": "写给程序员的有效学习方法", "desc": "作者讨论了影响学习效率的主要因素——固定思维模式和成长思维模式。程序员和工程师阅读后能知道如何成为一个高效的学习者，以及如何将研究成果应用日常生活中。"}
{"publishtime": "2016/11/11·,", "title": "关于 std::set/std::map 的几个为什么", "desc": "std::set/std::map （以下用 std::map 代表） 是常用的关联式容器，也是 ADT（抽象数据类型）。"}
{"publishtime": "", "title": "未知", "desc": "暂无简介"}
{"publishtime": "2016/10/26·", "title": "全栈必备：DevOps", "desc": "全栈不仅是一个研发多面手，而且必须要关注产品的最终交付，以及线上服务的稳定运行。工具化使开发、交付、运维紧密地联系在一起，于是DevOps 逐渐成为了全栈们手中的利器，但由于DevOps的复杂性，如果没有科学的人员、流程与工具相配合，DevOps根本无从谈起，因此，DevOps 更是一柄双刃剑。"}
{"publishtime": "2016/10/25·", "title": "C++ 的强制类型转换", "desc": "Q:什么是C风格转换？什么是static_cast, dynamic_cast 以及 reinterpret_cast？区别是什么？为什么要注意？"}
{"publishtime": "2016/10/25··", "title": "Go net/http 超时机制完全手册", "desc": "当用Go写HTTP的服务器和客户端的时候，超时处理总是最易犯错和最微妙的地方之一。错误可能来自很多地方，一个错误可能等待很长时间没有结果，直到网络故障或者进程挂起。HTTP是一个复杂的、多阶段(multi-stage)协议，所以没有一个放之四海而皆准的超时解决方案，比如一个流服务、一个JSON API和一个Comet服务对超时的需求都不相同， 往往默认值不是你想要的。"}
{"publishtime": "2016/10/25··", "title": "6 个月才解决了这个小 Bug", "desc": "我曾经为一家美国著名的国防承包商工作过。我花费了 6 个月的时间去查找一个错误的字母，而它是一个比我多 26 年工作经验的工程师所犯的输入错误。"}
{"publishtime": "2016/10/25·", "title": "全栈必备：Git", "desc": "Git 是 Linus Torvalds 为了帮助管理 Linux 内核开发而开发的一个开放源码的版本控制软件。每一个GIT克隆都是一个完整的文件库，含有全部历史记录和修订追踪能力。其最大特色就是“分支”及“合并”操作快速、简便。"}
{"publishtime": "2016/10/25··", "title": "后端成长之路：从菜鸟到架构", "desc": "有不少初学者问到，我想学习后端，但是又不知道该怎么学，所以我决定把这几年的经验和经历整理成一篇文章，分析后端的路该怎么走，先说明下面仅仅是个人心得，也许与外面的理论有所不同。"}
{"publishtime": "2016/10/24·,·", "title": "一些实用的 Laravel 小技巧", "desc": "Laravel 中一些常用的小技巧，额，说不定你就用上了。。。"}
{"publishtime": "2016/10/24·", "title": "深入Go UDP编程", "desc": "用户数据报协议（User Datagram Protocol，缩写为UDP），又称用户数据报文协议，是一个简单的面向数据报的传输层协议，正式规范为RFC 768。UDP只提供数据的不可靠传递，它一旦把应用程序发给网络层的数据发送出去，就不保留数据备份，所以UDP有时候也被认为是不可靠的数据报协议。"}
{"publishtime": "2016/10/24·", "title": "测试自动化后，我们还需要QA吗？", "desc": "QA的职责 我们先讨论一下传统的瀑布模型下QA是如何工作的，其中最主要的问题是什么；然后作为对比，我们来看看在敏捷团队里QA又是如何工作的，工作重点又是什么；最后，我们详细看一看在新的职责下，QA应该如何做。 "}
{"publishtime": "2016/10/24·", "title": "C++ 文件操作详解", "desc": "本文详细介绍了C++的文件操作"}
{"publishtime": "2016/10/24·,·", "title": "漫画算法：最小栈的实现", "desc": "实现一个栈，带有出栈（pop），入栈（push），取最小元素（getMin）三个方法。要保证这三个方法的时间复杂度都是O（1）。"}
{"publishtime": "2016/10/24·,", "title": "Go 中的锁源码实现：Mutex", "desc": "golang 源码中的互斥锁实现探究。"}
{"publishtime": "2016/10/23·", "title": "Linux 新的API signalfd、timerfd、eventfd使用说明", "desc": "传统的处理信号的方式是注册信号处理函数；由于信号是异步发生的，要解决数据的并发访问，可重入问题。signalfd可以将信号抽象为一个文件描述符，当有信号发生时可以对其read，这样可以将信号的监听放到select、poll、epoll等监听队列中。"}
{"publishtime": "2016/10/23··", "title": "一个屌丝程序猿的人生（39）", "desc": "有史晓玲这么一位颜值不错的妹子常伴左右，换作一般人还真的很难静下心来学习，但是林萧却很清楚，在眼前的情况下，撩妹和学习到底孰轻孰重。"}
{"publishtime": "2016/10/23··", "title": "C++ 内存分配(new，operator new)详解", "desc": "本文主要讲述C++ new运算符和operator new, placement new之间的种种关联，new的底层实现，以及operator new的重载和一些在内存池，STL中的应用。"}
{"publishtime": "2016/10/22·", "title": "制作你的第一个 Atom 文本编辑器插件", "desc": "这篇教程将会教你怎么制作你的第一个 Atom 文本编辑器的插件。我们将会制作一个山寨版的 Sourcerer，这是一个从 StackOverflow 查询并使用代码片段的插件。"}
{"publishtime": "2016/10/20··", "title": "最难面试题，你遇到过什么样的？", "desc": "本文介绍了几道面试中遇到的难题，如果你遇到了这种难题，你会怎么回答呢？"}
{"publishtime": "2016/10/22··", "title": "QA，从 1.0 到 4.0", "desc": "敏捷实践不断地演化过程，使项目中各个角色不断弱化，同时，对每个成员的要求也越来越高。“全功能团队”的提出，不单单是对开发的要求，对QA来说，想要在快速变革中具备竞争力，就现在所具备的技能来说，还是远远不够的。"}
{"publishtime": "2016/10/17·", "title": "Terminator：一款一个窗口包含多个终端的 Linux 终端仿真器", "desc": "Terminator 是一款先进的终端模拟器，它可以让你自定义界面。如果你还没有从你默认的终端模拟器中切换过来的话，你可以尝试一下它。我知道你将会喜欢上它。"}
{"publishtime": "2016/11/03·", "title": "Linux 系统中僵尸进程", "desc": "如果一个进程在其终止的时候，自己就回收所有分配给它的资源，系统就不会产生所谓的僵尸进程了。那么我们说一个进程终止之后，还保留哪些信息？为什么终止之后还需要保留这些信息呢？"}
{"publishtime": "2016/10/20·", "title": "深入理解 RCU 实现", "desc": "RCU，顾名思义就是读-拷贝修改，它是基于其原理命名的。对于被RCU保护的共享数据结构，读者不需要获得任何锁就可以访问它，但写者在访问它时首先拷贝一个副本，然后对副本进行修改，最后使用一个回调（callback）机制在适当的时机把指向原来数据的指针重新指向新的被修改的数据。那么这个“适当的时机”是怎么确定的呢？"}
{"publishtime": "2016/10/22·", "title": "C++ 虚函数和虚继承浅析", "desc": "本文针对C++里的虚函数，虚继承表现和原理进行一些简单分析，有不对的地方请指出。下面都是以VC2008编译器对这两种机制内部实现为例。"}
{"publishtime": "2016/10/17·", "title": "技术行业的宏观趋势", "desc": "我们每半年发布一次技术雷达：它是所有我们认为横跨业界当下和将来的相关重要技术的快照。我们从世界各地召集了约20位最有资历的技术人来编写技术雷达，这也是一个用全球视角对比趋势和方向的绝佳机会。我们在技术雷达上总结出了主要的潮流，但这其中的奥妙足以再专门写一篇长文章。在此，我们将关注于技术雷达中未能覆盖到的一些宏观趋势。"}
{"publishtime": "2016/11/03·", "title": "Linux 内存池源码浅析", "desc": "内存池(Memery Pool)技术是在真正使用内存之前，先申请分配一定数量的、大小相等(一般情况下)的内存块留作备用。当有新的内存需求时，就从内存池中分出一部分内存块，若内存块不够再继续申请新的内存。这样做的一个显著优点是尽量避免了内存碎片，使得内存分配效率得到提升。 "}
{"publishtime": "2016/10/20··", "title": "如何做到招聘要求中的「要有扎实的 Java 基础」", "desc": "其实很多人对于公司的招聘要求中写的要有“扎实的Java基础”，都很迷茫。这特么到底啥意思？什么东西算作Java基础？学到什么程度才算扎实？这些问题的答案，就是玩好JDK就可以了。不过JDK这东西包含的东西实在太多，所以，LZ就专门写一篇文章，来讲一讲JDK应该怎么玩。"}
{"publishtime": "2016/10/21··", "title": "SVN trunk(主线)  branch(分支)  tag(标记)  用法详解和详细操作步骤", "desc": "项目中有个重大bug需要紧急修复，并且要求bug修复后要立即上线；此时应该怎么修复bug呢？再次如果新功能的开发和bug修复的代码都涉及到同一段代码冲突了怎么办 。"}
{"publishtime": "2016/10/17··", "title": "常见hash算法的原理", "desc": "散列表,它是基于高速存取的角度设计的，也是一种典型的“空间换时间”的做法。顾名思义，该数据结构能够理解为一个线性表，可是当中的元素不是紧密排列的，而是可能存在空隙。"}
{"publishtime": "2016/11/03·", "title": "C 语言声明与定义不一致导致的问题", "desc": "最近项目代码需要从mips平台移植到x86平台，这是公司产品第一次采用x86平台。之前项目很紧，所以很多代码都没有考虑移植性问题，因此移植的时候遇到了不少问题。前几天才解决了位序（也叫比特序，与字节序不同）问题，"}
{"publishtime": "2016/10/20··", "title": "全栈必备：Linux 基础", "desc": "Linux 几乎无处不在，不论是服务器构建，还是客户端开发，操作系统的基础技能对全栈来说都是必备的。Linux发行版本可以大体分为两类，一类是商业公司维护的发行版本，一类是社区组织维护的发行版本，前者以著名的Redhat(RHEL)为代表，后者以Debian为代表。"}
{"publishtime": "2016/10/20··", "title": "Unix目录结构的来历", "desc": "Unix（包含Linux）的初学者，常常会很困惑，不明白目录结构的含义何在。举例来说，根目录下面有一个子目录/bin，用于存放二进制程序。但是，/usr子目录下面还有/usr/bin，以及/usr/local/bin，也用于存放二进制程序；某些系统甚至还有/opt/bin。它们有何区别？"}
{"publishtime": "2016/10/17·", "title": "Erlang 之父学习 Elixir 语言的一周", "desc": "差不多一周前我开始看Elixir，关于Elixir之前只有些模糊的了解，没打算花时间去看细节。但得知 Dave Thomas 出版了《Programming Elixir》后，我的想法就彻底改变了。Dave 帮我修订过我的那本Erlang的书，并且作为Ruby的倡导者，他做得非常出色，所以要是他对一样东西产生了兴趣，那说明其趣性是毫无疑问的。"}
{"publishtime": "2016/11/03·", "title": "Linux 中线程与 CPU 核的绑定", "desc": "最近在对项目进行性能优化，由于在多核平台上，所以了解了些进程、线程绑定cpu核的问题，在这里将所学记录一下。"}
{"publishtime": "2016/10/20··", "title": "全栈必备：负载均衡", "desc": "一个了不起的创意会产生一个很棒的产品，如果它一炮走红，你发现手中的是下一个facebook 或者twitter，而且随着用户越来越多，会变得越来越慢，该怎么办呢？对全栈而言，解决这类问题的一个重要技能就是——负载均衡。"}
{"publishtime": "", "title": "未知", "desc": "暂无简介"}
{"publishtime": "2016/10/17·,·", "title": "漫画：如何用脚本抢月饼？", "desc": "一个悲伤的故事，同学们切勿模仿。这位调皮员工的经历被传到网上，引起了很多人的关注。小灰和同学之间也在饶有兴致地谈论这件事。本文来聊聊抢月饼脚本是如何实现的"}
{"publishtime": "2016/11/03·,", "title": "编写一个简易的 HTTP 服务器程序", "desc": "HTTP服务器，就是一个运行在主机上的程序。程序启动了之后，会一直在等待其他所有客户端的请求，接收到请求之后，处理请求，然后发送响应给客户端。客户端和服务器之间使用HTTP协议进行通信，所有遵循HTTP协议的程序都可以作为客户端。"}
{"publishtime": "2016/10/20·", "title": "邱奇数的C++实现", "desc": "邱奇数(Church Numerals)是 λ演算中的一个著名例子。我们可以通过实现它来了解和练习使用C++14里的Generic Lambda。本文里的例子最新的C++编译器（VC2015, g++ 6, clang++ 3.8）都可以编译运行。"}
{"publishtime": "2016/10/16·", "title": "Linux 网络中通知链的使用", "desc": "Linux 网络内核代码中使用了通知链（Notification Chains）来使相关的子系统对感兴趣的事件作出反应。下面从头介绍一下通知链的使用。"}
{"publishtime": "2016/11/03··", "title": "写本好书给百万读者，为职业生涯添彩", "desc": "伯乐在线同国内知名的IT出版社建立了长期合作。如果您打算通过出书来分享自己的经验积累，包括：开发、团队、职场、测试 等与IT互联网相关的方面。树立在行业的声望，扩大影响力。我们或许能助您一臂之力。"}
{"publishtime": "2016/10/20··", "title": "代码世界中的Lambda", "desc": "“ λ ”像一个双手插兜儿，独自行走的人，有“失意、无奈、孤独”的感觉。λ 读作Lambda，是物理上的波长符号，放射学的衰变常数，线性代数中的特征值……在程序和代码的世界里，它代表了函数表达式，系统架构，以及云计算架构。"}
{"publishtime": "2016/10/14··", "title": "一次完整的 HTTP 请求过程", "desc": "一次完整的HTTP请求过程从TCP三次握手建立连接成功后开始，客户端按照指定的格式开始向服务端发送HTTP请求，服务端接收请求后，解析HTTP请求，处理完业务逻辑，最后返回一个HTTP的响应给客户端，HTTP的响应内容同样有标准的格式"}
{"publishtime": "2016/11/03·", "title": "C++“隐藏实现，开放接口”的实现方案", "desc": "接口就是一个程序与其它程序交流的窗口。就比如有一个电视机，我并不需要知道它是怎样工作的，我只要知道按电源键就可以开启电视，按节目加(+)减(-)可以切换电视频道就可以了。C++并没有接口这样的语法，那它要好怎样实现对外提供接口呢？我们可以通过纯虚函数定义一个抽象类，专门用来声明一个类的功能。"}
{"publishtime": "2016/10/20··", "title": "知其所以然之永不遗忘的算法", "desc": "相信大部分同学曾经都学习过快速排序、Huffman、KMP、Dijkstra等经典算法，初次学习时我们惊叹于算法的巧妙，同时被设计者的智慧所折服。于是，我们仔细研读算法的每一步，甚至去证明算法的正确性，或者是去尝试优雅地实现这些算法。总之，我们会花费很大的时间精力去理解这些智慧的结晶。"}
{"publishtime": "2016/10/14··", "title": "防火墙密码恢复手记", "desc": "公司在用的一款防火墙，密码意外遗失，无法登陆管理平台。虽然防火墙可以正常工作，但却无法修改配置，不能根增加和删除访问列表中的IP地址，不能调整访问策略。防火墙默认仅开通https web管理界面，未开启telnet、ssh等其他管理通道。"}
{"publishtime": "2016/11/03·", "title": "利用系统缓存提高PostgreSQL操作效率", "desc": "近期，试用pgfincore，对此做一个实验记录。pgfincore是将数据库对象提前加载到OS cache中，加快操作效率。当有一顶的物理更改时，pgfincore也会将其加载到缓存中。主要是提高查询效率的，当有频繁的缓存交换时，有可能会被挤出缓存。"}
{"publishtime": "2016/10/19·,", "title": "SGI STL 的内存管理", "desc": "STL 是一个重量级的作品，据说当时的出现，完全可以说得上是一个划时代意义的作品。我们来聊一聊 STL 的内存管理。"}
{"publishtime": "2016/10/14·,·", "title": "用 PHP 爬虫做旅游数据分析", "desc": "随着物质的提高，旅游渐渐成为人们的焦点，火热的国庆刚刚过去，乘着这股余热，我想很多人都想知道，大家一般会去哪里玩呢，于是我花了10分钟写了一个采集马蜂窝游记的小程序，当然速度能有这么快，完全依赖于PHP著名爬虫框架phpspider。"}
{"publishtime": "2016/11/02·", "title": "深入理解 C++ 的动态绑定和静态绑定", "desc": "为了支持c++的多态性，才用了动态绑定和静态绑定。理解他们的区别有助于更好的理解多态性，以及在编程的过程中避免犯错误。"}
{"publishtime": "2016/10/19·", "title": "Linux 系统启动过程分析", "desc": "经过对 Linux 系统有了一定了解和熟悉后，想对其更深层次的东西做进一步探究。这当中就包括系统的启动流程、文件系统的组成结构、基于动态库和静态库的程序在执行时的异同、协议栈的架构和原理、驱动程序的机制等等。"}
{"publishtime": "2016/10/14··", "title": "当我们谈论锁，我们谈什么", "desc": "简单介绍一些关于操作系统锁的知识。"}
{"publishtime": "2016/11/01·", "title": "全栈必备：MySQL性能调优", "desc": "对于全栈而言，数据库技能不可或缺，关系型数据库或者nosql，内存型数据库或者偏磁盘存储的数据库，对象存储的数据库或者图数据库……林林总总,但是第一必备技能还应该是MySQL。从LAMP的兴起，到Mariadb的出现，甚至PG的到来，熟练的MySQL技能都是大有用武之地的。"}
{"publishtime": "2016/10/19·", "title": "NULL 指针、零指针、野指针", "desc": "在C++编程中使用指针能有速度快,节约内存等优点,是很多C++程序员的最爱。但指针是一把双刃剑,用好了它，你就会发现指针有多么的方便，反之，你可能就头疼了，往往会出现意想不到的问题。介绍一下几个异常指针。"}
{"publishtime": "2016/10/14·", "title": "Java Lambda 表达式初探", "desc": "Java 8已经发行两年多，但很多人仍然在使用JDK7。对企业来说，技术上谨慎未必是坏事，但对个人学习而言，不去学习新技术就很可能被技术抛弃。Java 8一个重要的变更是引入Lambda表达式，不要怕，具体到语言层面上Lambda表达式不过是一种新的语法而已，有了它，Java将开启函数式编程的大门。"}
{"publishtime": "2016/11/01·", "title": "全栈必备：缓存cache", "desc": "缓存是系统快速响应中的一种关键技术，是一组被保存起来以备将来使用的东西，介于应用开发和系统开发之间，是产品经理们经常顾及不到的地方，算是技术架构中的非功能性约束吧。也就是说，缓存是系统调优时常用且行之有效的手段，无论从操作系统还是应用系统，缓存策略无处不在。"}
{"publishtime": "2016/10/19··", "title": "滚蛋吧，XML 君", "desc": "虽然才接触了一周的 JavaConfig，但是相见恨晚啊，个人还是更喜欢 JavaConfig 的配置方式的。JavaConfig 的配置文件可读性更高也更容易学习，记住简单的几个注解即可；借助 IDE 的力量，更不容易出错；而且脑袋再也不用在 Java 和 XML 间来回切换了"}
{"publishtime": "2016/10/14·", "title": "PostgreSQL中统计信息计算", "desc": "在PostgreSQL中当我们查询引擎在生成执行计划时候，一个重要的问题是如何才能使得我们所生成的执行计划是一个最优的结果。考虑到执行计划最终需要与磁盘进行IO操作以读取相应的数据，因此如果使得我们所生成的执行计划其代价最优，这便是查询引擎在查询优化过程中需要考虑的一个问题。"}
{"publishtime": "2016/11/01··", "title": "一个20秒SQL慢查询优化的经历与处理方案", "desc": "前几天在项目上线过程中，发现有一个页面无法正确获取数据，经排查原来是接口调用超时，而最后发现是因为SQL查询长达到20多秒而导致了问题的发生。"}
{"publishtime": "2016/10/18·", "title": "MySQL全文索引应用简明教程", "desc": "本文从以下几个方面介绍下MySQL全文索引的基础知识：①MySQL全文索引的几个注意事项；②全文索引的语法；③几种搜索类型的简介；④几种搜索类型的实例"}
{"publishtime": "2016/10/13·", "title": "Cache中的MESI协议基本知识介绍", "desc": "本文首先介绍了关于cache 一些基本概念。接下来，介绍了cache 一致性协议:MESI (Modified, Exclusive, Shared, Invalidate)。在详细讨论了各个状态之间的 转换及触发该转换的条件后，作者详细介绍了有其带来的在SMP架构下所导致的问题并引入内存屏障 的概念并详细介绍了内存屏障在实际使用过程中的所遇到的种种问题及解决方案。"}
{"publishtime": "2016/11/01··", "title": "浅析消息队列 RabbitMQ", "desc": "RabbitMQ是一款基于AMQP协议的消息中间件，它能够在应用之间提供可靠的消息传输。在易用性，扩展性，高可用性上表现优秀。"}
{"publishtime": "2016/10/18·", "title": "实体建筑中的 Bug", "desc": "今天早上我在上班的路上听到了一个故事。这个故事的开端和许多软件项目一样：都有一个奇怪的规范。我要说的就是纽约莱克星顿大道 601 号，也就是花旗银行大厦。这个故事是真实的。"}
{"publishtime": "2016/10/11··", "title": "OReilly 免费电子书：编程、Web开发、数据科学等", "desc": "OReilly 的免费电子书，覆盖编程、Web开发、安全、数据科学、物联网等方面。"}
{"publishtime": "2016/10/13·", "title": "PostgreSQL Tuple在内存中组织形式", "desc": "PostgreSQL中数据是按照页的形式组织，一个页的大小通常为8K。在数据表创建的过程中创建相应的数据文件，而这些数据文件就是我们通常所说的表中数据所存放的位置。"}
{"publishtime": "2016/11/01·", "title": "C++中 struct 和 class 的区别", "desc": "C++中可以用struct和class来定义类型。这两种类型有什么区别？"}
{"publishtime": "2016/10/18··", "title": "代码的艺术：如何写出小而清晰的函数", "desc": "几乎每一个程序员，包括我自己，在职业生涯中都见过低质量的代码。这东西就是个坑。本文包括了一些非常不错的 JS 示例，展示如何编写清晰、易于理解和测试的函数。"}
{"publishtime": "2016/10/11·", "title": "浅谈移动应用的技术选型", "desc": "在这个巨变的时代，技术选型是个很难做决定的事情，而移动应用技术领域在几个巨头（Google，Facebook，Apple）的带动下更是日新月异。所以说要选择一个适合业务需求并且匹配开发人员能力的技术方案并不是一件简单的事情。我也只是在移动开发上做过一点微小的工作，此处仅能抛个砖，希望各位有玉的大神尽管砸过来。"}
{"publishtime": "2016/10/13··", "title": "g++ 和 gcc 的相同点和区别", "desc": "gcc和g++都是GNU（一个组织）的编译器，对gcc和g++的区别和联系做一下整理和总结"}
{"publishtime": "2016/10/31·", "title": "容器集群管理平台的比较", "desc": "随着要管理的容器越来越多，容器的集群管理平台成为了刚需！本文简单介绍了主流的容器管理平台包括Swarm，Kubernetes，Mesos，AWS ECS，并对它们做了基本的比较。"}
{"publishtime": "2016/10/18·", "title": "C++ 智能指针详解", "desc": "由于 C++ 语言没有自动内存回收机制，程序员每次 new 出来的内存都要手动 delete。程序员忘记 delete，流程太复杂，最终导致没有 delete，异常导致程序过早退出，没有执行 delete 的情况并不罕见。用智能指针便可以有效缓解这类问题"}
{"publishtime": "2016/10/10·", "title": "实例详解 Linux 中的 fork() 函数", "desc": "一个进程，包括代码、数据和分配给进程的资源。fork（）函数通过系统调用创建一个与原来进程几乎完全相同的进程，也就是两个进程可以做完全相同的事，但如果初始参数或者传入的变量不同，两个进程也可以做不同的事。"}
{"publishtime": "2016/10/13··", "title": "新程序员最喜欢的 6 种岗位", "desc": "FCC 今年 3 月做了一次「新程序员问卷调查」，15600 多人参与并分享了他们从事的职业和学习编程的方法。FCC 公开了调查数据，本文将按照工作偏好分类，并寻找之间的不同。"}
{"publishtime": "2016/10/31··", "title": "我来告诉你，草根程序员如何进入BAT", "desc": "我在《如何准备阿里社招面试，顺谈 Java 程序员学习中各阶段的建议》更多的是从学习角度去谈的如何学习，而本篇既然咱们是要谈如何进入BAT，那么咱们就从面试角度来谈学习这件事。LZ会谈谈一流互联网公司对于Java后端程序员的要求，相应的，也会谈谈如何达到这样的要求。"}
{"publishtime": "2016/10/17·", "title": "HTTPS 协议降级攻击原理", "desc": "如果服务器提供有漏洞的旧版本加密协议的支持，而同时攻击者又能作为中间人控制被攻击者的浏览器发起漏洞版本的HTTPS请求，但因加密协议有漏洞，可以解密这些数据。"}
{"publishtime": "2016/10/09··", "title": "Redis 内存使用优化与存储", "desc": "Redis 内部使用一个 redisObject 对象来表示所有的 key 和 value：type  代表一个 value 对象具体是何种数据类型，encoding 是不同数据类型在 redis 内部的存储方式，比如：type=string 代表 value 存储的是一个普通字符串，那么对应的 encoding 可以是 raw 或者是 int，如果是 int 则代表实际 redis 内部是按数值型类存储和表示这个字符串的，当然前提是这个字符串本身可以用数值表示。"}
{"publishtime": "2016/10/13·,·", "title": "漫画算法：找出缺失的整数", "desc": "一个无序数组里有 99 个不重复正整数，范围从 1 到 100，唯独缺少一个整数。如何找出这个缺失的整数？"}
{"publishtime": "2016/10/31··", "title": "漫画：当程序员遇上智力测试题", "desc": "除了之前的算法题，小灰还在面试中遭遇了智力题测试题"}
{"publishtime": "2016/10/17·", "title": "深入 C++ 的 new", "desc": "“new”是C++的一个关键字，同时也是操作符。关于new的话题非常多，因为它确实比较复杂，也非常神秘，下面我将把我了解到的与new有关的内容做一个总结。"}
{"publishtime": "2016/10/09··", "title": "程序员工作时被打断了该怎么办？", "desc": "我在写本文时状态并不好：缺少睡眠、忙忙碌碌、不知所措、还总被打断思绪。我试尽了办法：使用番茄工作法、在咖啡店工作、戴耳机、只在深夜无人打扰时工作等等。但是打岔的事，总是用不了多久就会攻破我的防护罩。"}
{"publishtime": "2016/10/13·", "title": "如何查看 HotSpot VM 的运行时数据", "desc": "本文将借助 HSDB 工具分析 HotSpot VM 的运行时数据，运行的 Java 环境为 JDK 1.8。"}
{"publishtime": "2016/10/30··", "title": "基于 Socket 的 UDP 和 TCP 编程介绍", "desc": "TCP：传输控制协议，一种面向连接的协议，给用户进程提供可靠的全双工的字节流，TCP套接口是字节流套接口的一种。UDP：用户数据报协议。UDP是一种无连接协议。UDP套接口是数据报套接口的一种。"}
{"publishtime": "2016/10/17·", "title": "Linux 内核通知链机制的原理及实现", "desc": "大多数内核子系统都是相互独立的，因此某个子系统可能对其它子系统产生的事件感兴趣。为了满足这个需求，也即是让某个子系统在发生某个事件时通知其它的子 系统，Linux内核提供了通知链的机制。通知链表只能够在内核的子系统之间使用，而不能够在内核与用户空间之间进行事件的通知。 通知链表是一个函数链表，链表上的每一个节点都注册了一个函数。"}
{"publishtime": "2016/10/09··", "title": "一个屌丝程序猿的人生（38）", "desc": "Java基础的最后一章，是关于异常处理的内容。这一章其实是属于Java当中，最简单但也是最复杂的一章。"}
{"publishtime": "2016/10/12·", "title": "C++ 11 开发中的 Atomic 原子操作", "desc": "原子操作虽然用起来简单，但是其背景远比我们想象的要复杂。其主要在于现代计算系统过于的复杂：多处理器、多核处理器、处理器又有核心独有以及核心共享的多级缓存，在这种情况下，一个核心修改了某个变量，其他核心什么时候可见是一个十分严肃的问题。"}
{"publishtime": "2016/10/30·", "title": "利用 Linux 系统生成随机密码的 10 种方法", "desc": "Linux操作系统的一大优点是对于同样一件事情，你可以使用高达数百种方法来实现它。例如，你可以通过数十种方法来生成随机密码。本文将介绍生成随机密码的十种方法。"}
{"publishtime": "2016/10/17·", "title": "浅谈 Linux 的死锁检测", "desc": "死锁：就是多个进程（≥2）因为争夺资源而相互等待的一种现象，若无外力推动，将无法继续运行下去。注意，只有在多进程或者多线程之间或者他们与中断之间相互通讯或者共享资源才有可能发生死锁，单线程或者进程之间没有联系的话，一般不会发生死锁。"}
{"publishtime": "2016/10/09·", "title": "Lua 语言模型与 Redis 应用", "desc": "本文主要介绍了 Lua 语言不一样的设计模型(相比于Java/C/C++、JS、PHP)，以及 Redis 对 Lua 的扩展，最后结合 Lua 与 Redis 实现了一个支持过期时间的分布式锁。"}
{"publishtime": "2016/10/12·,", "title": "PHP 原生 DOM 对象操作 XML", "desc": "对于操作XML类型文件，PHP内置有一套DOM对象可以进行处理。对XML的操作，从创建、添加到修改、删除都可以使用DOM对象中的函数来进行。 "}
{"publishtime": "2016/10/30··", "title": "如果有人让你推荐编程技术书，请叫他看这个列表", "desc": "100+ 经典技术书籍，涵盖：计算机系统与网络、系统架构、算法与数据结构、前端开发、后端开发、移动开发、数据库、测试、项目与团队、程序员职业修炼、求职面试 和 编程相关的经典书籍。"}
{"publishtime": "2016/10/08·", "title": "GitHub 上最具影响力的组织/机构", "desc": "Github 上最具影响力的组织有哪些？gh-impact 可以对此进行评估。"}
{"publishtime": "", "title": "未知", "desc": "暂无简介"}
{"publishtime": "", "title": "未知", "desc": "暂无简介"}
{"publishtime": "", "title": "未知", "desc": "暂无简介"}
{"publishtime": "2016/10/08·", "title": "15 个开源的顶级人工智能工具", "desc": "在本文中，我们将聚焦于开源的人工智能工具，详细的了解下最著名的 15 个开源人工智能项目。 "}
{"publishtime": "2016/10/07·,·", "title": "漫画：什么是机器学习？", "desc": "在一个风和日丽的周末，小黄和小灰碰面后寒暄。在交流当中，要准备面试的小灰得知小黄在研究机器学习算法。于是小黄又开始给小灰科普机器学习了。"}
{"publishtime": "2016/10/03··", "title": "程序员调过的那些奇葩 Bug", "desc": "程序员工作中有两件事，一是写 Bug，另外就是调 Bug。在程序员遇到的那些奇特 Bug 中，还真有量子力学导致的、也有最后发现是 CPU 的问题。这篇文章再次分享了 4 位程序员遇到了最难调的 Bug。"}
{"publishtime": "2016/10/02··", "title": "Linux 线程浅析", "desc": "在许多经典的操作系统教科书中, 总是把进程定义为程序的执行实例, 它并不执行什么, 只是维护应用程序所需的各种资源. 而线程则是真正的执行实体. 为了让进程完成一定的工作, 进程必须至少包含一个线程. "}
{"publishtime": "2016/10/01·", "title": "Linux 中断处理浅析", "desc": "最近在研究异步消息处理, 突然想起linux内核的中断处理, 里面由始至终都贯穿着”重要的事马上做, 不重要的事推后做”的异步处理思想. 于是整理一下~"}
{"publishtime": "2016/10/01·", "title": "C 语言使用非循环双向链表实现队列", "desc": "今天我们使用一种比较特殊的链表——非循环双向链表来实现队列。首先这里的说明的是构建的是普通的队列，而不是循环队列。"}
{"publishtime": "2016/10/01··", "title": "二分图的最大匹配、完美匹配和匈牙利算法", "desc": "匈牙利算法是由匈牙利数学家Edmonds于1965年提出，因而得名。匈牙利算法是基于Hall定理中充分性证明的思想，它是二部图匹配最常见的算法，该算法的核心就是寻找增广路径，它是一种用增广路径求二分图最大匹配的算法。"}
{"publishtime": "2016/09/30·", "title": "深入浅出Netty内存管理：PoolArena", "desc": "前面分别分析了PoolChunk、PoolSubpage和PoolChunkList，本文主要分析PoolArena。"}
{"publishtime": "2016/09/30·", "title": "图解 Paxos 一致性协议", "desc": "Paxos 一致性协议可以说是一致性协议研究的起点，也以难以理解闻名。其实协议本身并没有多难理解，它的难理解性主要体现在：为何如此设计协议以及如何证明其正确性。本文尝试通过流程图来说明协议的内容以及基本应用过程，不涉及如何证明其正确性。"}
{"publishtime": "2016/09/30··", "title": "提高开发效率的 Eclipse 实用操作（2）", "desc": "最近伯乐有篇资讯提到 JAVA IDE 中，Eclipse 占比是 41%，IntelliJ IDEA 占比是 46%。但目前我依然不会选择 Intellij 作为日常的 IDE。原因是周围的同事中，没有一个对 Intellij 非常熟悉，没有充分利用 Intellij 的特性来提高操作效率。相反，Eclipse 中的各种操作，我算是属于用的精熟了。所以跟周围使用 Intellij 的同事相比，我用 Eclipse 来操作代码，反而比他们快很多个级别。"}
{"publishtime": "2016/09/30··", "title": "你需要了解深度学习和神经网络这项技术吗？", "desc": "人工智能是个信息革命到蒸汽机规模之间的机会，相比之下虚拟现实应该是移动互联网级别的，而用户个性化服务应该是伴生规模的。"}
{"publishtime": "2016/09/30··", "title": "漫画算法：辗转相除法是什么鬼？", "desc": "大四毕业前夕，计算机学院的小灰又一次顶着炎炎烈日，"}
{"publishtime": "", "title": "未知", "desc": "暂无简介"}
{"publishtime": "2016/09/30··", "title": "漫画算法：如何判断链表有环？", "desc": "大四毕业前夕，计算机学院，正在四处求职面试的小灰碰到了同系的学霸大黄…… "}
{"publishtime": "2016/09/30··", "title": "Linux 内核SMP负载均衡浅析", "desc": "在《Linux进程调度浅析》一文中提到，在SMP（对称多处理器）环境下，每个CPU对应一个run_queue（可执行队列）。如果一个进程处于TASK_RUNNING状态（可执行状态），则它会被加入到其中一个run_queue（且同一时刻仅会被加入到一个run_queue），以便让调度程序安排它在这个run_queue对应的CPU上面运行。"}
{"publishtime": "2016/09/30··", "title": "C 语言实现使用动态数组实现循环队列", "desc": "动态数组来实现循环队列。动态数组可以不断开辟内存空间，只是会在数组的初始化时有所不同，其他对数组的操作都是一样的"}
{"publishtime": "2016/09/29··", "title": "惨烈：1 个 Bug， 45 分钟损失 4 亿多美元", "desc": "2012年8月1日，一个 bug 一步步让骑士资本在交易中损失了 4.65 亿美金，并且直接导致破产。这个故事涉及的代码库，是一个大型、无人维护、腐烂的代码库，代码本身将近 9 年没用过了，真是一次集合了技术债务所有特点的惨案。"}
{"publishtime": "2016/09/29··", "title": "技术的正宗与野路子", "desc": "做技术，犹如修习一门武功。历数我周围的技术牛人（牛不到一定程度的先不算），他们中既有名牌大学计算机科班毕业的，也有半路出家转行过来的。但他们都有一个共同特点：他们在遇到问题后，思考片刻，总是能一下子切中要害，在表达上也往往一语中的。"}
{"publishtime": "2016/09/29·,", "title": "PHP 安全编程建议", "desc": "要提供互联网服务，当你在开发代码的时候必须时刻保持安全意识。可能大部分 PHP 脚本都对安全问题都不在意，这很大程度上是因为有大量的无经验程序员在使用这门语言。但是，没有理由让你因为对你的代码的不确定性而导致不一致的安全策略。"}
{"publishtime": "2016/09/29··", "title": "C 语言实现使用静态数组实现循环队列", "desc": "队列是一种先进先出的的数据结构，我们同样可以使用数组、链表等来实现。我们可以在队列的尾部进行插入元素，在队列的头部取出元素。普通的队列由于空间利用率不高，所以我们一般都用循环队列。循环队列中最重要的的两个操作就是判断是否为空和是否已满。"}
{"publishtime": "2016/09/29·", "title": "C++ 标准库-字符串 string 类", "desc": "针对字符串处理，C++中并没有专门的内置类型。C语言是使用字符数组以及相应的指针来表示字符串。前面章节已经介绍了C++包容的C语言字符串处理方式。下面将讲解C++标准库封装字符串处理的字符串类类型。通过库提供的字符串类型公开方法接口，开发者可以很方便地定义操作字符串，使得操作字符串变得方便简易。"}
{"publishtime": "2016/09/28·", "title": "Linux 组调度浅析", "desc": "组调度是cgroup里面的概念，指将N个进程视为一个整体，参与系统中的调度过程，在内核中，进程组由task_group进行管理，其中涉及的内容很多都是cgroup控制机制。"}
{"publishtime": "2016/09/28·", "title": "C++ 中随机函数 rand() 和 srand() 的用法", "desc": "本文讲解了随机函数 rand() 和 srand() 的用法，并给出了程序实例"}
{"publishtime": "2016/09/28·", "title": "Linux 进程调度浅析", "desc": "操作系统要实现多进程，进程调度必不可少。进程调度是对TASK_RUNNING状态的进程进行调度（参见《linux进程状态浅析》）。如果进程不可执行（正在睡眠或其他），那么它跟进程调度没多大关系。"}
{"publishtime": "2016/09/28·", "title": "Linux 进程状态浅析", "desc": "众所周知，现在的分时操作系统能够在一个CPU上运行多个程序，让这些程序表面上看起来是在同时运行的。linux就是这样的一个操作系统。"}
{"publishtime": "2016/09/28·", "title": "微信小程序开发教程（第5弹）", "desc": "今天继续更新，忙了一天，终于有时间开工写教程。不罗嗦了，今天我们来看看如何实现一些前端的功能和效果。"}
{"publishtime": "2016/09/28·", "title": "如何在半小时搭建一个简单的日志分析平台？", "desc": "日志分析要做的就是将这些日志进行结构化，方便我们的业务人员快速查询。日志分析平台要做的就是这些。说完这些，你是不是觉得日志分析平台很难做，需要十人的团队加班几个月才能完成？"}
{"publishtime": "2016/09/28··", "title": "关于自动化配置还有什么好说的呢？", "desc": "最近我们团队正在将生产环境的配置进行自动化。简单地说就是使生产环境在任何地方都可以快速的搭建起来，比如程序员在自己的机器上，公司内部的机器上，还有云上。本文就是想阐明为什么要自动化配置。"}
{"publishtime": "2016/09/27·", "title": "如何做技术设计", "desc": "主要介绍了在系统设计中涉及到的业务领域划分，数据模型和业务流程模型。在项目上线和回滚中需要关注的技术点。"}
{"publishtime": "2016/09/27·", "title": "9 个使用前必须再三小心的 Linux 命令", "desc": "Linux shell/terminal 命令非常强大，即使一个简单的命令就可能导致文件夹、文件或者路径文件夹等被删除。 在一些情况下，Linux 甚至不会询问你而直接执行命令，导致你丢失各种数据信息。"}
{"publishtime": "2016/09/27··", "title": "LZ77 压缩算法编码原理详解(结合图片和简单代码)", "desc": "LZ77算法是无损压缩算法，由以色列人Abraham Lempel发表于1977年。LZ77是典型的基于字典的压缩算法，现在很多压缩技术都是基于LZ77。鉴于其在数据压缩领域的地位，本文将结合图片和源码详细介绍其原理。"}
{"publishtime": "2016/09/27·", "title": "当服务 QPS 增高时，我们做什么", "desc": "本文主要介绍了系统性能的指标，以及系统在处理需求时的对系统资源的消耗，最后给出系统性能优化的建议。"}
{"publishtime": "2016/09/27··", "title": "技术的执念", "desc": "在知识规模如此巨大的今天，一个人是无法掌握所有技术的，更不用说新的技术还在不断的涌现出来！这就要求我们有节制的来聚焦在某些技术上，而视其他技术如无物。当然这需要很大的勇气和魄力，不过唯有如此，技术人员才可能有真正的长进和成就。"}
{"publishtime": "", "title": "未知", "desc": "暂无简介"}
{"publishtime": "2016/09/27·", "title": "设计师与其学编程，不如学营销技巧", "desc": "不少人常说设计师必须会编程，我却不以为然。当然，有一些设计师为了更贴近预期必须亲自动手敲代码。例如，如果想实现数据可视化，很可能你最想自己亲自操作一下。如此看来，这个说法就有些片面了。不论编程还是设计，都不是一朝一夕能掌握的技能，更不用说两者都精通了。"}
{"publishtime": "2016/09/27·", "title": "C++ 11 新特性之杂项", "desc": "这是C++11新特性介绍的第十一部分，涉及到一些不好归类的新特性。"}
{"publishtime": "2016/09/27··", "title": "如果程序员是士兵，那编程语言会是什么样的武器？", "desc": "如果程序员是士兵，那 C、C++、汇编、PHP、Perl、Python、JavaScript、Java、Scala、ActionScript、Objective-C、Swift、Go、Ruby 等编程语言 会是什么样的武器呢？"}
{"publishtime": "2016/09/26··", "title": "微信小程序开发教程（第4弹）", "desc": "感谢大家支持！博卡君周末休息了两天，今天又回到战斗状态了。上周五晚上微信放出官方工具和教程了，推荐程序猿小伙伴们都去试一试，结合教程和代码，写写自己的 demo 也不错。"}
{"publishtime": "2016/09/26·", "title": "微信小程序开发教程（第3弹）", "desc": "感谢朋友们的支持！这两天博卡君收到了很多支持和安慰，也认识了很多志同道合的朋友。第三弹讲名片夹的详情页和个人页面的开发。"}
{"publishtime": "2016/09/26··", "title": "微信小程序开发教程（第2弹）", "desc": "第二弹主要讲微信小程序的项目结构及配置，还有微信小程序首页面开发。"}
{"publishtime": "2016/09/26··", "title": "如果有人问你 SQL 注入的资料，请叫他看这份速查表", "desc": "SQL 注入速查表是可以为你提供关于不同种类 SQL注入漏洞的详细信息的一个资源。这份速查表对于经验丰富的渗透测试人员，或者刚开始接触 Web 应用安全的初学者，都是一份很好的参考资料。"}
{"publishtime": "2016/09/26·", "title": "高效重构 C++ 代码（下）", "desc": "本节针对C++语言，总结了一些对实施重构非常有用的工程实践经验. 当然其中决大部分也适用于C语言开发."}
{"publishtime": "2016/09/25·", "title": "深入浅出Netty内存管理：PoolChunkList", "desc": "前面两篇分别分析了PoolChunk和PoolSubpage的实现，本文主要分析管理PoolChunk生命周期的PoolChunkList。"}
{"publishtime": "2016/09/25··", "title": "有哪些令人惊叹的心理和思维技巧？", "desc": "在日常中沟通交流中，开门见山向对方说明来意，并不见得奏效。国外网友在 Quora 上讨论分享不少心理和思维技巧灵活。伯乐在线在本文摘编了 3 个技巧。如果能活用这些技巧，会大大提高沟通的成功几率。"}
{"publishtime": "2016/09/25·", "title": "高效重构 C++ 代码（中）", "desc": "本节是个人对重构手法的整理和提炼，帮助大家跳出细节，快速掌握重要的重构手法并且能够尽快在自己的重构实践中进行使用.随后我们整理了重构手法应用顺序的背后思想，帮助大家避免死记硬背，可以根据自己的重构场景推导出合理的重构顺序."}
{"publishtime": "2016/09/24·", "title": "高效重构 C++ 代码（上）", "desc": "本文站在作者学习和实践重构的基础上，为大家梳理重构技术，带领大家重新认识重构的目标和起点，重构手法背后的原理以及实践方式。最后介绍在实践中高效实施C/C++重构的经验、技巧和工具。"}
{"publishtime": "2016/09/23··", "title": "首个微信小程序开发教程，通宵吐血写的！", "desc": "目前还处于内测阶段，微信只邀请了部分企业参与封测。想必大家都关心「小程序」的最终形态到底是什么样子？本文档将带你一步步创建完成一个微信小程序，并可以在手机上体验该小程序的实际效果"}
{"publishtime": "2016/09/23·", "title": "深入浅出Netty内存管理：PoolSubpage", "desc": "上一节中分析了如何在poolChunk中分配一块大于pageSize的内存，但在实际应用中，存在很多分配小内存的情况，如果也占用一个page，明显很浪费。针对这种情况，Netty提供了PoolSubpage把poolChunk的一个page节点8k内存划分成更小的内存段，通过对每个内存段的标记与清理标记进行内存的分配与释放。"}
{"publishtime": "2016/09/23·", "title": "编写可靠 shell 脚本的 8 个建议", "desc": "这八个建议，来源于键者几年来编写 shell 脚本的一些经验和教训。事实上开始写的时候还不止这几条，后来思索再三，去掉几条无关痛痒的，最后剩下八条。毫不夸张地说，每条都是精挑细选的，虽然有几点算是老生常谈了。"}
{"publishtime": "2016/09/23·", "title": "一些瞠目结舌的 C/C++ 代码技巧", "desc": "说到 C/C++ 代码技巧，也许会有童鞋说 #define true false，但这是属于 C/C++ 程序员离职前恶搞之类的抖机灵。本文整理了两位知乎网友的分享，真的是让人瞠目结舌。"}
{"publishtime": "2016/09/23·", "title": "RESTful API 设计思路及实践", "desc": "本文将根据我使用REST的经验来总结一下RESTful API设计的一些知识和经验，自勉。本文将不讨论Oauth等安全问题。"}
{"publishtime": "2016/09/18·,·", "title": "PM 叫你去改一个 Bug，后来……", "desc": "你曾经碰到过现在这种情况：你的代码非常优雅。你代码中的抽象刚刚好，不多不少。模块都各自独立。所有的测试结果都是绿色的。代码测试覆盖率报告花了整整一分钟才打开，上面显示着 97%…… 生活很美好，然后事情就这么发生了。有人叫你去改一个 Bug。"}
{"publishtime": "2016/09/22··", "title": "TensorFlow深度学习，一篇文章就够了", "desc": "Google不仅是大数据和云计算的领导者，在机器学习和深度学习上也有很好的实践和积累，在2015年年底开源了内部使用的深度学习框架TensorFlow。与Caffe、Theano、Torch、MXNet等框架相比，TensorFlow在Github上Fork数和Star数都是最多的，而且在图形分类、音频处理、推荐系统和自然语言处理等场景下都有丰富的应用。"}
{"publishtime": "2016/09/18·", "title": "让你成为深度学习工程师的一门课程", "desc": "新能源和自动驾驶，这两个关键词描述了未来的交通工具。自动驾驶已成为各个车企、科技巨头和创业公司角逐的焦点。深度学习，作为自动驾驶的核心技术，将成为未来自动驾驶工程师的核心技能。到哪里去学？"}
{"publishtime": "2016/09/22··", "title": "WebSocket 和 Socket 的区别", "desc": "前段时间写了两篇介绍HTTP和WebSocket的文章，回复中有人说希望了解下WebSocket和Socket的区别。这个问题之前也有想过，自己对此是有大概的答案，可是并不太确定，于是去搜集了些资料（其实就是各种Google），看了很多以前的文档，觉得有些故事十分有趣，整理如下，算是一个外传。"}
{"publishtime": "2016/09/18··", "title": "HTTPS 工作原理和 TCP 握手机制", "desc": "HTTPS在传输数据之前需要客户端（浏览器）与服务端（网站）之间进行一次握手，在握手过程中将确立双方加密传输数据的密码信息。TLS/SSL协议不仅仅是一套加密传输的协议，更是一件经过艺术家精心设计的艺术品……"}
{"publishtime": "2016/09/22·,·", "title": "S.O.L.I.D 原则在 Go 中的应用", "desc": "本文以 SOLID 原则为线路，讲述了什么样的 Go 代码才算是好代码，当然 SOLID 原则也适用于其他语言。"}
{"publishtime": "2016/09/18··", "title": "像调度程序那样安排任务，是什么样的体验？", "desc": "从事知识相关工作的时间越长，每天你的任务会越来越多，而完成其中任何一项也会变得越来越不可能。比如说，这里有五项已经工作了两周并且今天是截止日的任务，十项上周截止的任务，一项今早老板突然提出的紧急任务，以及有时间就要去处理下的，永远存在的积压任务。另外还有常规会议，走廊谈话，即时消息以及邮件。无穷无尽的邮件…"}
{"publishtime": "", "title": "未知", "desc": "暂无简介"}
{"publishtime": "2016/09/18·", "title": "深入浅出Netty：read", "desc": "boss线程主要负责监听并处理accept事件，将socketChannel注册到work线程的selector，由worker线程来监听并处理read事件，本节主要分析Netty如何处理read事件。"}
{"publishtime": "2016/09/17··", "title": "MySQL 实现树形的遍历", "desc": "关于多级别菜单栏或者权限系统中部门上下级的树形遍历，oracle中有connect by来实现，mysql没有这样的便捷途径，所以MySQL遍历数据表是我们经常会遇到的头痛问题，下面通过存储过程来实现。"}
{"publishtime": "2016/09/17·,·", "title": "在 PHP 7 中不要做的 10 件事", "desc": "想要使用好PHP 7，这10件事不要做"}
{"publishtime": "2016/09/17··", "title": "算法系列（2）：三只水桶等分水问题", "desc": "有一个容积为8升的水桶里装满了水，另外还有一个容积为3升的空桶和一个容积为5升的空桶，如何利用这两个空桶等分8升水？附加条件是三个水桶都没有体积刻度，也不能使用其它辅助容器。"}
{"publishtime": "2016/09/16·", "title": "C++ 及标准库中的那些大坑", "desc": "c++使用过程中发现了一些极易出错的地方，给出了分析和解决办法"}
{"publishtime": "2016/09/16·", "title": "算法系列（1）：Google方程式", "desc": "有一个字符组成的等式：WWWDOT – GOOGLE = DOTCOM，每个字符代表一个0－9之间的数字，WWWDOT、GOOGLE和DOTCOM都是合法的数字，不能以0开头。请找出一组字符和数字的对应关系，使它们互相替换，并且替换后的数字能够满足等式。"}
{"publishtime": "2016/09/16··", "title": "我见过最有趣的代码注释，都在这里了（1）", "desc": "代码注释的作用，不需要对程序员解释了。有时在查看他人代码，能看到一些令人不禁大笑的注释。比如：「神奇代码，勿动」。最近看到一个Quora帖，号召程序员分享自己见过最有趣的代码注释。各种有趣的注释，摘编分享给大家。"}
{"publishtime": "2016/09/14··", "title": "MySQL EXPLAIN 命令详解学习", "desc": "MySQL的EXPLAIN命令用于SQL语句的查询执行计划(QEP)。这条命令的输出结果能够让我们了解MySQL 优化器是如何执行"}
{"publishtime": "2016/09/14·", "title": "MySQL 慢查询日志总结", "desc": " MySQL的慢查询日志是MySQL提供的一种日志记录，它用来记录在MySQL中响应时间超过阀值的语句，具体指运行时间超过long_query_time值的SQL，则会被记录到慢查询日志中。"}
{"publishtime": "2016/09/13·", "title": "Linux 3.10 kernel bridge 转发逻辑", "desc": "本文主要分析了linux kernel 3.10的bridge转发逻辑。这样正是CentOS 5和CentOS 7对应的内核。3.10 kernel中bridge逻辑的最大改变就是增加了vlan处理逻辑以及brdige入口函数的设置。"}
{"publishtime": "2016/09/13·", "title": "C++ 11 新特性之随机数库", "desc": "这是C++11新特性介绍的第十部分，涉及到随机数库相关的新特性。"}
{"publishtime": "2016/09/13··", "title": ".Net 高效开发之不可错过的实用工具", "desc": "工欲善其事，必先利其器，没有好的工具，怎么能高效的开发出高质量的代码呢？本文为 ASP.NET 开发者介绍一些高效实用的工具，包括 SQL 管理，VS插件，内存管理，诊断工具等，涉及开发过程的各个环节，让开发效率翻倍。"}
{"publishtime": "2016/09/13··", "title": "无休止加班的成因", "desc": "加班是互联网行业永远的痛，项目节点定下来后，为保证项目节奏，基本天昏地暗永无止境地加班，根本没有时间找女朋友。下面看看无休止加班的成因。"}
{"publishtime": "2016/09/22·", "title": "深入浅出Netty内存管理：PoolChunk", "desc": "多年之前，从C内存的手动管理上升到java的自动GC，是历史的巨大进步。然而多年之后，netty的内存实现又曲线的回到了手动管理模式，正印证了马克思哲学观：社会总是在螺旋式前进的，没有永远的最好。的确，就内存管理而言，GC给程序员带来的价值是不言而喻的，不仅大大的降低了程序员的负担，而且也极大的减少了内存管理带来的Crash困扰"}
{"publishtime": "2016/09/13·", "title": "为什么忘记commit也会造成select查询的性能问题", "desc": "今天遇到一个很有意思的问题，一个开发人员反馈在测试服务器ORACLE数据库执行的一条简单SQL语句非常缓慢，他写的一个SQL没有返回任何数据，但是耗费了几分钟的时间。让我检查分析一下原因，分析解决过后，发现事情的真相有点让人哭笑不得，但是也是非常有意思的。我们先简单构造一下类似的案例，当然只是简单模拟。"}
{"publishtime": "2016/09/22··", "title": "阿里根据截图查到泄露者，这样的技术是如何做到的？", "desc": "在月饼事件中，阿里开除了 5 位用脚本秒杀月饼的技术人员。后有员工对外泄露了内网通报的截图，泄露者已被查出并处理。后续有媒体报道提到，阿里对员工的访问界面加了一层肉眼无法识别的东西。对该技术好奇的网友在知乎上提问了，伯小乐整理了 2 位网友的分享回复。"}
{"publishtime": "2016/09/13··", "title": "LOL设计模式之「策略模式」", "desc": "之前写过一篇什么是「设计模式」？，没有类图，没有代码，有些同学说看不太懂，今天给大家带来策略模式（有图，有码，有真相！）。"}
{"publishtime": "2016/09/21·", "title": "刨根问底 HTTP 和 WebSocket 协议（下）", "desc": "上篇介绍了HTTP1.1协议的基本内容，这篇文章将继续分析WebSocket协议，然后对这两个进行简单的比较。"}
{"publishtime": "2016/09/12·", "title": "C++ STL学习——vector", "desc": "学过C++的人肯定会很熟悉STL标准模板库，STL其实就是封装了一系列的接口，供我们调用。很多函数或者算法的实现不需要我们从头开始写，大大提高我们的编程效率。这篇博客在简单介绍STL的情况下，会详细的来介绍vector的使用。"}
{"publishtime": "2016/09/21·", "title": "刨根问底 HTTP 和 WebSocket 协议（上）", "desc": "和朋友聊天说暴漏出自己很多基础知识掌握的并不牢靠，于是回来大致把HTTP和WebSocket协议的RFC文档（RFC2616 和 RFC6455），刚好对HTTP的传输过程一直有点模糊，这里把两个协议的异同总结一下。"}
{"publishtime": "2016/09/21·", "title": "C++11中的mutex, lock, condition variable实现分析", "desc": "C++11中的各种mutex, lock对象，实际上都是对posix的mutex，condition的封装。不过里面也有很多细节值得学习。"}
{"publishtime": "", "title": "未知", "desc": "暂无简介"}
{"publishtime": "2016/09/20·", "title": "fasthttp 的 goroutine pool 实现探究", "desc": "fasthttp 性能好于 go 原生 net/http 实现 http server 近10倍左右，而server编程一个很重要的点就是使用线程池。我们看一下优秀的fasthttp是怎么做的？"}
{"publishtime": "2016/09/20·", "title": "大话程序猿眼里的高并发架构", "desc": "高并发经常会发生在有大活跃用户量，用户高聚集的业务场景中，如：秒杀活动，定时领取红包等。为了让业务可以流畅的运行并且给用户一个好的交互体验，我们需要根据业务场景预估达到的并发量等因素，来设计适合自己业务场景的高并发处理方案。"}
{"publishtime": "2016/09/20··", "title": "大话程序猿眼里的高并发", "desc": "高并发是指在同一个时间点，有很多用户同时的访问URL地址，比如：淘宝的双11，双12，就会产生高并发,如贴吧的爆吧，就是恶意的高并发请求，也就是DDOS攻击，再屌丝点的说法就像玩撸啊撸被ADC暴击了一样,那伤害你懂得(如果你看懂了，这个说法说明是正在奔向人生巅峰的屌丝。"}
{"publishtime": "2016/09/20·", "title": "C++中字符串的使用", "desc": "当我们一开始使用C语言来处理字符串的时候，会感觉非常的麻烦。C语言中缺少相应的字符串处理函数，如果想要实现某个字符串功能，只能靠我们自己来实现。但是当来到C++中，字符串的处理就会变得异常简单。今天我们就来学习一下C++中最高频的字符串处理函数。"}
{"publishtime": "2016/09/20·", "title": "Linux下的静态库、动态库和动态加载库", "desc": "库的存在极大的提高了C/C++程序的复用性，但是库对于初学者来说有些难以驾驭，本文从Linux的角度浅谈Linux下的静态库、动态库和动态加载库。"}
{"publishtime": "2016/09/20··", "title": "C++ 多线程框架（3）：消息队列", "desc": "之前，多线程一些基本的东西，包括线程创建，互斥锁，信号量，我们都已经封装，下面来看看消息队列"}
{"publishtime": "2016/09/19·,", "title": "C++ 中的未定义行为", "desc": "C++ 程序经常因为未定义行为而出现各种千奇百怪的 Bug，调试起来也十分困难。"}
{"publishtime": "2016/09/19·", "title": "深入浅出Netty：write", "desc": "上一章节中，分析了Netty如何处理read事件，本节分析Netty如何把数据写会客户端。"}
{"publishtime": "2016/09/01··", "title": "被忽视的 partition 算法", "desc": "如果你学习过算法，那么肯定听说过快速排序的大名，但是对于快速排序中用到的 partition 算法，你了解的够多吗？或许是快速排序太过于光芒四射，使得我们往往会忽视掉同样重要的 partition"}
{"publishtime": "2016/09/19·", "title": "编写高质量代码之状态维护", "desc": "我们第一眼接触新事物所触发的思考方式，决定了以后我们看待这样事物的角度，进而影响更深层次的理解和行为。"}
{"publishtime": "2016/09/01·", "title": "浅谈 Java 中的 StringBuilder", "desc": "在《浅谈Java String内幕（1）》 中，字符串变量（非final修饰）通过 “+” 进行拼接，在编译过程中会转化为StringBuilder对象的append操作，注意是编译过程，而不是在JVM中。"}
{"publishtime": "2016/09/19·", "title": "DevOps 该是 Team Lead 的必备技能", "desc": "随着移动互联网的这么多年的发展，App的开发也越来越成熟，长期维护一款App成了新的常态，快速稳定的迭代发布成为了衡量产品开发团队的重要指标。"}
{"publishtime": "2016/09/01·", "title": "SQL注入攻击高级", "desc": "前面我们学习了如何寻找，确认，利用SQL注入漏洞的技术，本篇文章我将介绍一些更高级的技术，避开过滤，绕开防御。有攻必有防，当然还要来探讨一下SQL注入防御技巧。"}
{"publishtime": "2016/09/19·", "title": "C++ 多线程框架 （2）：Mutex 互斥和 Sem 信号量", "desc": "介绍一下多线程编程的两个基础：互斥和信号量"}
{"publishtime": "2016/09/01··", "title": "我们是如何将一个项目做烂的", "desc": "什么才是烂呢？”烂”和”好”一样无法准确的衡量和定义，在大多数人的职业生涯里，你听到”烂”项目肯定比听到”好”项目的情况要多很多。当你在一个维护型项目面前，一边嘴里跑出一万只草尼马，一边还在上面Coding，最后居然还如期交付了维护任务，你能说那是”烂”项目吗?"}
{"publishtime": "2016/09/18·", "title": "SQL Server 统计信息更新时采样百分比对数据预估准确性的影响", "desc": "话说经常做数据库的，尤其是做开发的或者优化的，统计信息造成的性能问题应该说是司空见惯。当然解决办法也并非一成不变，“一招鲜吃遍天”的做法已经行不通了，当然，还是那句话，既然写了就不能太俗套，写点不一样的，本文通过分析一个类似实际案例来解读统计信息的更新的相关问题。"}
{"publishtime": "2016/09/01·", "title": "MySQL 性能优化：性能提升 50%，延迟降低 60%", "desc": "在 Pinterest ，新进来的工程师可以灵活地选择参加哪个组，而且作为在本部工作经历的一部分，编写不同部分的代码可以有助于做出这个选择。本部的人通常会做不同的项目，而我的项目则是深入研究 MySQL 的性能优化。"}
{"publishtime": "2016/09/18·", "title": "线段树入门", "desc": "线段树是一种二叉搜索树，与区间树相似，它将一个区间划分成一些单元区间，每个单元区间对应线段树中的一个叶结点。对于线段树中的每一个非叶子节点[a,b]，它的左儿子表示的区间为[a,(a+b)/2]，右儿子表示的区间为[(a+b)/2+1,b]。因此线段树是平衡二叉树，最后的子节点数目为N，即整个线段区间的长度。"}
{"publishtime": "2016/08/31·", "title": "数据库高可用实战案例：架构优化", "desc": "客户的需求：SQL server 2008 R2 升级到SQL SERVER 2014 使用AlwaysOn 替换现有发布订阅架构。实现本地高可用、读写分离，异地灾备等，并应用部分2014的新功能，如内存优化表等提升系统性能和并发能力等。"}
{"publishtime": "2016/09/18·", "title": "LRU Cache 的简单 C++ 实现", "desc": "LRU Cache是一个Cache的置换算法，含义是“最近最少使用”，把满足“最近最少使用”的数据从Cache中剔除出去，并且保证Cache中第一个数据是最近刚刚访问的，因为这样的数据更有可能被接下来的程序所访问。"}
{"publishtime": "2016/08/31··", "title": "编写业务逻辑代码，清晰可维护是很重要的", "desc": "最近经常做业务逻辑代码review的工作，发现各种风格的代码，其中有一种是封装和抽象做的非常的多，代码层次非常的深入，表面给人感觉是：牛逼的代码。但是从清晰度和可维护性来说，还是不推荐这么做。"}
{"publishtime": "2016/09/18··", "title": "C++ 多线程框架（1）：new 一下就启动一个线程", "desc": "对于多线程，我们需要的是把操作系统底层封装起来，让用户编写程序的时候更多的关注他的代码逻辑而不是线程之间的逻辑，最好是new一个类以后，就启动了一个线程，线程之间的通信也有相应的类封装起来，只要调用就行了。"}
{"publishtime": "2016/08/31··", "title": "「全栈开发」在就业市场的真正含义", "desc": "大约在 2013 年，“全栈开发”这个词开始出现在招聘描述和博文之中。很多公司也意识到，雇用一个仅仅精通一种语言的开发者已经不能满足需求了。一个能处理各种任务和环境的 Web 开发者相当有用，这也开始成为了（公司招人）的规范。"}
{"publishtime": "", "title": "未知", "desc": "暂无简介"}
{"publishtime": "2016/08/31·", "title": "简述 SQL2008 部署多实例集群", "desc": "由二台或更多物理上独立的服务器共同组成的”虚拟”服务器称之为集群服务器。一项称做MicroSoft集群服务(MSCS)的微软服务可对集群服务器进 行管理。一个SQL Server集群是由二台或更多运行SQL Server的服务器(节点)组成的虚拟服务器。"}
{"publishtime": "2016/08/31·", "title": "SQLServer的分页优化兼谈谈使用Row_Number()分页存在的问题", "desc": "在服务器CPU使用较高的时候，我们的事件查询页面非常的慢，查询几条记录竟然要4分钟甚至更长，而且在翻第二页的时候也是要这么多的时间，这肯定是不能接受的，也是让现场用SQLServerProfiler把语句抓取了上来。"}
{"publishtime": "2016/08/30·", "title": "浅谈 Java String 内幕（2）", "desc": "String.intern()是一个Native方法，底层调用C++的 StringTable::intern 方法，源码注释：当调用 intern 方法时，如果常量池中已经该字符串，则返回池中的字符串；否则将此字符串添加到常量池中，并返回字符串的引用。 "}
{"publishtime": "2016/08/30·", "title": "程序猿是如何解决SQLServer占CPU100%", "desc": "有同事反应服务器CPU过高，一看截图基本都是100%了，my god，这可是大问题，赶紧先看看。让同事查看系统进程，发现是SQLServer的CPU占用比较高。首先想到的是不是报表生成的时候高，因为这块之前出现过问题，关掉服务程序，还是高。难道是客户端程序引发的？"}
{"publishtime": "2016/08/30·", "title": "浅谈 TCP 优化", "desc": "很多人常常对TCP优化有一种雾里看花的感觉，实际上只要理解了TCP的运行方式就能掀开它的神秘面纱。Ilya Grigorik 在「High Performance Browser Networking」中做了很多细致的描述，让人读起来醍醐灌顶，我大概总结了一下，以期更加通俗易懂。"}
{"publishtime": "2016/08/30·", "title": "SQL Server 之数据库的设计", "desc": "在需求分析阶段解决了客户的业务合数据处理需求后，就进入了我们的概要设计阶段，我们需要合项目团队的其他成员以及我们的客户沟通，讨论数据库的设计是否满足客户的业务合数据处理需求。"}
{"publishtime": "2016/08/30·", "title": "SQL Server 不可见字符处理", "desc": "问题描述：在表列里有肉眼不可见字符，导致一些更新或插入失败。 几年前第一次碰见这种问题是在读取考勤机人员信息时碰见的，折腾了一点时间，现在又碰到了还有点新发现就顺便一起记录下。"}
{"publishtime": "2016/09/08··", "title": "记一次SQL注入实战", "desc": "刚发现漏洞时，我就已经成功实现了注入，因为怕发到网上后被玩坏，一直没有发布。今天去看了看，原网页已经无法访问了，现在发出来应该就没有什么大问题了。"}
{"publishtime": "2016/08/30··", "title": "编辑器之战: Vim 的复仇", "desc": "Al Williams的一篇关于“Emacs 和Vim之战”的报道，并不合我们Hackaday的口味。本着“不偏不倚”的精神，他用七句话概率了Vim编辑器。仅仅七句！我顿时怒气冲天。"}
{"publishtime": "2016/09/08··", "title": "运维经理的运维经验总结", "desc": "作者的 20 多个经验的简要总结，涉及：域名、CDN、图片服务器、核心服务器、DNS、机房、监控系统、防攻击、数据库、服务器优化与安全、灾备预案等等。"}
{"publishtime": "2016/08/30·", "title": "创业公司的 CTO 应当做什么？", "desc": "很多时候，在一般人眼里的 CTO 形象等同于“那个拿着高薪坐在角落里，对‘技术’进行深层次思考的家伙” 或者 “那个在最后一刻突然一时兴起，跳起来重新安排我的项目的家伙”。我已经努力不让人产生这种印象，但这不容易做到。我们缺乏一个对 CTO 的一致而明确的角色定位。"}
{"publishtime": "2016/09/08··", "title": "Linux 中断处理原理分析", "desc": "Tasklet作为一种新机制，显然可以承担更多的优点。正好这时候SMP越来越火了，因此又在tasklet中加入了SMP机制，保证同种中断只能在一个cpu上执行。在软中断时代，显然没有这种考虑。因此同一种中断可以在两个cpu上同时执行，很可能造成冲突。Linux中断下半部处理有三种方式：软中断、tasklet、工作队列。"}
{"publishtime": "2016/08/30··", "title": "哪个蠢蛋写的烂代码？", "desc": "最近看到一个问题，叫做「你们会因为代码烂，而入职两三天选择离职吗？」。其实早先有过一些关于代码质量的讨论，比如《关于烂代码的那些事》、《你的代码写的很烂》。这让很多程序员感受到共鸣，大家纷纷出来吐槽。大家都在抱怨同事的代码写的烂，前同事遗留下来的代码bug多…… 那问题来了，写这些烂代码的人都去哪了？"}
{"publishtime": "2016/09/08··", "title": "这就是别人学习高效的原因", "desc": "最近看了《如何高效学习》，作者是一位因为快速学习而成名的神奇小子，他应用自己发明的学习方法，完成了10天搞定线性代数，1年学习4年MIT课程的“不可能任务”。作者是为何让学习如此高效？"}
{"publishtime": "2016/08/29··", "title": "浅谈Java String内幕（1）", "desc": "String字符串在Java应用中使用非常频繁，只有理解了它在虚拟机中的实现机制，才能写出健壮的应用，本文使用的JDK版本为1.8.0_3。"}
{"publishtime": "2016/09/08·", "title": "如何成为卓有成效的管理者？", "desc": "一群平凡人，能做出不平凡的事业吗？这是完全可以做到的。只要我们组织中的每一个人都能做到卓有成效。卓有成效可以学会吗？卓有成效是可以学会的。每个人都必须卓有成效吗？卓有成效是管理者必须做到的事。"}
{"publishtime": "2016/08/29·", "title": "SQL Server SQL性能优化之参数化", "desc": "数据库的参数化有两种方式，简单（simple）和强制（forced），默认的参数化默认是“简单”，简单模式下，如果每次发过来的SQL，除非完全一样，否则就重编译它。强制模式就是将adhoc SQL强制参数化，避免每次运行的时候因为参数值的不同而重编译，这里不详细说明。"}
{"publishtime": "2016/09/08·", "title": "hexdump 的 5 个使用小技巧", "desc": "开发时经常会需查看非文本文件内容，最常见的16 进制查看器就是 hexdump。hexdump 看似简单，但还是有些小技巧的。"}
{"publishtime": "", "title": "未知", "desc": "暂无简介"}
{"publishtime": "2016/09/08·", "title": "Linux 下 CPU 使用率与机器负载的关系与区别", "desc": "用 top 命令查看系统的资源使用情况时会看到 load average，如文中下图所示。它表示系统在1、5、15分钟的平均工作负载。那么什么是负载(load)呢？它和CPU的利用率又有什么关系呢？"}
{"publishtime": "2016/09/07··", "title": "老司机教你如何撩妹：程序员撩妹技术 30 分钟从门到精通", "desc": "大家都说程序员不会跟女生打交道，甚至程序员被强行打上“性格内向”“表情木讷”的标签，更加给女生“无趣”的印象。但是实际上并非如此，我认为程序员兄弟们性格并不内向，也不木讷，只是在和女生交往过程中没有一个明确的方法论作为指导（即“套路”）。"}
{"publishtime": "2016/09/07·", "title": "深入浅出Netty（1）", "desc": "Netty是一个高性能、异步事件驱动的NIO框架，它提供了对TCP、UDP和文件传输的支持，作为一个异步NIO框架，Netty的所有IO操作都是异步非阻塞的，通过Future-Listener机制，用户可以方便的主动获取或者通过通知机制获得IO操作结果。"}
{"publishtime": "2016/09/07·,", "title": "如果裸写一个goroutine pool", "desc": "Golang的原生http server处理client的connection的时候，每个connection起一个goroutine，这是一个相当粗暴的方法。"}
{"publishtime": "2016/09/06·,·", "title": "深入理解 C 语言的函数调用过程", "desc": "本文主要从进程栈空间的层面复习一下C语言中函数调用的具体过程，以加深对一些基础知识的理解。"}
{"publishtime": "2016/09/06·", "title": "C++ 11 新特性之 template", "desc": "这是C++11新特性介绍的第八部分，涉及到template相关的新特性。"}
{"publishtime": "2016/09/06·", "title": "C++ 11 新特性之右值引用与移动", "desc": "这是C++11新特性介绍的第七部分，涉及到左右值引用、移动构造、移动赋值、完美转发等。"}
{"publishtime": "2016/09/12·", "title": "SQL调优--表统计信息未及时更新导致查询超级慢", "desc": "默认情况下，查询优化器已根据需要更新统计信息以改进查询计划；但在某些情况下，你可以通过使用 UPDATE STATISTICS 或存储过程 sp_updatestats 来比默认更新更频繁地更新统计信息，提高查询性能。"}
{"publishtime": "2016/09/06·", "title": "Shell 脚本浮点运算", "desc": "本文将介绍几种Linux下通过Shell脚本进行浮点数计算的方法。"}
{"publishtime": "2016/09/12·", "title": "跟我一起写shell补全脚本（Zsh篇）", "desc": "绝大部分日常使用Linux和OS X的程序员都会选择zsh作为自己的shell环境，毕竟对比于bash，zsh的便利性/可玩性要胜出很多，同时它又能兼容bash大多数的语法。不过相对而言，zsh补全脚本要比bash补全脚本要难写。"}
{"publishtime": "2016/09/06··", "title": "说说 cglib 动态代理", "desc": "JDK中的动态代理通过反射类Proxy和InvocationHandler回调接口实现，要求委托类必须实现一个接口，只能对该类接口中定义的方法实现代理，这在实际编程中有一定的局限性。"}
{"publishtime": "2016/09/12·", "title": "跟我一起写shell补全脚本（Bash篇）", "desc": "shell里面补全的影子无处不在，输入命令的时候可以有补全，敲打选项的时候可以有补全，选择文件的时候可以有补全。有些shell甚至支持通过补全来切换版本控制的分支。"}
{"publishtime": "2016/09/06·", "title": "代数发展简史", "desc": "代数是巴比伦人、希腊人、阿拉伯人、中国人、印度人和西欧人一棒接一棒而完成的伟大数学成就。发展至今，它包含算术、初等代数、高等代数、数论、抽象代数五个部分。"}
{"publishtime": "2016/09/12·", "title": "HTTPS 科普扫盲帖", "desc": "HTTP是明文传输的，也就意味着，介于发送端、接收端中间的任意节点都可以知道你们传输的内容是什么。这些节点可能是路由器、代理等。"}
{"publishtime": "2016/09/06·", "title": "一个屌丝程序猿的人生（37）", "desc": "对于林萧来说，学习Java基础的过程，比想象当中的要顺利许多。但尽管如此，在这个过程当中，还是偶尔会碰到比较难搞的奇葩知识点。这不，林萧看了没多久视频，就碰到了一个把他搞得晕头转向的家伙——文件IO。"}
{"publishtime": "2016/09/12·", "title": "TCP/IP之TCP协议：流量控制（滑动窗口协议）", "desc": "1、流量控制是管理两端的流量，以免会产生发送过块导致收端溢出，或者因收端处理太快而浪费时间的状态。用的是：滑动窗口，以字节为单位"}
{"publishtime": "2016/09/06·", "title": "Pinterest 数据切分：我们如何扩展 MySQL 数据量的", "desc": "大约在2011年9月份，Pinterest的基础设施都超过负载。一些NoSQL技术导致灾难性的后果，同时大量用于读的MySQL从属服务器，产生了大量令人恼火的Bug，特别是缓存。Pinterest 重新架构了整个存储模型。"}
{"publishtime": "2016/09/12·", "title": "在谷歌招工程师，我看重的是这些", "desc": "招工程师的过程跟从前大不一样了——有一部分改变是特意设计的。除了计算机系的学生，也对英语系和哲学系等的学生感兴趣。你的 GPA 有没有 4.0 并不太重要，我们也不关心你能不能算出来一架波音 747 飞机里可以装多少个高尔夫球。"}
{"publishtime": "2016/09/06··", "title": "别工作太长时间，这对你和公司都有好处", "desc": "在软件公司，永远都有做不完的工作：太多新功能要实现，太多bug要修补。有时候你就是没法快速完成积压的工作，写不够代码量，花太多时间在一个看上去不可能修复的bug上。更糟糕的是，你还要把时间浪费在毫无重点的会议上，而不是用在工作上。"}
{"publishtime": "2016/09/11·", "title": "C++ 中输入输出流及文件流操作笔记", "desc": "输入输出流、文件流常用操作、总结、原理"}
{"publishtime": "2016/09/05·,", "title": "浅析 PHP 变量存储结构及弱类型实现机制", "desc": "浅析 PHP 变量存储结构及弱类型实现机制"}
{"publishtime": "2016/09/11·", "title": "深入浅出Netty：accept", "desc": "本章节分析服务端如何accept客户端的connect请求。"}
{"publishtime": "", "title": "未知", "desc": "暂无简介"}
{"publishtime": "2016/09/11·", "title": "玩转 Bash 变量", "desc": " 注意本文讨论的是Bash，而不一定是/bin/sh所链接的那个shell。这里出现的所有代码片段，默认在顶上都添加了#!/bin/bash。"}
{"publishtime": "2016/09/11·", "title": "深入浅出Netty：ChannelPipeline", "desc": "每个channel内部都会持有一个ChannelPipeline对象pipeline。pipeline默认实现DefaultChannelPipeline内部维护了一个DefaultChannelHandlerContext链表。"}
{"publishtime": "2016/09/11·", "title": "MySQL 数据库增量数据恢复案例", "desc": "数据库增量数据恢复的主要思想是，利用全备的sql文件中记录的CHANGE MASTER语句，binlog文件及其位置点信息，找出binlog文件增量的部分，用mysqlbinlog命令将上述的binlog文件导出为sql文件，并剔除其中的drop语句，再通过全备文件和增量binlog文件的导出sql文件，就可以恢复到完整的数据。"}
{"publishtime": "2016/09/11··", "title": "MySQL 和 B 树的那些事", "desc": "在介绍B树之前，先来看另一棵神奇的树——二叉排序树（Binary Sort Tree），首先它是一棵树，“二叉”这个描述已经很明显了，就是树上的一根树枝开两个叉，于是递归下来就是二叉树了，而这棵树上的节点是已经排好序的。"}
{"publishtime": "2016/09/10·", "title": "从 pthread 转换到 std::thread", "desc": "以前一直都是用pthread的API写C++的多线程程序。虽然很早之前就听说，从C++11开始，标准库里已经包含了对线程的支持，不过一直没有拿来用，最近刚好有空，借着pthread的经验学习下std::thread的用法"}
{"publishtime": "2016/09/10··", "title": "MySQL 中你应该使用什么数据类型表示时间？", "desc": "当你需要保存日期时间数据时，一个问题来了：你应该使用 MySQL 中的什么类型？使用 MySQL 原生的 DATE 类型还是使用 INT 字段把日期和时间保存为一个纯数字呢？"}
{"publishtime": "2016/09/10·", "title": "Linux 性能分析的前 60 秒", "desc": "为了解决性能问题，你登入了一台Linux服务器，在最开始的一分钟内需要查看什么？"}
{"publishtime": "2016/09/10·", "title": "C++ 11 新特性之正则表达式", "desc": "这是C++11新特性介绍的第九部分，涉及到正则表达式相关的新特性。"}
{"publishtime": "2016/09/09·", "title": "你以为是微服务或Docker？其实是组织架构！", "desc": "在本文中，我们尝试揭开微服务和容器技术背后映射出的组织结构的变迁，以及组织结构对落地微服务和容器化架构所带来的反向制约，最后用INVEST原则来看看支撑这样松耦合架构的组织结构应有的特质。希望能够帮助迷茫中的企业和组织重新思考自己的微服务之路。"}
{"publishtime": "2016/09/05··", "title": "SSL/TLS 协议运行机制的概述", "desc": "互联网的通信安全，建立在SSL/TLS协议之上。"}
{"publishtime": "2016/09/09·", "title": "深入浅出Netty：NioEventLoop", "desc": "上一节分析了Netty服务的启动过程，本节分析Netty的eventLoop是如工作的。NioEventLoop中维护了一个线程，线程启动时会调用NioEventLoop的run方法，执行I/O任务和非I/O任务。"}
{"publishtime": "2016/09/05··", "title": "你应该知道的计算机网络知识", "desc": "作为一名程序员，不可能不与网络打交道。不夸张地说，我们的手机和电脑离开了网络就是一块「废铁」，它们的作用将大打折扣.。本文要是针对非网络专业开发的人员准备的，以「最短的时间，了解计网最多的知识」为前提而写。"}
{"publishtime": "2016/09/09·", "title": "深入浅出Netty：服务启动", "desc": "本节主要分析server的启动过程。Netty是基于Nio实现的，所以也离不开selector、serverSocketChannel、socketChannel和selectKey等，只不过Netty把这些实现都封装在了底层。"}
{"publishtime": "2016/09/05·", "title": "这 10 项技术改变了我们的生活，但它们最初的模样你八成不知道", "desc": "当今，一些技术已经发展到瓶颈，另一些却仍在发展中。一些日常科技的初始版本，正好能反应出科技领域的进步。自所有的技术被发明以来，它们经历了不断地改善和取代并进化了。"}
{"publishtime": "2016/09/09··", "title": "VFS文件系统结构分析", "desc": "VFS是Linux非常核心的一个概念，linux下的大部分操作都要用到VFS的相关功能。这里从使用者的角度，对VFS进行了简单说明。使用者不但需要知道Linux下有哪些文件操作的函数，还需要对VFS的结构有一个比较清晰的了解，才能更好的使用它。例如hard link 与symbolic，如果没有VFS结构的相了解，就无法搞清楚如何使用它们。"}
{"publishtime": "2016/09/05··", "title": "这里有一份面经，请查收（八）", "desc": "篇是这个系列的最后一篇了，写完这篇就准备离职的相关事情了。这里讲述的是公司简称为A, 是8家面试中唯一挂掉的一家。面试分为4轮，两轮技术，后面两轮应该是BOSS+HR面。HR具有一票否决权。博主只面到2面，就只讲讲这两面面了什么吧。"}
{"publishtime": "", "title": "未知", "desc": "暂无简介"}
{"publishtime": "2016/09/04··", "title": "终年32岁的传奇数学家，生前寂寂无闻，一个世纪后却让硅谷领袖们集体落泪致敬", "desc": "2016年4月，著名投资人尤里·米尔纳在自己家中举行了一场小规模的晚宴，到场嘉宾包括Google创始人布林、Facebook创始人兼CEO扎克伯格及其他数十位硅谷领袖。晚宴上，米尔纳放映了一部导演马修·布朗最新拍摄的传记体电影——《知无涯者》。"}
{"publishtime": "2016/09/04·", "title": "用 Tab 还是 Space？谷歌程序员分析了10亿份代码", "desc": "用 Tab 还是 Space？事关程序员的信仰之争。"}
{"publishtime": "2016/09/04·", "title": "大道至简：朴素贝叶斯分类器", "desc": "贝叶斯实现简单，功能强大，本文简单介绍贝叶斯分类原理及应用中需要处理的问题，最后使用R语言实现一个朴素贝叶斯分类器并加以验证"}
{"publishtime": "2016/09/04·", "title": "说说 Java 反射机制", "desc": "虚拟机在class文件的加载阶段，把类信息保存在方法区数据结构中，并在Java堆中生成一个Class对象，作为类信息的入口。"}
{"publishtime": "2016/09/04·", "title": "一个屌丝程序猿的人生（36）", "desc": "林萧的话无异于给吴雄当头泼了一盆凉水，但是吴雄却没有接话，反倒是宋刚皱着眉头问道：“哥，我觉得吴雄说的挺有道理的，你为啥说不对？”"}
{"publishtime": "2016/09/04·", "title": "说说 Java 代理模式(1)", "desc": "代理实现可以分为静态代理和动态代理。 静态代理 静态代理模式其实很常见，比如买火车票这件小事：黄牛相当于是火车站的代理，我们可以通过黄牛买票，但只能去火车站进行改签和退票……"}
{"publishtime": "2016/09/04··", "title": "这里有一份面经，请查收（七）", "desc": "本篇所要介绍的是一家互联网企业，简称MD好了。一面是电面，二三面是face2face的技术面，4面是HR面。"}
{"publishtime": "2016/09/03·", "title": "说说 Java 的枚举类型", "desc": "JDK5中提供了Java枚举类型的实现，与其说是一种新类型，倒不如说是一种语法糖。"}
{"publishtime": "2016/09/03·", "title": "SQL Server 2016 JSON原生支持实例说明", "desc": "Microsoft SQL Server 对于数据平台的开发者来说越来越友好。比如已经原生支持XML很多年了，在这个趋势下，如今也能在SQLServer2016中使用内置的JSON。尤其对于一些大数据很数据接口的解析环节来说这显得非常有价值。"}
{"publishtime": "2016/09/03··", "title": "数学之美：平方根倒数速算法中的神奇数字 0x5f3759df", "desc": "本文探讨了「平方根倒数速算法」诸多有趣的地方，解释了其原理，对指数在 -1 到 1 的情况进行了拓展，还有一些数学相关的新思路。"}
{"publishtime": "2016/09/03·", "title": "数据存储在多张表，缓存维度如何设计？", "desc": "为了提升接口的响应速度，通常会使用中央缓存，比如增加一个memcache集群，用于存储热点数据。"}
{"publishtime": "2016/09/03·", "title": "Redis 内存淘汰机制", "desc": "Redis是一款优秀的、开源的内存数据库，我在阅读Redis源码实现的过程中，时时刻刻能感受到Redis作者为更好地使用内存而费尽各种心思，例如最明显的是对于同一种数据结构在不同应用场景下提供了基于不同底层编码的实现（如压缩列表、跳跃表等）。今天我们暂时放下对Redis不同数据结构的探讨，来一起看看Redis提供的另一种…"}
{"publishtime": "2016/09/03·", "title": "这里有一份面经，请查收（六）", "desc": "已经写到第六篇了，本文说的这家公司是博主投的最随意的，属于手滑点赞的那种。这里简称为V，最后也是选择了这家。"}
{"publishtime": "2016/09/02·", "title": "这里有一份面经，请查收（五）", "desc": "这里讲述的是一家公司，简称I，当天上午面完公司B之后，打车到火车站坐高铁赶来面试，午饭也没吃，这次面试的比较久，从下午15：30到19:30，主要是等待的时间。当天20:30还接了一个Z公司的电话面试。这次面试也是轮数最多，持续时间最长的一次。共有一面电面，二面技术面，三面boss1, 四面boss2, 五面vp，如果HR面都算的话共有6面了。"}
{"publishtime": "2016/08/26··", "title": "Zookeeper ZAB 协议分析", "desc": "ZAB 协议是为分布式协调服务 ZooKeeper 专门设计的一种支持崩溃恢复的原子广播协议。在 ZooKeeper 中，主要依赖 ZAB 协议来实现分布式数据一致性，基于该协议，ZooKeeper 实现了一种主备模式的系统架构来保持集群中各个副本之间的数据一致性。"}
{"publishtime": "2016/09/01·", "title": "二层（链路层）数据包发送过程分析", "desc": "当上层准备好一个包之后，交给链路层，链路层数据包发送主要通过dev_queue_xmit函数处理。数据包的发送可分为两种，一种是正常的传输流程，即通过网卡驱动，另一种是通过软中断（见注3）。为了理解方便，首先看一下dev_queue_xmi函数的整体调用关系图。"}
{"publishtime": "2016/08/26·", "title": "数字证书及 CA 的扫盲介绍", "desc": "考虑到证书体系的相关知识比较枯燥、晦涩。俺先拿一个通俗的例子来说事儿。想必大伙儿都听说过介绍信的例子吧？假设 A 公司的张三先生要到 B 公司去拜访，但是 B 公司的所有人都不认识他，他咋办呢？常用的办法是带公司开的一张介绍信……"}
{"publishtime": "2016/09/01·,·", "title": "我加入一家硅谷骗子创业公司的奇葩经历", "desc": "今年5月在AngeList找到一家硅谷创业公司，面试后拿到offer；公司10几个员工，其中8个年轻的中国人H1B码农；集体被公司拖欠工资；CEO自己PS了银行转账收据的网页截图发给员工，以证明工资发出去了。"}
{"publishtime": "2016/08/26··", "title": "JVM 方法调用的那些事", "desc": "Java文件在编译过程中不会进行传统编译的连接步骤，方法调用的目标方法以符号引用的方式存储在Class文件中，这种多态特性给Java带来了更灵活的扩展能力，但也使得方法调用变得相对复杂，需要在类加载期间，甚至到运行期间才能确定目标方法的直接引用。"}
{"publishtime": "", "title": "未知", "desc": "暂无简介"}
{"publishtime": "2016/08/26··", "title": "没掌握技巧，再好的工具也没用", "desc": "没掌握生产力技巧，再好的生产力工具也没用。光靠一支好球杆，并不能让你成为高尔夫专业选手。"}
{"publishtime": "2016/08/25·", "title": "JVM 类加载的那些事", "desc": "Java源代码被编译成class字节码，最终需要加载到虚拟机中才能运行。整个生命周期包括：加载、验证、准备、解析、初始化、使用和卸载7个阶段。"}
{"publishtime": "2016/08/25··", "title": "他们征友（婚）时，他们征什么？", "desc": "有道是年年岁岁花相似，岁岁年年征友人，征友贴一茬又一茬，简历投了一波又一波，为什么迟迟得不到回复？当男女征友时，他们到底在征什么？你真的看懂征友贴了吗？你还在为你屡屡投条未收到答复而苦恼吗？你还在为简历被女神刷掉自怨自艾吗？"}
{"publishtime": "2016/08/25··", "title": "如何搭建一个易于维护的 Hadoop 集群？", "desc": "Cloudera官方发布了一篇怎样部署一个Hadoop集群的文章。包含了网络，DNS，系统配置，存储和硬件配置等关键细节。同时也有一点CDH专用的推荐，但是总的来说这对想构建一个Hadoop集群的人来说是一个很好的资源。"}
{"publishtime": "2016/08/25·", "title": "开源的那些事儿 （1）：如何看待开源", "desc": "相信很多人对于开源这个概念很模糊，我在之前的一篇博客《程序员的选择》里面也略微谈了一下，这里想展开说一下。"}
{"publishtime": "2016/08/25·", "title": "Java 程序死锁问题原理及解决方案", "desc": "本文首先介绍了死锁发生的原因，并通过一个示例解释了死锁发生的前提情况。然后通过 JVM 的 jstack 工具演示了如何确定一个死锁的发生。最后对死锁的预防、恢复等方式进行了解释。"}
{"publishtime": "2016/08/24·", "title": "深入浅出 ReentrantLock", "desc": "Java5之后，并发包中新增了Lock接口（以及相关实现类）用来实现锁的功能，它提供了与synchronized关键字类似的同步功能。既然有了synchronized这种内置的锁功能，为何要新增Lock接口？"}
{"publishtime": "2016/08/24·", "title": "分布式队列编程优化篇", "desc": "“分布式队列编程”是一个系列文，之前我们已经发布了《分布式队列编程模型、实战》，主要剖析了分布式队列编程模型的需求来源、定义、结构以及其变 化多样性；根据作者在新美大实际工作经验，给出了队列式编程在分布式环境下的一些具体应用。"}
{"publishtime": "2016/08/24·", "title": "用 C++ 实现类似于 JAVA HttpServlet 的编程接口", "desc": " 本文主要描述了 acl_cpp 库中有关 WEB 编程的方法类，为了使大家容易上手，其中的接口设计及命名尽量模仿 JAVA HttpServlet 等相关的类。"}
{"publishtime": "2016/08/22·", "title": "记录一次奇葩的性能调优经历", "desc": "query end是什么状态？ mysql的官方文档解释是：This state occurs after processing a query but before the freeing items state.我的理解是语句执行完毕了，但是还有一些后续工作没做完时的状态。"}
{"publishtime": "2016/08/22··", "title": "从淘汰Oracle数据库的事情说起", "desc": "公司因为Oracle的维护成本太高、内部基于Oracle数据库的数据仓库问题频出和scalability的原因正在淘汰Oracle数据库。"}
{"publishtime": "2016/08/22·", "title": "好代码如文档，不言自明", "desc": "如果你的代码是不解自明的，那么大多数情况下，它并不需要注释和文档。"}
{"publishtime": "2016/08/22·", "title": "一种工作流心跳机制的设计", "desc": "每台机器上有若干个activity task在被执行。可以看到，在activity任务启动起来以后，需要用不断的心跳来告知service端任务还在进行，activity worker还活着。这个“汇报”需要activity worker所在的host主动进行，这也是SWF的service端无状态的基本要求之一。"}
{"publishtime": "2016/08/21··", "title": "MYSQL入门全套", "desc": "数据库（Database）是按照数据结构来组织、存储和管理数据的仓库，它产生于距今六十多年前，随着信息技术和市场的发展，特别是二十世纪九十年代以后，数据管理不再仅仅是存储和管理数据，而转变成用户所需要的各种数据管理的方式。"}
{"publishtime": "2016/08/21·", "title": "SQL性能优化前期准备-清除缓存、开启IO统计", "desc": "将问题SQL在查询分析器中进行分析，主要通过执行计划及IO统计定位耗时占比高及IO读取大的地方，然后逐步的调整SQL逻辑关系（比如添加业务条件过滤缩小集合，建立索引、调整like匹配等），优化后再重新进行跟踪看看是否有效果，最终达到SQL的优化目的。"}
{"publishtime": "2016/08/21·", "title": "网络协程编程", "desc": "介绍一下网络编程协议"}
{"publishtime": "2016/08/21··", "title": "程序员该如何维护健康的人际关系？", "desc": "我们都曾有过这种感受。当你在文本编辑器中穿梭解决问题时，整个世界似乎都远去了。你不知道当前时间，也不会想着晚饭要吃些什么，全身心地投入在屏幕，或者说是问题上。"}
{"publishtime": "2016/08/21·,·", "title": "462 字节 C 代码实现雅虎 logo ACSII 动画", "desc": "说到代码混淆艺术，大家可能会想到 IOCCC 大赛中的阿卡林形象。不过本文介绍 Andy Sloane 的一个只有 462 字节的程序，用 C 代码实现雅虎 logo ACSII 动图。文中包含了详细解释。"}
{"publishtime": "2016/08/20·", "title": "移动端开发者眼中的前端开发流程变迁与前后端分离", "desc": "这是一篇面向移动端开发者的科普性文章，从前端开发的最初流程开始，结合示范代码，讨论开发流程的演变过程，希望能覆盖一部分前端开发技术栈，从而对前端开发的相关概念形成初步的认识。 本文会提供一些示范代码，然而无法运行，也不需要完全看懂，更多的是方便读者对相关概念和方案有更加具体形象的感受和更清晰的理解。 由于自身能力有限，对很多概念的理解比较浅显，甚至有误，欢迎交流指正。 "}
{"publishtime": "2016/08/20·", "title": "聊聊数据库级联删除与伪删除的设计方案", "desc": "这两天看了重温了下设计模式和数据结构，又补了下基础知识，然后就失眠了一整夜，不知为啥就想到级联及伪删数据这个问题。由于级联删除是几乎人人都会遇到的问题，但方案却有限却不美好，所以欢迎大伙集思文益，以下内容欢迎大伙一起讨论。"}
{"publishtime": "2016/08/20·", "title": "架构之路（9）：Session Per Request", "desc": "这是一个使用NHibernate构建Web项目惯用的模式，相关的文章其实很多。我尽量用我的语言（意思是大白话，但可能不精确）来做一个简单的解释。"}
{"publishtime": "2016/08/19·", "title": "互联网高级测试工程师至少具备的能力", "desc": "业务熟悉；逻辑思维好，气场也要好；掌控系统上线排期；熟悉测试技术；约束开发人员，保证开发质量；要懂的写代码进行接口自动化测试；"}
{"publishtime": "2016/08/19·", "title": "也谈团队文化", "desc": "好的文化氛围需要引导才能产生，它是我们每一位团队成员在面对事情上面的集体倾向，它能够帮助我们将团队建设的更好，它需要时间。"}
{"publishtime": "2016/08/19·", "title": "架构之路（8）：从CurrentUser说起", "desc": "CurrentUser最麻烦的一件事情是：很多页面是根据不同的当前用户，显示不同的内容的。以“任务编辑”页面为例，当前用户是该任务的发布人，发布栏可编辑；否则，发布栏仅仅是可读的。"}
{"publishtime": "2016/08/24··", "title": "HTTP 协议简介", "desc": "从协议结构、协议举例等方面简单的介绍了一下HTTP协议"}
{"publishtime": "2016/08/19·,", "title": "使用 C++11 智能指针时要避开的 10 大错误", "desc": "我很喜欢 C++11 的智能指针。在很多时候，对很多讨厌自己管理内存的人来说是天赐的礼物。用 C++11 两年多了，我无意中发现多种错误使用智能指针的案例，这些错误会使程序效率很低或者直接崩溃。"}
{"publishtime": "2016/08/24··", "title": "不要相信程序员在加班时间写的代码", "desc": "作为一个最底层的程序员，我先记录一些只有底层程序员才会知道的事情。如果多年后，我违背自己进入这个行业的初心，走上管理岗位，也能回想起一些禁忌，避免一些错误。其中最重要的就是这条：不要相信一个程序员在加班时间写出来的代码。"}
{"publishtime": "2016/08/19·", "title": "深入浅出 Java 线程池", "desc": "线程是稀缺资源，如果无限制的创建，不仅会消耗系统资源，还会降低系统的稳定性，使用线程池可以进行统一的分配、调优和监控。"}
{"publishtime": "2016/08/19··", "title": "一次心惊肉跳的服务器误删文件的恢复过程", "desc": "经历了两天不懈努力，终于恢复了同事妹子一次误操作（ rm -rf ）删除的生产服务器数据。对本次事故过程和解决办法记录在此，警醒自己，也提示别人莫犯此错。也希望遇到问题的朋友能找到一丝灵感解决问题。"}
{"publishtime": "2016/08/23··", "title": "代理模式：女朋友这么漂亮，你缺经纪人吗？", "desc": "这几天王宝强妻子出轨经纪人事件惹尽了眼球，“你缺经纪人吗” 一下子成为打招呼必备热词。在紧跟“潮流”之前我们有必要了解下，经纪人都负责为宝强做哪些事呢？"}
{"publishtime": "2016/08/29·", "title": "理解和使用SQL Server中的并行", "desc": "许多有经验的数据库开发或者DBA都曾经头痛于并行查询计划，尤其在较老版本的数据库中（如sqlserver2000、oracle 7、mysql等）。但是随着硬件的提升，尤其是多核处理器的提升，并行处理成为了一个提高大数据处理的高效方案尤其针对OLAP的数据处理起到了很好的作用。"}
{"publishtime": "2016/08/23·", "title": "JVM 内存的那些事", "desc": "对于C语言开发的程序员来说，在内存管理方面，必须负责每一个对象的生命周期，从有到无。对于Java程序员你来说，在虚拟机内存管理的帮助下，不需要为每个new对象都匹配free操作，内存泄露和内存溢出等问题也不太容易出现，不过也正是因为把内存管理交给了虚拟机，一旦运行中的程序出现了内存泄露问题，给排查过程造成很大困难。"}
{"publishtime": "2016/08/29·", "title": "Linux性能及调优指南：进程管理", "desc": "进程管理是操作系统的最重要的功能之一。有效率的进程管理能保证一个程序平稳而高效地运行。"}
{"publishtime": "2016/08/18·", "title": "深入浅出 synchronized", "desc": "synchronized可以保证方法或代码块在运行时，同一时刻只有一个线程可以进入到临界区（互斥性），同时它还保证了共享变量的内存可见性。Java中的每个对象都可以作为锁。"}
{"publishtime": "2016/08/23·", "title": "“六顶思考帽”给我的启示", "desc": "不知读者您是否深有感触，我们在会议上花费了太多的时间，这些原本能够为公司产生生产力的时间，都浪费在了冗长而低效的会议上。这些会议通常洋溢着令人厌烦的气氛，大多数时候我们可以得到这样的结论——“会议在拖我们的后腿”。"}
{"publishtime": "2016/08/29·", "title": "Linux性能及调优指南：内存架构", "desc": "为了执行一个进程，Linux内核为请求的进程分配一部分内存区域。该进程使用该内存区域作为其工作区并执行请求的工作。它与你的申请一个办公桌，然后使用办公桌来摆放纸张、文档和备忘录来执行你的工作类似。"}
{"publishtime": "2016/08/18··", "title": "深入浅出 ThreadLocal", "desc": "ThreadLocal为变量在每个线程中都创建了一个副本，所以每个线程可以访问自己内部的副本变量，不同线程之间不会互相干扰。本文会基于实际场景介绍ThreadLocal如何使用以及内部实现机制。应用场景最近的一个web项目中，由于Parameter对象的数据需要在多个模块中使用，如果采用参数传递的方式，显然会增加模块之间的耦合性。"}
{"publishtime": "2016/08/23··", "title": "深入浅出 Java 同步器", "desc": "在 java.util.concurrent.locks 包中有很多Lock的实现类，常用的有ReentrantLock、ReadWriteLock（实现类ReentrantReadWriteLock），内部实现都依赖AbstractQueuedSynchronizer类，接下去让我们看看Doug Lea大神是如何使用一个普通类就完成了代码块的并发访问控制。"}
{"publishtime": "2016/08/29·,", "title": "acl 服务器编程框架设计要点", "desc": "acl 网络通信与服务器编程框架是一个开源的 C/C++库，提供了丰富的多种网络服务器编程模型，同时提供了大量的常见网络应用协议，有利于技术人员快速地编写出安全、稳定、高效的服务端程序。"}
{"publishtime": "", "title": "未知", "desc": "暂无简介"}
{"publishtime": "2016/08/22·", "title": "ZooKeeper Watcher 和 AsyncCallback 的区别与实现", "desc": "初学 Zookeeper 会发现客户端有两种回调方式： Watcher 和 AsyncCallback，而 Zookeeper 的使用是离不开这两种方式的，搞清楚它们之间的区别与实现显得尤为重要。"}
{"publishtime": "2016/08/29·", "title": "Java GC 的那些事（2）", "desc": "垃圾收集算法主要有：标记-清除、复制和标记-整理。"}
{"publishtime": "2016/08/22·", "title": "关于若干选举算法的解释与实现", "desc": "本文首先讲解了一般我们自己实现的选举算法流程及伪代码，然后介绍了拜占庭问题，接着简单介绍了通用的Paxos算法的实现原理和开源实现代码，之后重点介绍ZooKeeper ZAB协议及Fast Paxos算法的应用原理和源代码解释，最后对ZAB协议和Paxos算法的区别进行了总结。"}
{"publishtime": "2016/08/29··", "title": "URL 重写新手指南", "desc": "大多数动态网站的URL中都含有变量，以告知站点哪些信息需要展示给用户。比如像下面这个URL，会通知相关的脚本加载编号为7的产品"}
{"publishtime": "", "title": "未知", "desc": "暂无简介"}
{"publishtime": "2016/08/29·,", "title": "C 实现射线检测多边形碰撞", "desc": "以前，使用旋转分离轴实现过， 矩形旋转碰撞,OBB方向包围盒算法实现 。但这个算法，本身有点复杂，并且在边越多的时候计算量增长的会很快，扩展到3D层面会更加的复杂。而且这个算法碰撞后获取碰撞点的坐标有点繁琐。射线检测算法，是一个比较简单清晰的思路，实现起来复杂度也不高，碰撞点也容易获得，扩展到3D世界依然有效。"}
{"publishtime": "2016/08/29·,·", "title": "OOC 面向对象 C 语言编程实践", "desc": "面向对象是一种编程思想，虽然C并没有提供面向对象的语法糖，但仍然可以用面向对象的思维来抽象和使用。这里分享一套C面向对象的写法，可以完成面向对象编程并进行流畅的抽象。这套写法是在实践中不断调整的结果，目前已经比较稳定，进行了大量的功能编写。"}
{"publishtime": "2016/08/29··", "title": "软件项目质量保证：编码规范", "desc": "作为软件开发者，我们可以开发低等级的软件，但不能开发低质量的软件。所以，如何实施质量保证，是我们关注的主要问题之一，而编码规范则是实施质量保证的第一步。"}
{"publishtime": "2016/08/28··", "title": "CTO、技术总监和技术经理有啥区别？", "desc": "最近被 CTO 的故事刷的满屏都是，着实又火了一次。你我都不是吃瓜群众，这事不同角色不同的利益点，肯定态度不一样。作为一个技术老司机，今天和大伙谈谈这三个角色到底有啥不同。"}
{"publishtime": "2016/08/28··", "title": "趣文：如果老公和男朋友他们是程序", "desc": "伯乐在线曾发布一篇趣文《如果老婆和女朋友她们是程序》，无独有偶，有女生版自然也有了男生版。这篇就是就是讲述「男朋友」升级到「老公」后出现的问题。"}
{"publishtime": "2016/08/11··", "title": "十大必知的 Emacs 小技巧", "desc": "下面是我经常使用的Emacs功能以及一些小技巧。"}
{"publishtime": "2016/08/28·", "title": "海量的超赞 Linux 软件", "desc": "这么多软件，进来看看有木有你需要的。"}
{"publishtime": "2016/08/11·,·", "title": "用现代 C++ 写一个高性能的服务器", "desc": "在上篇文章中我提到我曾在一天内就凭借 Facebook 的 Wangle 搭建起一个数据库引擎的原型，在这里我会解释我是如何做到的。到本文最后，你将可以用 Wangle 编写出一个高性能的 C++ 服务器。"}
{"publishtime": "2016/08/28··", "title": "Java GC的那些事（1）", "desc": "与C语言不同，Java内存（堆内存）的分配与回收由JVM垃圾收集器自动完成，这个特性深受大家欢迎，能够帮助程序员更好的编写代码，本文以HotSpot虚拟机为例，说一"}
{"publishtime": "2016/08/10·", "title": "Linux 中 fcntl()、lockf、flock 的区别", "desc": "这三个函数的作用都是给文件加锁，那它们有什么区别呢？首先 flock 和 fcntl 是系统调用，而 lockf 是库函数。lockf 实际上是 fcntl 的封装，所以 lockf 和 fcntl 的底层实现是一样的，对文件加锁的效果也是一样的。后面分析不同点时大多数情况是将 fcntl 和 lockf 放在一起的。下面首先看每个函数的使用，从使用的方式和效果来看各个函数的区别。"}
{"publishtime": "2016/08/28·", "title": "一个屌丝程序猿的人生（35）", "desc": "林萧听到外面女生的咆哮声，还没反应过来是怎么回事，就看到张亮以迅雷不及掩耳之势，打开窗户就跳了下去。"}
{"publishtime": "2016/08/10··", "title": "Linux Netlink 基本使用", "desc": "Linux NetLink 的使用方法和几个程序范例"}
{"publishtime": "2016/08/27·", "title": "我眼中的项目经理", "desc": "我习惯上把项目分为三类：性命攸关的项目（涉及到人身安全的项目，如铁路项目）；使命攸关的项目（具有明确时间节点的企业级信息化项目）；普通项目（中小软件项目）。我相信大多数PM都同我一样，奋战于使命级和普通级项目。"}
{"publishtime": "2016/08/10··", "title": "从好友推荐算法说起", "desc": "社交网络中，好友推荐随处可见，这里探讨好友推荐是如何做的。"}
{"publishtime": "2016/08/27··", "title": "深入浅出 MappedByteBuffer", "desc": "java io操作中通常采用BufferedReader，BufferedInputStream等带缓冲的IO类处理大文件，不过java nio中引入了一种基于MappedByteBuffer操作大文件的方式，其读写性能极高，本文会介绍其性能如此高的内部实现原理。"}
{"publishtime": "2016/08/10·", "title": "敏捷QA，从入门到放弃", "desc": "做敏捷QA五年多，看到了很多人加入，也看到了很多人放弃。其中有经验丰富的测试人员，也有刚刚步入职场的新人。虽然“从入门到精通”是大多数人选择进入这个行业的初衷，但是敏捷QA一些特有的工作方式和要求，会让很多人不适应或者不喜欢，所以很多时候我们看到的是一个个“从入门到放弃”的过程。"}
{"publishtime": "2016/08/27··", "title": "JAVA 面试，你常常忘记它们", "desc": "Java面试中的一些经常被问及的问题，而面试者经常会忽视这些点"}
{"publishtime": "2016/08/10··", "title": "作为 2016 年的开发者，你需要学习 Emacs 或 Vi", "desc": "本文并不是关于Emacs与Vi论战的文章。 我主要是想解释为什么(深入)学习一个低层的文本编辑器对任何软件工程师来说都应该是最重要的事情。"}
{"publishtime": "2016/08/27··", "title": "专门为了面试而学的 Java", "desc": "为了面试去学习了Java，在此做一些记录，其中包括一些基本知识和面试题目。"}
{"publishtime": "2016/08/10·", "title": "SQL Server 中的锁与并发", "desc": "无论是采用哪种并发控制模型，对于事务的理解是至关重要的。事务是SQL Server中任务的基本单位。典型地，它由几个读取和修改数据的SQL命令组成，但是直到COMMIT命令被执行以后，修改操作才被认为是终结了。"}
{"publishtime": "2016/08/27·", "title": "大数据到底是什么鬼", "desc": "大数据这名词听起来很高大上，但其实内里简单的不得了。什么叫大数据呢？就是大量的数据。对的，就是这么简单。大量的数据就是大数据了。"}
{"publishtime": "2016/08/18··", "title": "为什么要用 Node.js", "desc": "面对一个新技术，多问几个为什么总是好的。既然 PHP、Python、Java 都可以用来进行后端开发，为什么还要去学习 Node.js？至少我们应该知道在什么场景下，选择 Node.js 更合适。"}
{"publishtime": "2016/08/16·,·", "title": "狼与哈士奇、Programmer与Coder", "desc": "狼是自然界中真正的掠食者，而哈士奇不过是人类的玩物。两者长得确实很像，就如同 IT 界的 Programmer 和 Coder。如果用狼和哈士奇来隐喻这两种职业，Programmer 无疑是软件业真正的狼。"}
{"publishtime": "2016/08/10··", "title": "ThreadLocal 内存泄露的实例分析", "desc": "上篇是从理论上分析ThreadLocal的内存泄漏问题，今天来分析实际案例。分析问题的过程比结果更重要，理论结合实际才能彻底分析出内存泄漏的原因。案例与分析问题背景在 Tomcat 中，下面的代码都在 webapp 内，会导致WebappClassLoader泄漏，无法被回收。"}
{"publishtime": "2016/08/26··", "title": "简洁高效的 Boyer-Moore 算法", "desc": "子串检索有着很广泛的应用，例如在文档软件中查找关键词，网站过滤敏感词，生物学家查找某种模式的基因组序列等等，很多人听说过著名的KMP算法，Boyer-Moore算法做到的更多，有迹象表明在某些情况下效率是前者的3-5倍，且实现起来更加简单，符合我简单高效的原则。"}
{"publishtime": "2016/08/18·", "title": "架构之路（7）：MVC点滴", "desc": "没有经历过从ASP向ASP.NET转变的同学，是很难理解当WebForm出现时，程序猿世界的欢呼雀跃的。事实上，我也是在Razor出现之后，才勉勉强强的转向MVC，因为看见这个东西就怕"}
{"publishtime": "2016/08/15··", "title": "程序员别迷茫，通往牛逼的道路有很多", "desc": "有个网友给我留言，说看了我的上篇文章感触很深，自己和奶爸的经历类似，也是从其它行业，转到IT圈做了一名程序员。如今已有2年时间，大大小小也参与了一些系统开发项目，可如今感觉机械化的重复写程序很没有意思，再转一次行成本太大，如今年龄也不小了，不想再折腾。不知道下一步该怎么办？"}
{"publishtime": "2016/08/10··", "title": "我泡在 GitHub 的 504 天", "desc": "在 Github 上怒刷代码提交 streak 是一件不可思议的事。 可能是出于打赌、琐碎事或者一股巨大的动力使得你去做这件事。受到《jQuery之父：每天都写点代码》这篇文章和我的好友 Sahat 的鼓舞，我开始每天都写代码，提升自己并使自己成为一名开发者和思考者。"}
{"publishtime": "", "title": "未知", "desc": "暂无简介"}
{"publishtime": "2016/08/18·,·", "title": "std::string 的 Copy-on-Write：不如想象中美好", "desc": "Copy-on-write 是一种很重要的优化手段。它的核心思想是懒惰处理多个实体的资源请求，在多个实体之间共享某些资源，直到有实体需要对资源进行修改时，才真正为该实体分配私有的资源。"}
{"publishtime": "2016/08/15··", "title": "工作六年感悟 (1)：程序员的选择", "desc": "多年前大学毕业时，很多公司来校招。其中最烂俗的一个面试题是：“你希望你之后三到五年的发展是什么？”。我当时的标准回答是：“成为在某一方面能够独当一面的技术专家“。后来经历了几家不同的公司，换了不同的方向，才知道这个真是一个很难的问题。因为兵无常势，什么东西都是在不断的变化……"}
{"publishtime": "2016/08/09··", "title": "ML 工程师需了解的 10 大算法", "desc": "毫无疑问，机器学习/人工智能的子领域在过去几年越来越流行。由于大数据是目前科技领域最热门的趋势，基于这些大规模的数据，机器学习在预测和计算建议方面变得不可思议的强大。我希望这10个有监督和无监督学习算法就足够引起你的兴趣。"}
{"publishtime": "2016/08/18··", "title": "一个潜伏了 5 年的 bug", "desc": "前两天策划反馈某项活动中，理论上大概千分之一中奖率的一个奖品，连续四次被同一个玩家得到了。他之前已经找了几个程序复查过代码，都说没啥问题，但是从概率上讲，肯定是有问题的，所以希望我“为程序员正名”。经过一上午的奋战，我也算不辱使命，找出了这个潜伏了5年的bug，也了解了关于mysql的一个潜规则。"}
{"publishtime": "2016/08/15·", "title": "开源正在蚕食整个世界？", "desc": "「软件正在吞没整个世界」的说法最先见于2011年。2015年，开源软件替代了这个位置。「如果这个理论推开来，软件吞没世界，那么开源软件将取代之，对吗？」2015年初福布斯还不确定地刺探， 但年底他们就非常自信地发文称「开源软件确实正在吞没整个世界」。果真如此么？"}
{"publishtime": "2016/08/09·,·", "title": "用 C++ 开启技术创业之旅", "desc": "我和一个老朋友创立了一家技术公司，通过构建自己的数据库系统来打造一个现代的、基于云的 OLAP 数据集（多维数据存储和检索）。由于我主导技术层面并且我最熟悉 C++，所以决定用它来构建我们的 OLAP 引擎。很多同行觉得很奇怪……我开始质疑自己对使用 C++ 的判断。于是我决定调查一下，看看使用 C++ 是好是坏。"}
{"publishtime": "2016/08/18·", "title": "浅谈 TCP/IP 网络编程中 socket 的行为", "desc": "本文主要总结一下 Linux 下 TCP/IP 网络编程中的 read/write 系统调用的行为。"}
{"publishtime": "2016/08/14··", "title": "直播编程是如何帮我提高效率的", "desc": "最初学习编程时，每当遇到一个 bug，我都会焦头烂额。作为一个新手，我不知道如何有效地调试代码。如果能有人领路人带我，那应该会更容易些……"}
{"publishtime": "2016/08/09·", "title": "分布式追踪系统，最佳核心设计实践", "desc": "端对端追踪系统获取单个分布式系统组件内部、组件之间，因果活动的工作流程。随着分布式系统规模和复杂性的不断增加，这样的追踪系统逐渐成为诸如诊断和资源记录等管理任务的重要工具。鉴于我们过去的构建和使用的端对端基础设施，本文提炼了核心设计维度，来阐述追踪功能的重要用例。"}
{"publishtime": "2016/08/18·", "title": "聊聊高并发系统之降级特技", "desc": "本文将详细聊聊降级。当访问量剧增、服务出现问题（如响应时间慢或不响应）或非核心服务影响到核心流程的性能时，仍然需要保证服务还是可用的，即使是有损服务。系统可以根据一些关键数据进行自动降级，也可以配置开关实现人工降级。"}
{"publishtime": "2016/08/14··", "title": "从拖延到高效，我推荐这 7 本书", "desc": "最近几个月一直在看一些非技术类书籍（大约50本左右），感觉收获非常大，从中选择出来比较经典的改变拖延、高效学习的书籍，希望给大家提供一些参考。"}
{"publishtime": "2016/08/09·", "title": "EntityFramework、Dapper vs 草根框架性能大比拼，数据库访问哪家强？", "desc": "EntityFramework 是微软官方提供的 ORM，俗称 EF，拥有坚不可摧的后台，可谓无人不知，无人不哓。其对 Linq 完美支持，功能丰富，但 EntityFramework Core 之前的版本，一直被业界人员贴上笨重、不可控、性能差的标签，很多人 Hold 不住它。"}
{"publishtime": "2016/08/18·", "title": "聊聊高并发系统之限流特技", "desc": "缓存的目的是提升系统访问速度和增大系统能处理的容量，可谓是抗高并发流量的银弹；而降级是当服务出问题或者影响到核心流程的性能则需要暂时屏蔽掉，待高峰或者问题解决后再打开；而有些场景并不能用缓存和降级来解决，比如稀缺资源、写服务、频繁的复杂查询，因此需有一种手段来限制这些场景的并发/请求量，即限流。"}
{"publishtime": "2016/08/14··", "title": "C++11 新特性之智能指针", "desc": "C++11新特性介绍的第五部分，涉及到智能指针的相关内容：shared_ptr、unique_ptr 和 weak_ptr。"}
{"publishtime": "2016/08/08·", "title": "SQL 注入攻防入门详解", "desc": "所谓SQL注入式攻击，就是攻击者把SQL命令插入到Web表单的输入域或页面请求的查询字符串，欺骗服务器执行恶意的SQL命令。在某些表单中，用户输入的内容直接用来构造动态SQL命令，或作为存储过程的输入参数，这类表单特别容易受到SQL注入式攻击"}
{"publishtime": "2016/08/18·", "title": "用 Nginx + Lua(OpenResty) 开发高性能 Web 应用", "desc": "通过本文来认识下 Nginx、Lua、ngx_lua 模块和 ngx_lua 到底能开发哪些类型的 web 应用。"}
{"publishtime": "2016/08/13··", "title": "C++11 新特性之容器相关特性", "desc": "这是C++11新特性介绍的第四部分，涉及到C++11这次更新中与容器有关的新特性。"}
{"publishtime": "2016/08/17··", "title": "比尔·盖茨和乔布斯他们的编程水平如何？", "desc": "关于盖茨和乔布斯他俩的技术水平如何，类似的问题伯小乐以前也在网上看到过。最近发现 2013 年已有人在 Quora 上发帖讨论。伯乐在线摘译了 6 位国外网友的回复。"}
{"publishtime": "2016/08/08··", "title": "Java JDK 动态代理使用及实现原理分析", "desc": "代理是一种常用的设计模式，其目的就是为其他对象提供一个代理以控制对某个对象的访问。代理类负责为委托类预处理消息，过滤消息并转发消息，以及进行消息被委托类执行后的后续处理"}
{"publishtime": "2016/08/17·", "title": "应用多级缓存模式支撑海量读服务", "desc": "本文所有内容是跟读服务缓存相关，不会涉及写服务数据的缓存。本文也不考虑内容型应用前置的CDN架构。本文也不会涉及缓存数据结构优化、缓存空间利用率跟业务数据相关的细节问题，主要从架构和提升命中率等层面来探讨缓存方案。本文将基于多级缓存模式来介绍下应用缓存时需要注意的问题和一些解决方案，其中一些方案已经实现，而有一些也是想使用来解决痛点问题。"}
{"publishtime": "2016/08/08··", "title": "程序员雷霄骅的离去，给我们留下了什么？", "desc": "悼那个年仅25岁却猝然离世的资深程序员雷霄骅，愿那个世界里的你不用再coding。"}
{"publishtime": "2016/08/12··", "title": "Bug 引发的 18 次重大事故", "desc": "无论工程师做了多少枯燥的测试工作，无论他们熬了多少不眠之夜在编程，但最终他们得到的是：会导致软件彻底出问题的 bug。你知道吗，由于软件故障（bug），美国经济每年在浪费生产力、返工和实际毁坏上损失了数十亿美元。"}
{"publishtime": "2016/08/17·", "title": "电商前端交易型系统设计原则", "desc": "从毕业到现在已经快 7 年开发经验了，做过基础用户系统、积分商城、偷菜游戏、论坛、博客等等；也一个人全栈开发在线视频网站，也开发过几万、几十万、几千万、几个亿不同量级的系统，踩过不少坑，也学到许多经验。"}
{"publishtime": "2016/08/08·", "title": "3D UI 场景中如何把 X Y 平面的尺寸映射为屏幕像素", "desc": "本文总结所述的3D UI应用场景并非在游戏中，而是注重在GUI应用上（类似QT等），即使用3D绘图技术实现的一套类似2D UI一样效果的引擎，由于UI系统是3D的，故能实现3D的动画效果。把3D场景中的XY平面的尺寸映射为平面像素一一对应的优点，是能保持并延续我们在2D开发时候的习惯，方便精准地控制UI控件在整个屏幕上的位置布局。"}
{"publishtime": "2016/08/12··", "title": "Nginx 负载均衡策略之加权轮询分析", "desc": "nginx 做为方向代理时，能够为后端服务器提供负载均衡的功能，其中加权轮询策略使是其默认的负载均衡策略。直观上就是将来自客户的请求按照每个服务器的权值进行负载均衡（权值大的服务器处理的请求也应该多）。那么对于每次客户的请求如何选取后端服务器才能确保这种均衡呢？"}
{"publishtime": "2016/08/17·", "title": "出色的技术分享是如何炼成的？", "desc": "有人说，如果你想掌握好一门技术，那么最好的方式就是去当老师，去教会别人这门技术。在教别人的过程中，你必须要去深入的了解这门技术的方方面面，同时还要思考怎么才能让别人理解。每一个做过的人都知道，这要比自己学习更难。"}
{"publishtime": "2016/08/08·", "title": "如何使用 C++ 11 实现 C# 属性概念设计", "desc": "本文介绍的是博主在工作过程中封装的C++实现属性的方法，不敢说多好用，但从使用形式上看，个人觉得与我了解到的方案中，博主实现的方案有易用且非常接近C#的使用风格、代码量少，很容易看懂等特点。"}
{"publishtime": "2016/08/12··", "title": "诠释 Linux 中“一切都是文件”概念和相应的文件类型", "desc": "在 Unix 和它衍生的比如 Linux 系统中，一切都可以看做文件。虽然它仅仅只是一个泛泛的概念，但这是事实。如果有不是文件的，那它一定是正运行的进程。 "}
{"publishtime": "2016/08/17··", "title": "玩转 Markdown，你需要用到这几个工具", "desc": "随着 WordPress 和静态网站的流行，Markdown 被用的越来越多。"}
{"publishtime": "2016/08/08·", "title": "C++ 11 常用特性的使用经验总结", "desc": "文章是在学习的基础上，加上博主在日常工作中的使用C++11的一些总结、经验和感悟，整理出来，分享给大家，希望对各位读者有帮助，文章中的总结可能存在很多不完整或有错误的地方，也希望读者指出。大家可以根据如下目录跳到自己需要的章节。"}
{"publishtime": "2016/07/25·", "title": "Linux sed命令详解", "desc": "sed 是一种在线编辑器，它一次处理一行内容。处理时，把当前处理的行存储在临时缓冲区中，称为“模式空间”（pattern space），接着用sed命令处理缓冲区中的内容，处理完成后，把缓冲区的内容送往屏幕。接着处理下一行，这样不断重复，直到文件末尾。"}
{"publishtime": "2016/08/12·", "title": "一位女军官的 Linux 探索之路", "desc": "不管怎么说，Nicky 看起来都不太引人注目。她已经三十岁了，却决定在离开学校多年后回到学校学习。她在海军待了六年，后来接受了一份老友给她的新工作，想试试这份工作会不会比她在军队的工作更有前途。这种换工作的事情在战后的军事后勤处非常常见。"}
{"publishtime": "2016/08/17·,", "title": "C++11 新特性之 Class", "desc": "这是C++11新特性介绍的第六部分，涉及到 Class 的相关内容。"}
{"publishtime": "", "title": "未知", "desc": "暂无简介"}
{"publishtime": "2016/07/25··", "title": "关系型数据库表结构的两个设计技巧", "desc": "关系型数据库表结构的设计，有下面两个设计技巧：① 物理主键作为关联的外键；② 使用乐观锁更新依赖之前状态的记录。"}
{"publishtime": "2016/08/12·", "title": "敏捷实践Showcase的七宗罪", "desc": "Showcase就是开发团队把开发好的功能给客户的Product Owner（以下简称PO）等业务相关人员演示，以获取他们对所开发系统的反馈，是敏捷开发流程中的一个实践，一般的频率是一个迭代一次，也可以根据项目具体情况做调整。Showcase的目的是做功能演示，这同时也是展示开发团队面貌的时刻，其重要性不言而喻，但在我经历的项目中，总能看到一些不是很理想的地方。"}
{"publishtime": "2016/08/16··", "title": "为什么几乎不可能估测项目时间？", "desc": "聊聊项目延迟的那些事。通常情况下，直到你掉进去，你才知道你已入坑！"}
{"publishtime": "2016/07/25·", "title": "LVS：三种负载均衡方式比较+另三种负载均衡方式", "desc": "介绍一下LVS的三种负载均衡方式和另外三种负载均衡方式"}
{"publishtime": "2016/08/12··", "title": "不思量自难忘：我的 10 年程序生涯", "desc": "总结反思一下这十几年的生活，为以迎接以后生活和工作的挑战做好准备。如果有一些现在还在迷茫的年轻人，看到我的这篇文章，能够取长补短，吸取经验教训，少走弯路，那就是最美好不过的事情了。"}
{"publishtime": "2016/08/16·", "title": "远程方法调用（RMI）原理与示例", "desc": "程方法调用（RMI）顾名思义是一台机器上的程序调用另一台机器上的方法。这样可以大致知道RMI是用来干什么的，但是这种理解还不太确切。RMI是Java支撑分布式系统的基石，例如著名的EJB组件。RMI是远程过程调用（RPC）的一种面向对象实现，RMI底层是通过socket通信和对象序列化技术来实现的。"}
{"publishtime": "2016/07/25··", "title": "这里有一份面经，请查收（3）", "desc": "经过前面两次的面试，这里就马上转到第三家公司了的面试了，这里简称 B，工作地点和上一篇所讲述的 W 公司在一个城市，是面完 W 之后第二天去的，说出名字的话大多小伙伴都听过或者用过其服务，具体是什么要靠你们的悟性了。"}
{"publishtime": "2016/08/12·", "title": "详解 SQL 集合运算", "desc": "本篇主要是对集合运算中并集、交集、差集运算基础的总结。集合运算包含四种：1.并集运算，2.交集运算，3.差集运算"}
{"publishtime": "2016/08/16·", "title": "JUnit 单元测试", "desc": "JUnit带给我们的不仅是开发效率、代码质量的提高，更是一种思想的提高，现在都在讲测试驱动开发、回归质量大概就是这种思想。"}
{"publishtime": "2016/07/25··", "title": "浅谈程序员的英语学习", "desc": "作为在中国工作的程序员，不懂得英语似乎也不妨碍找到好工作，升职加薪。但程序员这个工种则稍有不同，因为程序，尤其是高级语言，基本上都是由英语和数字表达式构成的。英语对于程序员十分重要。"}
{"publishtime": "2016/08/12·", "title": "C++11 新特性之 lambda", "desc": "这是C++11新特性介绍的第三部分，涉及到C++11这次更新中较为重要的lambda表达式。"}
{"publishtime": "2016/08/16·", "title": "软件项目免坑指南", "desc": "“谁也无法改变现状，唯有无数程序员血洒大地，才能使项目重建天日。”这一点也不夸张，软件项目做烂了就是个坑，参与者也不过是填坑的。就像是在魔兽世界战场遇到国家队一样，你赢也赢不了，出也出不去。"}
{"publishtime": "2016/07/25·", "title": "敏捷估算：点之殇", "desc": "作为BA，估算会议是我目前所在项目的日常工作之一，其目的是对近期即将开发的story进行大小的预估。组织了几次估算会议后，我发现会议常常超时很久，team会花大量时间去讨论估计结果是否足够准确。实际上既然是估算，就意味着误差，那么花过多的时间在确保准确性上很可能意味着浪费时间。"}
{"publishtime": "2016/08/11··", "title": "C++11 新特性之类型推断与类型获取", "desc": "这是C++11新特性介绍的第二部分，涉及到C++11这次更新中较为重要的特性类型推断(auto)与类型获取（decltype）。"}
{"publishtime": "2016/08/16··", "title": "IT 已成为最疯狂的加班行业，没有之一", "desc": "据说，某互联网公司招了个日本人做研发，上班第一天就对部门同事说：“我在日本工作时是个加班狂，每天都很晚回家，希望大家跟上我的步伐。”一个月之后他辞职回日本了，扔下一句话：“你们这样加班，经常睡在公司是很不人道的。”"}
{"publishtime": "2016/07/25··", "title": "LeetCode 刷题指南（1）：为什么要刷题", "desc": "虽然刷题一直饱受诟病，不过不可否认刷题确实能锻炼我们的编程能力，相信每个认真刷题的人都会有体会。"}
{"publishtime": "2016/08/11··", "title": "种树的最好时间是十年前，其次是现在", "desc": "最近经常被朋友问到的两个问题："}
{"publishtime": "2016/08/16·", "title": "浅析 I/O 模型及其设计模式", "desc": "I/O在软件开发中的重要性无需多言，无论是在操作系统、网络协议、DBMS这种底层支撑软件还是在移动APP，大型网站服务器等应用软件的开发中都是最核心最重要的部分。本文就简要分析各类I/O模型的演进、基本原理、应用方法、优缺点及其使用场景"}
{"publishtime": "2016/07/25··", "title": "换一个灯泡，要多少个程序员？", "desc": "换一个灯泡，要多少个______？也行你之前听过类似的笑话，但类似笑话的 IT 技术版，你八成没看到过这么全的。不信你点开来看。"}
{"publishtime": "2016/08/11·", "title": "数据仓库中如何使用索引", "desc": "数据仓库的索引是个棘手的问题。如果索引太多，数据插入很快但是查询响应就会很慢。如果太多索引，数据导入就很慢并且数据存储空间更大，但是查询响应更快。数据库中索引的作用就是加快查询速度，不论是传统数据库还是数据仓库。"}
{"publishtime": "", "title": "未知", "desc": "暂无简介"}
{"publishtime": "2016/07/25·", "title": "细数 20 世纪最伟大的十大算法", "desc": "蒙特卡罗方法、单纯形法、Krylov 子空间迭代法、矩阵计算的分解方法、Fortran优化编译器、计算矩阵特征值的QR算法、快速排序算法、快速傅立叶变换、整数关系探测算法、快速多极算法"}
{"publishtime": "2016/08/11·,", "title": "游戏热更新杂谈", "desc": "热更新的内容可以是美术资源，可以是代码，但相对来说，美术资源的更新不会受到约束，代码实际上是重灾区。本文介绍的主要是代码热更新。"}
{"publishtime": "2016/07/24·", "title": "一个屌丝程序猿的人生（32）", "desc": "听到“程序员”三个字，林萧原本刚刚萌生的一点倦意，瞬间就消失的无影无踪。"}
{"publishtime": "", "title": "未知", "desc": "暂无简介"}
{"publishtime": "2016/07/24·", "title": "MySQL 最佳实践：空间优化", "desc": "空间问题也是一个比较复杂的问题，但是如果我们能够在系统设计之初遵循一些最佳实践，那么我们还是能够很好的处理掉这些问题。"}
{"publishtime": "2016/07/23·", "title": "linux sort,uniq,cut,wc命令详解", "desc": "sort 命令对 File 参数指定的文件中的行排序，并将结果写到标准输出。如果 File 参数指定多个文件，那么 sort 命令将这些文件连接起来，并当作一个文件进行排序。"}
{"publishtime": "2016/07/23·", "title": "MySQL 锁问题最佳实践", "desc": "最近一段时间处理了较多锁的问题，包括锁等待导致业务连接堆积或超时，死锁导致业务失败等，这类问题对业务可能会造成严重的影响，没有处理经验的用户往往无从下手。下面将从整个数据库设计，开发，运维阶段介绍如何避免锁问题的发生，提供一些最佳实践供RDS的用户参考。"}
{"publishtime": "2016/07/22·", "title": "MySQL 最佳实践： RDS 只读实例延迟分析", "desc": "只读实例是目前 RDS 用户实现数据读写分离的一种常见架构，用户只需要将业务中的读请求分担到只读节点上，就可以缓解主库查询压力，同时也可以把一些 OLAP 的分析查询放到另外的只读节点上，减小复杂统计查询对主库的冲击"}
{"publishtime": "2016/07/22··", "title": "4 张 GIF 图帮助你理解二叉查找树", "desc": "4 张 GIF 图帮助你理解二叉查找树"}
{"publishtime": "2016/07/22·", "title": "Shell脚本编程总结及速查手册", "desc": "Shell是一种编程语言, 它像其它编程语言如: C, Java, Python等一样也有变量/函数/运算符/if语句/循环控制/… 但在开始之前, 我想先理清Shell语言与Shell之间的关系"}
{"publishtime": "2016/07/22·", "title": "15款你可能不知道的精致Mac应用", "desc": "从大四下开始买了人生第一台Mac，到现在也有两年多了，期间发现了很多精致的APP，但可惜的是很多并不为人所知，今天在这里向大家介绍一下，相信你也会喜欢。"}
{"publishtime": "2016/08/03·", "title": "深入解析SQL Server并行执行原理及实践(下)", "desc": "谈完并行执行的原理,咱们再来谈谈优化,到底并行执行能给我们带来哪些好处,我们又应该注意什么呢,下面展开."}
{"publishtime": "2016/07/22·", "title": "内存池技术畅想", "desc": "本文将介绍几种常用的内存池技术的实现，这是我最近学习各大开源的内存池技术遗留下来的笔记，其主要内容包括：STL 内存池以及类 STL 内存池实现、Memcached 内存池实现、固定规格内存池实现 、Nginx 内存池实现 "}
{"publishtime": "2016/08/03·", "title": "深入解析SQL Server并行执行原理及实践(上)", "desc": "在成熟领先的企业级数据库系统中,并行查询可以说是一大利器,在某些场景下他可以显著的提升查询的相应时间,提升用户体验.如SQL Server, Oracle等, Mysql目前还未实现,而PostgreSQL在2015实现了并行扫描,相信他们也在朝着更健壮的企业级数据库迈进."}
{"publishtime": "2016/08/03··", "title": "开发者 MAC 电脑里的十八般兵器", "desc": "作为一名开发者，无论是移动端 (Android/iOS)，前端 (H5)，后端 (PHP/JAVA/GO) 或者全栈，运用常用工具辅助开发，提高编程，调试，以及抓八阿哥的效率。如同古人习武，十八般兵器，样样精通，方能小有成就。"}
{"publishtime": "2016/07/22··", "title": "这里有一份面经，请查收（2）", "desc": "这里讲述下第二家公司的面试，这是一家大型互联网公司，简称W，一般像博主这样的传统行业去跳到这种公司简直是要跪舔的节奏，所以从一开始就带着一份敬仰之情去面试。由于和博主不在一个城市，所以一面选择电面，二三面技术面去了公司face to face, 最后一面是HR面。"}
{"publishtime": "2016/08/03··", "title": "18 个锻炼编程技能的网站", "desc": "要学习编程，你可以通过交互式平台或者书本，随便一种你觉得最适合和容易的学习方式。但是，有时候这样还不够，我们想要练习一些新的东西。"}
{"publishtime": "2016/07/22·", "title": "分布式系统设计权衡之 CAP", "desc": "分布式系统设计在评审时，争论得最多的地方，其实也就是著名的 cap 理论，本文也主要对 CAP 理论加以自己的理解和应用。"}
{"publishtime": "2016/08/03··", "title": "Linux 环境多线程编程基础设施", "desc": "编译器有时候为了优化性能，会将一些变量的值缓存到寄存器中，因此如果编译器发现该变量的值没有改变的话，将从寄存器里读出该值，这样可以避免内存访问。"}
{"publishtime": "", "title": "未知", "desc": "暂无简介"}
{"publishtime": "2016/08/03·", "title": "理解 glibc 内存分配器的机制与实现", "desc": "一直以来，我都沉迷于堆内存的一切。脑子里一直充斥着这些问题：怎样从内核获取堆内存？内存管理的效率如何?是什么在管理它？内核？库函数？还是应用程序？堆内存可以扩展吗？直到最近我才有时间思考并理解这些问题。所以想在本文和大家分享我的思考过程"}
{"publishtime": "2016/08/02·", "title": "Netty5 HTTP协议栈浅析与实践", "desc": "前段时间，工作上需要做一个针对视频质量的统计分析系统，各端（PC端、移动端和 WEB端）将视频质量数据放在一个 HTTP 请求中上报到服务器，服务器对数据进行解析、分拣后从不同的维度做实时和离线分析。（ps：这种活儿本该由统计部门去做的，但由于各种原因落在了我头上， 具体原因略过不讲……）"}
{"publishtime": "2016/08/02·", "title": "图解：二叉搜索树算法", "desc": " 二叉树是由节点和边构成，储存元素的集合。节点分根节点、父节点和子节点的概念。"}
{"publishtime": "2016/08/02·", "title": "构建高可用 ZooKeeper 集群", "desc": "ZooKeeper 是 Apache 的一个顶级项目，为分布式应用提供高效、高可用的分布式协调服务，提供了诸如数据发布/订阅、负载均衡、命名服务、分布式协调/通知和分布式锁等分布式基 础服务。由于 ZooKeeper 便捷的使用方式、卓越的性能和良好的稳定性，被广泛地应用于诸如 Hadoop、HBase、Kafka 和 Dubbo 等大型分布式系统中。"}
{"publishtime": "2016/08/02·", "title": "编写高质量代码", "desc": "本文介绍如何编写高质量的C++代码。从微观角度，以一个实际的例子，从正确、高效、易读等特性着手，介绍如何编写高质量的代码。从宏观出发，从软件开发流程入手，着重介绍其中的几个方面，包括代码规范、Code Review、测试等。"}
{"publishtime": "2016/08/02··", "title": "NASA 的 10 大编程规则", "desc": "那些为 NASA 工作的世界顶级程序员，在开发安全关键代码的时候遵守着一套准则。它们就像车里的安全带：刚开始用会有点不舒服，但是过了一段时间就会成为一种习惯，你会无法想象不使用它们的日子。"}
{"publishtime": "2016/08/01·", "title": "计算机程序的思维逻辑 (2) ：赋值", "desc": "上节我们说了数据类型和变量，通过声明变量，每个变量赋予一个数据类型和一个有意义的名字，我们就告诉了计算机我们要操作的数据。"}
{"publishtime": "2016/08/01··", "title": "JDK8 Stream API中Collectors中toMap方法的问题以及解决方案", "desc": "JDK8 Stream API中Collectors中toMap方法的问题"}
{"publishtime": "2016/08/01·", "title": "“懒惰” Linux 管理员的 10 个关键技巧", "desc": "如何成为一名效率更高的系统管理员"}
{"publishtime": "2016/08/01·", "title": "Linux 系统中一些针对文件系统的节能技巧", "desc": "文件系统是 Linux 系统的重要组成部分，文件系统的配置和使用对整个系统的运行有着重要的影响。本文介绍了一些 Linux 系统上对文件系统的配置技巧，达到节省能耗并目的，有的技巧还可以提高系统的性能。虽然文件系统的节能成效比起 CPU 和显示器的节能来显得比较轻微，但是积少成多，绿色的地球将靠我们一点一滴来完成。"}
{"publishtime": "2016/08/01·", "title": "计算机程序的思维逻辑 (1)：数据和变量", "desc": "计算机就是个机器，这个机器主要由CPU、内存、硬盘和输入输出设备组成。计算机上跑着操作系统，如Windows或Linux，操作系统上运行着各种应用程序，如Word, QQ等。"}
{"publishtime": "2016/08/01·,", "title": "如何在 Linux 下检测内存泄漏", "desc": "本文针对 linux 下的 C++ 程序的内存泄漏的检测方法及其实现进行探讨。其中包括 C++ 中的 new 和 delete 的基本原理，内存检测子系统的实现原理和具体方法，以及内存泄漏检测的高级话题。作为内存检测子系统实现的一部分，提供了一个具有更好的使用特性的互斥体（Mutex）类。"}
{"publishtime": "2016/08/08·", "title": "SQL Server 高频高并发访问中的键查找死锁解析", "desc": "死锁对于DBA或是数据库开发人员而言并不陌生，它的引发多种多样。一般而言，数据库应用的开发者在设计时都会有一定的考量进而尽量避免死锁的产生。但有时因为一些特殊应用场景如高频查询，高并发查询下由于数据库设计的潜在问题，一些不易捕捉的死锁可能出现从而影响业务。这里为大家介绍由于设计问题引起的键查找死锁及相关的解决办法。"}
{"publishtime": "2016/08/01·,", "title": "面向 C++ 的测试驱动开发", "desc": "用测试的方法驱动开发，这个概念的提出已经很长时间了，但测试驱动开发在 C 和 C++的应用和实践却比较晚，本文用一个简单项目的实例说明如何在 C 和 C++的开发过程中，应用测试驱动开发的理念，从需求定义，代码测试案例设计到开发实现这些案例定义的需求，展现了测试驱动开发的魅力。"}
{"publishtime": "2016/08/08··", "title": "一个屌丝程序猿的人生（34）", "desc": "从学校归来，林萧再次进入了一个人看视频的生活，这才是培训的主旋律。"}
{"publishtime": "2016/08/01·", "title": "Github上的有趣事实：\"BigQuery驱动下的数据世界\"", "desc": "近日看到了Google的BigQuery技术，用类似SQL的语言来做一些数据的分析。而Github也加入了进来。闲来无事，就去体验了一把。"}
{"publishtime": "2016/08/08··", "title": "新出炉的 100+ 篇技术热文，在微信热传，别错过哦", "desc": "本文收录的文章来自 10 个热门的技术类微信公众号。我们从每个公号中选出了 2016 年 7 月最热门的 10+ 篇技术文章，共 100+ 篇精华。涉及的技术包括：Python、Linux、Java、Web前端、数据库、C/C++、安卓开发、iOS 开发和算法。"}
{"publishtime": "2016/08/01·", "title": "Expert 诊断优化（1）：你的 CPU 高么？", "desc": "现在很多用户被数据库的慢的问题所困扰，又苦于花钱请一个专业的DBA成本太高。软件维护人员对数据库的了解又不是那么深入，所以导致问题迟迟不能解决，或只能暂时解决不能得到根治。开发人员解决数据问题基本又是搜遍百度各种方法尝试个遍，可能错过诊断问题的最佳时机，又可能尝试一堆方法最后无奈放弃。"}
{"publishtime": "2016/08/07··", "title": "史上最全的开发和设计资源大全", "desc": "Awesome 资源大全包括了：Java、Python、JavaScript、iOS、Android、CSS、C 语言、C++、MySQL、机器学习、系统管理员、DotNet、PHP，还有设计师资源。"}
{"publishtime": "", "title": "未知", "desc": "暂无简介"}
{"publishtime": "2016/08/07·", "title": "深入分析 ThreadLocal 内存泄漏问题", "desc": "ThreadLocal 的作用是提供线程内的局部变量，这种变量在线程的生命周期内起作用，减少同一个线程内多个函数或者组件之间一些公共变量的传递的复杂度。但是如果滥用 ThreadLocal，就可能会导致内存泄漏。"}
{"publishtime": "2016/08/06·", "title": "双机高可用、负载均衡、MySQL(读写分离、主从自动切换)架构设计", "desc": "网友来信说帮忙实现这样一个架构：只有两台机器，需要实现其中一台死机之后另一台能接管这台机器的服务，并且在两台机器正常服务时，两台机器都能用上。于是设计了如下的架构。"}
{"publishtime": "2016/08/06··", "title": "程序员正在调 Bug：15 张令人喷饭的 IT 趣图（第5季）", "desc": "主页君给各位汇总近期「程序员的那些事」上推荐的精彩趣图/漫画。"}
{"publishtime": "2016/08/05··", "title": "PHP中“＝＝”运算符的安全问题", "desc": "在这篇文章中，我们将会对PHP应用程序中经常会出现的一些问题进行深入地分析，尤其是当我们使用“==”(比较运算符)来进行字符串比较时，可能会出现的一些安全问题。"}
{"publishtime": "2016/08/05·", "title": "HTTP 的长连接和短连接", "desc": "本文总结分享网络编程中涉及的长连接、短连接概念。"}
{"publishtime": "2016/08/05·", "title": "我是怎样使用 Emacs 的", "desc": "本文来描述我是如何在 Mac 和 Linux 上使用 Emacs 的，即我的 Emacs 工作流。我使用这套配置一年多了，一直以来这套配置都工作的很好，几乎不需要怎么调整。我现在用的是 Emacs24，但是这套配置对更早些版本的Emacs也适用。"}
{"publishtime": "2016/08/05·", "title": "SQL Server 内存数据库原理解析", "desc": "关系型数据库发展至今,在寻求自身突破发展的过程中,内存与分布式数据库是当下最流行的主题,这与性能及扩展性在大数据时代的需求交相辉映.SQL Server作为传统的数据库也在最新发布版本SQL Server 2014中提供了新利器 SQL Server In-Memory OLTP,使得其在OLTP系统中的性能有了几十倍甚至上百倍的性能提升."}
{"publishtime": "2016/08/04··", "title": "Vim 用户的大脑形态", "desc": "我曾经观看过小提琴家非常有激情地拉弦演奏，我有了这种想法：也许我投入到文本编辑器中的脑细胞数量和他为投入所喜好的乐器的演奏中差不多吧。我还有种奇异的想象，当他独奏的时候, 脑中的核磁共振图和我在使用 VIM 中操控代码的的图像也许不会相差太大吧？"}
{"publishtime": "2016/08/04·", "title": "从一次 FULL GC 卡顿谈对服务的影响", "desc": " Full GC 的时间和次数是管理 java 的应用服务不得不考虑的问题，高吞吐量和低停顿是追求高质量服务重要目标，从而会有根据业务的特点衍生出各种垃圾回收器。在实战中如何根据如何使用 ParNew ，CMS 等回收器和配置各种参数，要在理论结合实践中不断优化。"}
{"publishtime": "2016/08/04·", "title": "Vim 起步的五个技巧", "desc": "我使用了这么多年的 Linux ，我会的只是 Vim 的最最基本的操作。我的技能水平只能让我在终端使用 Vim 修改文本，但是它并没有任何一个我想象中强大的文本处理功能。这样我完全无法用 Vim 发挥出胜出 Pico 和 Nano 的能力。 "}
{"publishtime": "2016/08/04··", "title": "分布式队列编程：模型、实战", "desc": "作为一种基础的抽象数据结构，队列被广泛应用在各类编程中。大数据时代对跨进程、跨机器的通讯提出了更高的要求，和以往相比，分布式队列编程的运用几乎已无处不在。"}
{"publishtime": "2016/08/04··", "title": "这里有一份面经 ，请查收（4）", "desc": "这里我连续介绍三家公司的面试"}
{"publishtime": "2016/08/04·", "title": "数学在计算机图形学中的应用", "desc": "“学习计算机图形学需要多少的数学？”这是初学者最经常问的问题。狭义的计算机图形学指的是传统的三维建模，绘制，动画等，而广义的计算机图形学还包括计算机图像处理，视频处理，计算机视觉和机器学习等领域。"}
{"publishtime": "2016/07/18·", "title": "使用事件驱动模型实现高效稳定的网络服务器程序", "desc": "事件驱动为广大的程序员所熟悉，其最为人津津乐道的是在图形化界面编程中的应用；事实上，在网络编程中事件驱动也被广泛使用，并大规模部署在高连接数高吞吐量的服务器程序中，如 http 服务器程序、ftp 服务器程序等。"}
{"publishtime": "2016/08/04·", "title": "浅析数据一致性", "desc": "在数据有多分副本的情况下，如果网络、服务器或者软件出现故障，会导致部分副本写入成功，部分副本写入失败。这就造成各个副本之间的数据不一致，数据内容冲突。"}
{"publishtime": "2016/07/18·", "title": "使用 libevent 和 libev 提高网络应用性能", "desc": "许多服务器部署面对的最大问题之一是必须能够处理大量连接。无论是通过构建基于云的服务来处理网络通信流，还是把应用程序分布在 IBM Amazon EC 实例上，还是为网站提供高性能组件，都需要能够处理大量并发连接。"}
{"publishtime": "2016/08/04·", "title": "一个屌丝程序猿的人生（33）", "desc": "林萧到的时候，离上课还有半个多小时，趁着等待的时间，林萧在附近的早餐小卖铺，买了个鸡蛋饼。"}
{"publishtime": "2016/07/18·", "title": "Linux 下 C++ 异常处理技巧", "desc": "处理 C++ 中的异常会在语言级别上遇到少许隐含限制，但在某些情况下，您可以绕过它们。学习各种利用异常的方法，您就可以生产更可靠的应用程序。"}
{"publishtime": "2016/08/04·,·", "title": "你在用哪种编程字体？", "desc": "程序员喜欢定制自己的开发环境。他们会安装酷酷的主题，顺手的插件。不过，通常这并不包括定制字体。事实上，我猜很多程序员都不知道正使用的编辑器中的字体。在本文中，我们将看看各式编辑器和 IDE 所使用的默认字体。"}
{"publishtime": "2016/07/18·", "title": "聊聊阻塞与非阻塞、同步与异步、I/O模型", "desc": "在进行网络编程时，我们常常见到同步(Sync)/异步(Async)，阻塞(Block)/非阻塞(Unblock)四种调用方式。"}
{"publishtime": "", "title": "未知", "desc": "暂无简介"}
{"publishtime": "2016/07/18·", "title": "什么样的人适合做程序员?", "desc": "我曾经苦苦思索这个问题，直到我在SICP上看到了答案。说的白话一点就是，能像机器一样思考的人就适合做程序员。 那么“计算机”这台机器是怎么思考的呢？这里是我的答案："}
{"publishtime": "2016/07/18·", "title": "大型系统重构的步骤简单梳理", "desc": "随着公司业务不断的发展，用户量不断的增加，对系统的性能要求会越来越高，而原来仓促做出来的项目，其不合理性的地方就会不断的暴露出来。大家如果接触过非常赚钱的互联网产品，一定会知道产品的一个小小的bug，公司就可能损失好几百万甚至几个亿。"}
{"publishtime": "2016/07/18·", "title": "如何实现自己的目标？看看国外10位各界大咖的见解", "desc": "Jourdan 通过社交媒体联系了 10 位来自不同行业的大咖们，请他们谈谈对如何实现自己目标的见解，这让我从中获得不少启发。"}
{"publishtime": "2016/07/18·,", "title": "PHP 实战之设计模式：PHP 中的设计模式", "desc": "本文主要讨论下Web开发中，准确而言，是PHP开发中的相关的设计模式及其应用。有经验的开发者肯定对于设计模式非常熟悉，但是本文主要是针对那 些初级的开发者。"}
{"publishtime": "2016/07/18·,·", "title": "10个值得深思的PHP面试问题", "desc": "文章所罗列的问题虽然看似简单，但是每个背后都涵盖了一个或几个大家容易忽视的基础知识点，希望能够帮助到你的面试和平时工作。"}
{"publishtime": "2016/07/18··", "title": "从业 30 年的女系统管理员的经验分享", "desc": "回顾我的系统管理员生涯，我必须要说这是一段不同寻常的日子。它当然不是做 30 多年重复的事。正相反，技术和工作内容随着时间的推移经历了难以想象的改变。我所管理的硬件中有着大量的升级改进，同时总是有很多新的工具要去学习和使用。"}
{"publishtime": "2016/07/17·", "title": "视障程序员是如何编程的？", "desc": "有网友看过谷歌盲人科学家 Raman 故事后在 Quora 上问「有视觉障碍的程序员是怎样编程的？」，伯乐在线摘译了 3 位网友的分享，其中 2 位就是盲人程序员。"}
{"publishtime": "2016/07/16··", "title": "Nginx 工作原理和优化、漏洞", "desc": "Nginx由内核和模块组成，其中，内核的设计非常微小和简洁，完成的工作也非常简单，仅仅通过查找配置文件将客户端请求映射到一个location block，而在这个location中所配置的每个指令将会启动不同的模块去完成相应的工作。"}
{"publishtime": "2016/07/15·", "title": "静态网站生成器将是下一个大事件", "desc": "第一个网站—— Tim Berners-Lee 的万维网处女页——就是静态的。那时的站点仅仅由一个文件夹下的一组 HTML 文档组成，而且HTML文件只包含18种标签。浏览器只是简单的文本导航器，它从服务器端抓 HTML，终端用户可以由超链接导航。Web基本上是静态的。"}
{"publishtime": "2016/07/15··", "title": "魔都 3 年，从程序员到 CTO", "desc": "2013年6月22号，当时怀满腔热血，踏上长达16个小时的火车来到了上海，一路坎坷的记忆至今亦可清晰可见，袋装泡面！硬座座位！晚点火车……来到了上海安置下来之后，我便开始投简历，找工作，写好自己的简历……"}
{"publishtime": "2016/07/15·", "title": "一个屌丝程序猿的人生（31）", "desc": "学习一门语言，最基础的部分，当然是它的语法、数据类型、关键字的用法等等这一类的知识。"}
{"publishtime": "2016/07/14·,", "title": "应该做技术还是应该做管理？", "desc": " 我在微博上收到过一个女孩子的咨询，她刚工作没几年，是一家外企外包公司的程序员，工作环境轻松，分配的任务简单，每天做完事情后有大把的时间。但是她的工资不高，当前也没有太多晋升的机会。"}
{"publishtime": "2016/07/14··", "title": "能够提高开发效率的Eclipse实用操作", "desc": "工欲善其事，必先利其器。对于程序员来说，Eclipse便是其中的一个“器”。本文会从Eclipse快捷键和实用技巧这两个篇章展开介绍。Eclipse快捷键用熟后，不用鼠标，便可进行编程开发，避免鼠标分了你的神。而掌握了Eclipse的一些实用技巧，则可以大大提高开发效率。"}
{"publishtime": "2016/07/14·", "title": "Linux 系统结构详解", "desc": "Linux系统一般有4个主要部分：内核、shell、文件系统和应用程序。内核、shell和文件系统一起形成了基本的操作系统结构，它们使得用户可以运行程序、管理文件并使用系统。"}
{"publishtime": "2016/07/14·", "title": "中央缓存结合本地缓存：本地缓存数据刷新方案", "desc": "互联网应用通常都需要应付大并发量，为了提高QPS，通常会使用中央缓存(例如memcache)和本地缓存的方式。请求先经过本地缓存，如果不命中，则请求穿透到中央缓存，如果还是不命中，则会直接查询数据库，并把查询到的数据刷新到中央缓存中。如果采用这种方式的话，必须要解决一个问题，如何刷新本地缓存的数据。"}
{"publishtime": "2016/07/22·", "title": "如何正确终止正在运行的子线程", "desc": "最近开发一些东西，线程数非常之多，当用户输入Ctrl+C的情形下，默认的信号处理会把程序退出，这时有可能会有很多线程的资源没有得到很好的释放，造成了内存泄露等等诸如此类的问题，本文就是围绕着这么一个使用场景讨论如何正确的终止正在运行的子线程。"}
{"publishtime": "2016/07/14·", "title": "使用Spring AOP切面解决数据库读写分离", "desc": "为了减轻数据库的压力，一般会使用数据库主从(master/slave)的方式，但是这种方式会给应用程序带来一定的麻烦，比如说，应用程序如何做到把数据写到master库，而读取数据的时候，从slave库读取。如果应用程序判断失误，把数据写入到slave库，会给系统造成致命的打击。"}
{"publishtime": "2016/07/22·", "title": "一个遗留系统自动化测试的七年之痒", "desc": "项目从2009年开始启动，采用的是TDD开发方式。在这之后的过程中，团队做过各种尝试去调整自动化测试的策略去更好的适应不同阶段项目的特征，比如调整不同类型测试的比例，引入新的测试类型等。"}
{"publishtime": "", "title": "未知", "desc": "暂无简介"}
{"publishtime": "2016/07/22·,·", "title": "指针详解", "desc": "指针是一个特殊的变量，它里面存储的数值被解释成为内存里的一个地址。要搞清一个指针需要搞清指针的四方面的内容：指针的类型，指针所指向的类型，指针的值或者叫指针所指向的内存区，还有指针本身所占据的内存区。让我们分别说明。 "}
{"publishtime": "2016/07/21··", "title": "如何在 Linux 上录制你的终端操作", "desc": "录制一个终端操作可能是一个帮助他人学习 Linux 、展示一系列正确命令行操作的和分享知识的通俗易懂方法。不管是出于什么目的，从终端复制粘贴文本需要重复很多次，而录制视频的过程也是相当麻烦，有时候还不能录制。"}
{"publishtime": "2016/07/21·", "title": "Linux netstat命令详解", "desc": "Netstat 命令用于显示各种网络相关信息，如网络连接，路由表，接口状态 (Interface Statistics)，masquerade 连接，多播成员 (Multicast Memberships) 等等。"}
{"publishtime": "2016/07/21··", "title": "Linus Torvalds 是一个糟糕的老板吗?", "desc": "因为 Linus Torvalds 的管理风格，他正遭到严厉的炮轰。Linus 无法忍受胡来的人。“代码的质量有多好？”这是他在 Linux 内核的开发过程中评判人的一种方式。 "}
{"publishtime": "2016/07/21·,", "title": "C++11 中的 Defaulted 和 Deleted 函数", "desc": "本文将介绍 C++11 标准的两个新特性：defaulted 和 deleted 函数。对于 defaulted 函数，编译器会为其自动生成默认的函数定义体，从而获得更高的代码执行效率，也可免除程序员手动定义该函数的工作量。对于 deleted 函数， 编译器会对其禁用，从而避免某些非法的函数调用或者类型转换，从而提高代码的安全性。本文将通过代码示例详细阐述 defaulted 和 deleted 函数的用法及益处。"}
{"publishtime": "2016/07/20·", "title": "如何隐藏你的 Linux 的命令行历史", "desc": "如果你是 Linux 命令行的用户，有的时候你可能不希望某些命令记录在你的命令行历史中。原因可能很多，例如，你在公司担任某个职位，你有一些不希望被其它人滥用的特权。亦或者有些特别重要的命令，你不希望在你浏览历史列表时误执行。"}
{"publishtime": "2016/07/20·", "title": "linux awk命令详解", "desc": "awk是一个强大的文本分析工具，相对于grep的查找，sed的编辑，awk在其对数据分析并生成报告时，显得尤为强大。简单来说awk就是把文件逐行的读入，以空格为默认分隔符将每行切片，切开的部分再进行各种分析处理。"}
{"publishtime": "2016/07/20··", "title": "这里有一份面经，请查收（1）", "desc": "毕业快满三年了，由于种种原因想换一份工作。学了7年计算机技术，在目前的行业用到的技术不多，还是想去寻找一份互联网行业的工作，这样更能学以致用发挥自己的特长。总共面完8家收了7个offer，应该算是比较成功的吧现在找工作也基本收尾了，来聊一聊我所遇到的一些面试经历。"}
{"publishtime": "2016/07/20··", "title": "也谈谈 Redis 和 Memcached 的区别", "desc": "说到redis就会联想到memcached，反之亦然。了解过两者的同学有那么个大致的印象：redis与memcached相比，比仅支持简单的key-value数据类型，同时还提供list,set,zset,hash等数据结构的存储……那么事实上是不是这样的呢？存在即合理，我们来根据几个不同点来一一比较一下。"}
{"publishtime": "2016/07/20·", "title": "怎样提升 Spark 中排序的性能？", "desc": "Cloudera 和 Intel 的工程师们正在就提升 Spark shuffle 过程的可扩展性和可靠性方面展开合作。本文该方案设计上的细节。"}
{"publishtime": "2016/07/20·,", "title": "C++11 中的右值引用与转移语义", "desc": "本文介绍了 C++11 标准中的一个特性，右值引用和转移语义。这个特性能够使代码更加简洁高效。"}
{"publishtime": "2016/07/19·", "title": "Spring 中 Bean 的生命周期", "desc": "Spring Bean是Spring应用中最最重要的部分了。所以来看看Spring容器在初始化一个bean的时候会做那些事情，顺序是怎样的，在容器关闭的时候，又会做哪些事情。"}
{"publishtime": "2016/07/13··", "title": "在泰国曼谷做开发是怎样一种体验？", "desc": "Denizet 是一个程序员，虽然是法国人，但已移居曼谷工作有好几年了。他在这篇文章中分享在曼谷度过的典型一天。"}
{"publishtime": "2016/07/19·,", "title": "Linux 动态库与静态库制作及使用详解", "desc": "本文介绍了 Linux 下三种标准库链接的方式及各自利弊，同时还介绍了 Linux 下静态库的制作及使用方法，相信能够给 大多数需要部署 Linux 应用程序和编写 Linux Makefile 的工程师提供有用的帮助。"}
{"publishtime": "2016/07/13·", "title": "多线程CreateThread函数的用法及注意事项", "desc": "当使用 CreateProcess 调用时，系统将创建一个进程和一个主线程。CreateThread 将在主线程的基础上创建一个新线程"}
{"publishtime": "2016/07/07·", "title": "MongoDB 的设计模式策略", "desc": "MongoDB是一项通用工具，但它也并非完美。针对某些MongoDB不适用的场合，有时可选用设计模式来加以应对。"}
{"publishtime": "2016/07/19··", "title": "趣文：为什么有些程序员特别喜欢猫？", "desc": "上次伯乐在线发起的《国内程序员的办公桌是什么样的》活动中，有 2 位童鞋的工作台都有喵星人。后来我碰巧在 Quora 上也看到有讨论程序员和喵星人。好奇的童鞋，请打开来看本文。"}
{"publishtime": "2016/07/13·", "title": "SQL SERVER全面优化：写出好语句是习惯", "desc": "好的语句就像这炫酷的跑车，跑的又快又帅气！今天这里介绍一些技巧让你可以改装一下自己的车！网上确实有好多好多好多好多SQL 语句优化的文章，什么 优化大全 ，100个优化注意 ，确实整理了好多好多。"}
{"publishtime": "2016/07/07·", "title": "PHP内核探索：PHP中的哈希表", "desc": "在PHP内核中，其中一个很重要的数据结构就是HashTable。我们常用的数组，在内核中就是用HashTable来实现。那么，PHP的HashTable是怎么实现的呢？"}
{"publishtime": "2016/07/19·,·", "title": "Linux 平台相关代码的 C++ 解决方案", "desc": "本文首先提出平台相关代码造成的两个问题，然后针对这两个问题循序渐进依次提出解决方案，在分析了前两个方案弱点的基础上，最后着重介绍一种基于多种设计模式的 Linux 平台相关代码的解决方案，并给出此方案的 C++ 实现。"}
{"publishtime": "2016/07/13·", "title": "微服务的团队应对之道", "desc": "这两年，微服务架构火了。在国内，从消费级互联网应用，到企业级应用；从金融领域，到电信领域；从新开发系统到已经开发了十几二十年的遗留系统；一夜之间，好像所有的团队都在谈微服务。"}
{"publishtime": "2016/07/07··", "title": "一个屌丝程序猿的人生（30）", "desc": "郑忠科走之后，林萧并没有在培训机构过多停留，就迫不及待的往宿舍赶了回去。"}
{"publishtime": "2016/07/19·", "title": "RabbitMQ、ActiveMQ、ZeroMQ、Kafka之间的比较汇总", "desc": "MQ框架非常之多，比较流行的有RabbitMq、ActiveMq、ZeroMq、kafka。这几种MQ到底应该选择哪个？要根据自己项目的业务场景和需求。下面我列出这些MQ之间的对比数据和资料。"}
{"publishtime": "2016/07/12··", "title": "程序员离职后的代码没人敢接手 ：15 张令人喷饭的 IT 趣图（第4季）", "desc": "主页君给各位汇总近期「程序员的那些事」上推荐的精彩趣图/漫画。"}
{"publishtime": "2016/07/07··", "title": "ThreadLocal 那点事儿", "desc": "当您在一个类中使用了 static 成员变量的时候，一定要多问问自己，这个 static 成员变量需要考虑“线程安全”吗？如果需要考虑，那就请用 ThreadLocal 吧！"}
{"publishtime": "2016/07/19··", "title": "谈谈命名", "desc": "命名对于广大的程序员来说的确是个大问题。"}
{"publishtime": "2016/07/12·", "title": "如何轻松给网站安装免费 SSL 证书？", "desc": "SSL 是网站的标配了，但是找到合适的并正确安装就有点痛苦了。跟着这篇教程做，你会发现实际很简单。"}
{"publishtime": "2016/07/07··", "title": "程序员的基础生存技能：搜索引擎", "desc": "善用搜索引擎的都是信息时代的富翁，不懂搜索引擎的都是信息时代的负翁。本文列举了一些实用的 Google 搜索技巧！"}
{"publishtime": "2016/07/19··", "title": "数学有什么用处？看完后恍然大悟！", "desc": "高等数学有什么用？很多人问过我这个问题。其实大多数人在问这个问题的时候，心里已经预设了否定的答案。确实，对于大多数人来说，已经发展到了连数字都基本很少用了的一些高等数学分支，是过于虚无飘渺了。"}
{"publishtime": "2016/07/12··", "title": "八大排序算法", "desc": "排序有内部排序和外部排序，内部排序是数据记录在内存中进行排序，而外部排序是因排序的数据很大，一次不能容纳全部的排序记录，在排序过程中需要访问外存。"}
{"publishtime": "2016/07/06·,", "title": "日请求亿级的 QQ 会员 AMS 平台 PHP7 升级实践", "desc": "QQ会员活动运营平台（AMS），是QQ会员增值运营业务的重要载体之一，承担海量活动运营的Web系统。AMS是一个主要采用PHP语言实现的活动运营平台， CGI日请求3亿左右，高峰期达到8亿。"}
{"publishtime": "", "title": "未知", "desc": "暂无简介"}
{"publishtime": "2016/07/12·,", "title": "谈谈技术管理的路", "desc": "其实我还不是一个正式的技术管理者，还是在学习管理的路上。"}
{"publishtime": "2016/07/06··", "title": "程序中减少使用 if 语句的方法集锦", "desc": " 大约十年前，我听说了反if的活动，觉得这个概念非常荒谬。如果不用if语句，又怎么能写出有用的程序呢？这简直太荒谬了。 但之后你会开始思考：是否还记得上周你拼命想读懂的深度嵌套代码？糟透了对么？要是有办法能简化它该多好。 "}
{"publishtime": "2016/06/29·", "title": "详解 MySQL 中的 explain", "desc": "在 explain的帮助下，您就知道什么时候该给表添加索引，以使用索引来查找记录从而让select 运行更快。如果由于不恰当使用索引而引起一些问题的话，可以运行 analyze table来更新该表的统计信息，例如键的基数，它能帮您在优化方面做出更好的选择。"}
{"publishtime": "2016/07/11··", "title": "Linux 多线程编程（不限Linux）", "desc": "线程？为什么有了进程还需要线程呢，他们有什么区别？使用线程有什么优势呢？还有多线程编程的一些细节问题，如线程之间怎样同步、互斥，这些东西将在本文中介绍。"}
{"publishtime": "2016/07/06·,", "title": "2016年，我们为什么要学习C++？", "desc": "学习 C++ 的一大好处在于，它可以帮助我们理解生命周期（Lifetime）和所有权（Ownership）的概念，以及类型的抽象，还可了解到怎样利用类型保持 API 的使用方式不变。除此之外，为何各种高级语言层出的今天，学习 C++ 仍颇有价值？本文将为你道来。"}
{"publishtime": "2016/06/29··", "title": "用 Jenkins 搭建 iOS/Android 持续集成打包平台", "desc": "本文主要是对如何使用Jenkins搭建iOS/Android持续集成打包平台的基础概念和实施流程进行了介绍。"}
{"publishtime": "2016/07/11·", "title": "Linux Socket编程（不限Linux）", "desc": "我们深谙信息交流的价值，那网络中进程之间如何通信，如我们每天打开浏览器浏览网页时，浏览器的进程怎么与web服务器通信的？当你用QQ聊天时，QQ进程怎么与服务器或你好友所在的QQ进程通信？这些都得靠socket？那什么是socket？socket的类型有哪些？还有socket的基本函数，这些都是本文想介绍的。"}
{"publishtime": "2016/07/06·", "title": "Twitter 的那些开源软件", "desc": "从Twitter的GitHub账户中可以看到，Twitter已经开源的项目有近200个，领域涉及分布式架构、大数据、异步网络传输（客户端、服务端）、Web、工具等。Twitter可以称为构建于开源项目之上的。"}
{"publishtime": "2016/06/29··", "title": "路在何方：小白程序猿打怪与升级的故事（10）", "desc": "转眼到了2007年4月底，天气已经非常温暖，春天的气息已经满溢申城，我也渐渐的习惯起了朝九晚六的生活。"}
{"publishtime": "2016/07/11·", "title": "编程老手的哪些特点，是值得新手程序员学习的？", "desc": "作为一个经验丰富的程序员，有哪些事情是你希望在一开始编程的时候就知道的？或者换个方式来说，你认为每个新手程序员应该做或者学什么才能让自己的编程水平更好？"}
{"publishtime": "2016/07/06·", "title": "MySQL 中的两种临时表", "desc": "①通过 CREATE TEMPORARY TABLE 创建的临时表，这种临时表称为外部临时表。这种临时表只对当前用户可见，当前会话结束的时候，该临时表会自动关闭。这种临时表的命名与非临时表可以同名。②内部临时表是一种特殊轻量级的临时表，用来进行性能优化。"}
{"publishtime": "2016/06/29·", "title": "红黑树探索", "desc": "最近花了些时间重拾数据结构的基础知识，先尝试了红黑树，花了大半个月的时间研究其原理和实现，下面是学习到的知识和一些笔记的分享。望各位多多指教。"}
{"publishtime": "2016/07/11·", "title": "本地事务和分布式事务工作实践", "desc": "在Windows平台上，事务的概念最开始出现在关系型数据库中，但是随着.net平台的发展，事务包括的的范围也越来越宽，在关系型数据库中的事务是通过begin transaction，rollback transaction, commit 等关键字来实现事务的。"}
{"publishtime": "2016/07/06·", "title": "4个小例子告诉你，如何成为一名数据极客", "desc": "对于数据岗位的员工，互联网公司颇有些不同的称谓，像统计工程师、大数据工程师、数据分析师、算法工程师、数据科学家等，每一种之间的技能差距简直是风马牛不相及。"}
{"publishtime": "2016/06/29·", "title": ".NET中的AOP介绍", "desc": "AOP在计算机科学领域还是相对年轻的概念，由Xerox PARC公司发明。Gregor Kiczales 在1997年领导一队研究人员首次介绍了AOP。当时他们关心的问题是如何在大型面向对象的代码库中重复使用那些必要且代价高的样板，那些样板的通用例子具有日志，缓存和事务功能。"}
{"publishtime": "2016/07/10·", "title": "SQL Server中的锁的简单学习", "desc": "在SQL Server中，每一个查询都会找到最短路径实现自己的目标。如果数据库只接受一个连接一次只执行一个查询。那么查询当然是要多快好省的完成工作。但对于大多数数据库来说是需要同时处理多个查询的。"}
{"publishtime": "2016/07/05··", "title": "Proxy 那点事儿", "desc": "Proxy，也就是“代理”了。意思就是，你不用去做，别人代替你去处理。比如说：赚钱方面，我就是我老婆的 Proxy；带小孩方面，我老婆就是我的 Proxy；家务事方面，没有 Proxy。"}
{"publishtime": "2016/06/29·", "title": "使用VS Code开发调试ASP.NET Core 1.0", "desc": "使用VS Code开发调试ASP.NET Core 1.0,微软在今天凌晨发布了.NET Core 1.0，ASP.NET Core 1.0 与 Entity Framewok 1.0。今天就给大家讲一下VS Code开发 ASP.NET Core。"}
{"publishtime": "2016/07/09·", "title": "数据库之锁的实践", "desc": "当多个用户并发地存取数据时，在数据库中就会产生多个事务同时存取同一数据的情况。若对并发操作不加控制就可能会读取和存储不正确的数据，破坏数据库的完整性和一致性。当事务在对某个数据对象进行操作前，先向系统发出请求，对其加锁。"}
{"publishtime": "2016/07/05·", "title": "消息队列设计精要", "desc": "本文首先会阐述什么时候你需要一个消息队列，然后以Push模型为主，从零开始分析设计一个消息队列时需要考虑到的问题，如RPC、高可用、顺序和重复消息、可靠投递、消费关系解析等。分析以Kafka为代表的pull模型所具备的优点。最后是一些高级主题，如用批量/异步提高性能、pull模型的系统设计理念、存储子系统的设计、流量控制的设计、公平调度的实现等。其中最后四个方面会放在下篇讲解。"}
{"publishtime": "2016/06/29·", "title": "细节和架构同等重要", "desc": "「软件架构」是系统的较高层次结构，而「软件设计」关乎细节，属于较低层次。我对此思考越多，就越发意识到：如果你不处理好细节，你也就无法拥有优秀的较高层次结构。如果你没有良好的软件设计，你的软件架构也不会优秀。"}
{"publishtime": "2016/07/05··", "title": "Redis Cluster 分区实现原理", "desc": "Redis Cluster本身提供了自动将数据分散到Redis Cluster不同节点的能力，分区实现的关键点问题包括：如何将数据自动地打散到不同的节点，使得不同节点的存储数据相对均匀；如何保证客户端能够访问到正确的节点和数据；如何保证重新分片的过程中不影响正常服务。这篇文章通过了解这些问题来认识Redis Cluster分区实现原理。"}
{"publishtime": "2016/06/29··", "title": "怎样避免脆弱的代码？", "desc": "遗留代码最常见的问题就是脆弱性。团队如要修改脆弱的代码库，必定伴随着巨大的痛楚。在我们开发产品的 10 年里，当我们年复一年地尽量保持庞大代码库的延展性时，学到了一些惨痛的教训。我想在本文分享我们从最大挑战中吸取的教训。"}
{"publishtime": "2016/07/05·", "title": "PHP源码阅读：array_slice 和 array_splice 函数", "desc": "array_slice 和 array_splice 函数是用在取出数组的一段切片，array_splice 还有用新的切片替换原删除切片位置的功能。类似 javascript 中的 Array.prototype.splice 和 Array.prototype.slice 方法。"}
{"publishtime": "2016/07/09·", "title": "暴雪游戏开发趣闻", "desc": "风暴英雄的数据驱动做得很好 (因此设计自由度很大)。在这样灵活度的支持下，设计师在 Blizzcon 上想搞个大新闻：两个不同的玩家可以控制同一个英雄。"}
{"publishtime": "2016/06/29··", "title": "程序员，你会从 Bug 中学习么？", "desc": "Bug 是绝佳的学习机会。所以我们怎样尽可能多地从修复的 bug 中吸取经验？我至今已经用了 13 年的一个方法是，写下这个 bug 的简单描述、修复方法以及吸取的经验。"}
{"publishtime": "2016/07/05··", "title": "Facebook 直播如何撑起瞬间 80 万人的流量？", "desc": "知道怎么打造世界级分布式服务（distributed service）的公司，可能比拥有核武的国家还少。Facebook不仅是其中的佼佼者，而它新推出的直播功能就是一项分布式服务。"}
{"publishtime": "2016/07/09··", "title": "C 语言产生随机数的方法", "desc": "我们可以利用C语言提供的srand()函数和rand()函数来产生我们想要的随机数"}
{"publishtime": "2016/06/28·", "title": "Redis 异步化组件模型", "desc": "Redis对客户端的IO事件处理是由主线程串行执行的，除了IO事件之外，这个线程还负责过期键的处理、复制协调、集群协调等等，这些除了IO事件之外的逻辑会被封装成周期性的任务由主线程周期性的处理，对于一些没有必要放在主线程的逻辑，由Redis封装成异步任务交给异步线程来处理，这篇文章主要介绍Redis的异步化线程模型"}
{"publishtime": "2016/07/04·", "title": "AOP 那点事儿", "desc": "今天我要和大家分享的是 AOP（Aspect-Oriented Programming）这个东西，名字与 OOP 仅差一个字母，其实它是对 OOP 编程方式的一种补充，并非是取而代之。"}
{"publishtime": "2016/07/05·", "title": "数据库设计：存储过程主体", "desc": "在上一篇文章里已经介绍了SQL Server里的存储过程标题，Joe会继续谈下存储过程内容的话题。在这篇文章里，他会概况谈下作为过程化语言的T-SQL的局限性，当决定如何使用它们时要记住那些。"}
{"publishtime": "2016/07/08·,·", "title": "国内程序员的办公桌是什么样的？", "desc": "国外程序员在 Quora 上晒办公桌/工作台，7月5日伯乐在线通过微信和微博推荐了这篇文章后，国内程序员也响应号召晒图了，伯小乐整理如下。"}
{"publishtime": "2016/06/28·", "title": "Amoeba 实现 MySQL 读写分离", "desc": "Amoeba(变形虫)项目，该开源框架于2008年 开始发布一款 Amoeba for Mysql软件。这个软件基于Java致力于MySQL的分布式数据库前端代理层，处于在应用和数据库之间，对客户端透明，它主要在应用层访问MySQL的时候充当SQL路由功能，解析应用传递过来的SQL语句，专注于分布式数据库代理层（Database Proxy）开发"}
{"publishtime": "2016/07/04·", "title": "Transaction 那点事儿", "desc": "Transaction 也就是所谓的事务了，通俗理解就是一件事情。从小，父母就教育我们，做事情要有始有终，不能半途而废。 事务也是这样，不能做一般就不做了，要么做完，要么就不做。"}
{"publishtime": "2016/07/05·", "title": "数据库设计：存储过程", "desc": "对于设计和创建数据库完全是个新手？没关系，Joe Celko， 世界上读者数量最多的SQL作者之一，会告诉你这些基础。"}
{"publishtime": "2016/07/08··", "title": "自学的程序员通常缺少哪些技能？", "desc": "本文来自 Quora 上的一个讨论帖，题主还换了一张种方式问：「自学的程序员需要学些什么，才能追上科班的同行？」本文摘编了 3 位国外程序员的观点。欢迎大家评论补充。"}
{"publishtime": "2016/06/28·", "title": "Scrum 中的大项目管理", "desc": "团队使用 Scrum 已经有半年多了, 基本形成了一周一个迭代周期的正常开发节奏，团队的开发状态也进入了正规；但是在Scrum的迭代中，时常会出现一些比较大项目需求，这种大项目工期长，时常会跨团队/部门配合，因此在迭代中会出现很多问题，难以管理。"}
{"publishtime": "2016/07/04·", "title": "谷歌的代码管理", "desc": "谷歌和 Facebook 都只有一个代码仓库，全公司的代码都放在这个库里。"}
{"publishtime": "2016/07/05·,·", "title": "国外程序员的办公桌是什么样的？", "desc": "Quora 上最近有个热帖，问的是「作为一个程序员，你的办公桌是啥样子的？」。很多国外程序员都晒图分享了，伯乐在线专栏杨默童鞋摘编了部分。"}
{"publishtime": "2016/07/08··", "title": "学 Vim 时希望早点知道的建议", "desc": "在过去的这些年，我学到了很多好用的 Vim 技巧，它们令我感觉相见恨晚，因为它们极大地提高了我的文本编辑效率。在这篇博文中，我想与你们分享其中的最精华部分。"}
{"publishtime": "2016/07/04··", "title": "聪明人不做的十件事", "desc": "当一个人被大家称赞其聪明时，你能想起些什么？或许你的脑海中将浮现出一个受过良好教育而且智力超群的人的形象。但是实际上，聪明远不止是正确地回答问题以及获得优异的学习成绩。通常情况下，真正聪明的人都极富创造性、同情心、感恩心态，而且，他们为人行事非常谦虚。"}
{"publishtime": "2016/06/28·", "title": "程序员的业务观", "desc": "常常听到做业务的程序员抱怨自己现在做的业务没有意思，学不到东西，用不到新技术，用的也都是翻来覆去的技术，得不到成长。很多程序员在经历这个过程时，很多调整不了也就离职了，也许走向了一个新的技术兴奋点，有些可能是换了个新的业务继续循环。"}
{"publishtime": "2016/07/05··", "title": "如何在 Github 打造你的爆款项目", "desc": "目前为止我已经有五个项目登上 Github 的 Trending 页，所以想分享我的一些经验和方法。"}
{"publishtime": "2016/07/04·", "title": "通过做一个基于Node的微服务器来学习Docker", "desc": "如果你正准备着手学习 Docker，别再观望，动起手来吧！在这篇文章中，我将告诉你 Docker 是如何工作的？使用中会遇到什么问题？如何通过 Docker 完成一个基本的开发任务——构建一个微服务器。"}
{"publishtime": "2016/06/28·,", "title": "PHP源码阅读：strtolower 和 strtoupper 函数", "desc": "字符串的操作函数中，字符串的大小写转换也算是比较常用的函数，其底层实现也比较简单，下面来一探究竟。"}
{"publishtime": "2016/07/08·", "title": "10 分钟服务器安全设置，Ubuntu安全设置入门", "desc": "Bryan Kennedy 的《5分钟服务器安全设置》很好地介绍了对多数服务器攻击的防御对策。我们对他的方法做了一些修改，还增加一些额外的解释，年轻的工程师们应该可以从中受益。"}
{"publishtime": "", "title": "未知", "desc": "暂无简介"}
{"publishtime": "2016/07/04··", "title": "优化 MySQL 中的分页", "desc": "一道面试的问题，当MySQL表中有数据量很大的时候如何做分页。。。。当时只知道在数据量很大的时候可以分表，但不知道不分表时可以怎么做。。。。唉，谁让代理商就那么几条数据，一个简单的limit，offset就完全hold住了(捂脸)。。。"}
{"publishtime": "2016/06/28·", "title": "jdk-logging、log4j、logback日志介绍及原理", "desc": "文章简单介绍了几种日志的简单用法，包括jdk-logging、log4j、logback日志介绍及原理。"}
{"publishtime": "", "title": "未知", "desc": "暂无简介"}
{"publishtime": "2016/07/04·", "title": "如何给变量取个简短且无歧义的名字", "desc": "本文作者在Google设计Dart语言，就变量命名方面给了4点建议，文中也列出了好变量名、坏变量名的对比。不管作者的看法与你实际中的命名习惯是否一致，看完这篇文章，相信可以在变量命名方面有一些新的思考。"}
{"publishtime": "2016/06/28··", "title": "漫谈 C# 在游戏领域的应用", "desc": "随着微软越来越开放，C#也变得越来越吸引人们的眼球。而在游戏行业中，C#也开始慢慢地获得了关注。这不， 网易绝代双娇手游团队已经全面使用.Net Core支持前后端统一C#开发，跨平台部署了。"}
{"publishtime": "2016/07/03··", "title": "算法：如何使用C++实现一个简单的集合类", "desc": "来自于C++程序设计的一个题目。实现一个集合类，要求实现以下4个操作：向集合中添加元素，从集合中移除元素， 重载+运算符，重载*运算符。"}
{"publishtime": "2016/06/28··", "title": "一个屌丝程序猿的人生（29）", "desc": "望着下面一竿子学生，眼巴巴的盯着自己，郑忠科眯起两只小眼微笑了一下，随后扶了扶眼镜说道：“你们这些学生，背景来历各不相同。有的是刚毕业，有的还在上大学，还有的都已经参加工作了。但是，既然你们已经来了，就代表你们愿意进入程序员这个行列。”"}
{"publishtime": "2016/07/03·", "title": "学习的奥秘", "desc": "你只要努力和坚持，你的大脑就能不断成长。结合深入研究学习型思维模式和我个人的实际生活经历，我越来越确信，一个人对学习的思维模式（学习心态）比任何我们希望传授的知识和技巧都重要。"}
{"publishtime": "2016/06/28·", "title": "Spark 交互式处理上百 TB 数据", "desc": "Apache Spark在内存数据处理领域有很多创新。有了这个框架，你可以上传数据到集群内存，并在交互模式下以非常快的速度处理这些数据。"}
{"publishtime": "2016/07/02·", "title": "我心目中最理想的大学教育", "desc": "如果你不想学习，就不要来上课。如果你不想学习的话，就不要到教室来，别浪费你的时间或者我的时间。我的时间非常宝贵，你的时间也一样。我并不比你更重要，我们的关系是平等的。"}
{"publishtime": "2016/06/27·", "title": "路在何方：小白程序猿打怪与升级的故事（9）", "desc": "跟着鲁大师去做了一段时间的给控件加CSS工作，总算是对VS2003，SourceSafe2003的操作有了大概的了解，但是到现在为止，我还是没有接触到真正意义上的变成"}
{"publishtime": "2016/07/02·", "title": "漫谈游戏中的人工智能", "desc": "今天我们来谈一下游戏中的人工智能。游戏中的人工智能，其实还是算是游戏开发中有点挑战性的模块是可以帮你打开新世界大门的一把钥匙。这篇文章其实我挺早就想写了，在我刚进工作室不久，看了内部的 AI workflow 很有感触，现在我们来聊聊游戏中的人工智能吧。"}
{"publishtime": "2016/06/27··", "title": "30 分钟 git 命令入门到放弃", "desc": "git 现在的火爆程度非同一般，它被广泛地用在大型开源项目，团队开发，以及独立开发者，甚至学生之中。初学者非常容易被各种命令，参数吓哭。但实际上刚上手你并不需要了解所有命令的用途，你可以从掌握一些简单，强大的命令开始，逐步去学习。"}
{"publishtime": "2016/07/02·", "title": "linux grep命令详解", "desc": "grep (global search regular expression(RE) and print out the line，全面搜索正则表达式并把行打印出来)是一种强大的文本搜索工具，它能使用正则表达式搜索文本，并把匹配的行打印出来。"}
{"publishtime": "", "title": "未知", "desc": "暂无简介"}
{"publishtime": "2016/07/02·", "title": "Linux GCC常用命令", "desc": "GCC 的意思也只是 GNU C Compiler 而已。经过了这么多年的发展，GCC 已经不仅仅能支持 C 语言；它现在还支持 Ada 语言、C++ 语言、Java 语言、Objective C 语言、Pascal 语言、COBOL语言，以及支持函数式编程和逻辑编程的 Mercury 语言，等等。"}
{"publishtime": "2016/07/01·", "title": "游戏服务端究竟解决了什么问题？", "desc": "写这篇博客之前也挺纠结的，一方面是因为游戏服务端其实不论架构上还是具体一些逻辑模块的构建，都属于非常成熟的技术，举个简单的例子，像端游的多 zone/scene/game 进程 + 单全局进程架构，网上随便一搜能搜出来几十篇内容差不多的。"}
{"publishtime": "2016/07/01··", "title": "一个知乎重度用户眼中的知乎", "desc": "玩知乎很久了，在知乎上学到不少知识，也学到不少抖机灵的技巧，知乎带给我最大的回忆，xwx。作为一个知乎重度用户兼技术宅，简单抓取了一下知乎的一点数据，力求看到一个尽可能真实的知乎"}
{"publishtime": "2016/06/30·,·", "title": "C++虚表，你搞懂了吗？", "desc": "虚表是一种利用程序语言实现的 dynamic dispatch 机制，或者说 runtime method binding 机制，也就是我们说的多态。"}
{"publishtime": "2016/06/30··", "title": "Redis 和 Memcached 的区别", "desc": "Redis 的作者 Salvatore Sanfilippo 曾经对这两种基于内存的数据存储系统进行过比较"}
{"publishtime": "2016/06/30·", "title": "Github 徽章整理", "desc": "相信很多在Github上玩耍过的同学们都会发现，在很多项目的README里会有各式各样的徽章，是不是顿时感觉到很高上大？没关系，读完这篇文章你就也可以拥有这些徽章了，甚至可以定制自己的徽章。"}
{"publishtime": "2016/06/30·", "title": "教你如何用R进行数据挖掘", "desc": "R是一种广泛用于数据分析和统计计算的强大语言，于上世纪90年代开始发展起来。得益于全世界众多 爱好者的无尽努力，大家继而开发出了一种基于R但优于R基本文本编辑器的R Studio。也正是由于全世界越来越多的数据科学社区和用户对R包的慷慨贡献，让R语言在全球范围内越来越流行。"}
{"publishtime": "2016/06/30·,", "title": "5 个 Laravel Eloquent 小技巧", "desc": "在大型的项目中使用 Laravel Eloquent ORM，某些工作可能会变得重复和繁琐，所以本文为大家总结了 5 个很少人知道的小技巧，在开发过程中帮我节省了很多时间。"}
{"publishtime": "", "title": "未知", "desc": "暂无简介"}
{"publishtime": "2016/06/27·,·", "title": "为什么Go是一种设计糟糕的编程语言", "desc": "好吧，我承认这个标题有点放肆。我多告诉你一点：我爱肆意妄言的标题，它能够吸引注意力。不管怎样，在这篇博文中我会试图证明 Go 是一个设计得很糟糕的语言（剧透：事实上它是）。"}
{"publishtime": "2016/06/27·", "title": "ASP.NET Core默认提供的这个跨平台的服务器——KestrelServer", "desc": "跨平台是ASP.NET Core一个显著的特性，而KestrelServer是目前微软推出了唯一一个能够真正跨平台的Server。KestrelServer利用一个名为KestrelEngine的网络引擎实现对请求的监听、接收和响应。"}
{"publishtime": "2016/06/27·", "title": ".NET Core 使用Dapper 操作MySQL", "desc": ".NET Core 使用Dapper 操作MySQL 数据库， .NET Core 使用Dapper。Dapper dot net 是一个轻量型的ORM，但是性能很强大。有了.NET Core MySQL Connector  我们可以直接使用ADO.NET 操作数据库。"}
{"publishtime": "2016/06/27·", "title": "微软新神器 Power BI 横空出世", "desc": "今天就给大家推荐一款BI神器Power BI，目前个人只是会简单的使用，主要精力集中在各项功能以及整个可视化系统实现的细节，如数据源刷新，云端展示，仪表盘设计，业务系统集成，协作共享等方面。"}
{"publishtime": "2016/06/26··", "title": "为什么离不开 Stackoverflow？", "desc": "作为一名程序员，如果没有听过 Stackoverflow，那么你最好去面壁思过一下。程序员最需要阅读的一本编程书籍（其实编程书留下这本就够了  :) "}
{"publishtime": "2016/06/26·", "title": ".NET Core HtmlAgilityPack HTML解析利器", "desc": ".NET Core版 HtmlAgilityPack HTML解析利器，目前是 HtmlAgilityPack Core RC2，HtmlAgilityPack是一个基于.Net的、第三方免费开源的微型类库，主要用于在服务器端解析html文档。"}
{"publishtime": "2016/06/26·", "title": "C#写PDF文件类库PDF File Writer介绍", "desc": "一款小巧的写PDF文件的C#组件：PDF File Writer。该开源组件是在codeproject，还没有托管到其他地方，所以作者花了点时间了解了一下，分享给大家。"}
{"publishtime": "2016/06/26·", "title": "C#基础之yield与Singleton", "desc": "yield这个关键字作用于迭代器块中，其最本质的功能有2个：一是“依次”向枚举对象提供值，二是发出迭代结束信号。这两个功能对应的语句分别是yield return和yield break。"}
{"publishtime": "2016/06/25·", "title": "你了解你和代码的生存环境吗", "desc": "我们编写的代码运行的每一天，其实跟我们生存的每一天都差不多，我们都依赖于外部资源——CPU、内存、网络等。因此了解我们（代码）的生存环境是相当重要的事情，无论是程序从 Redis 获取数据，或者是我们看到绿灯之后走过马路，大概率上是安全的，但是依然存在风险，了解存在哪些风险是必要的。"}
{"publishtime": "2016/06/24·", "title": "聊聊线程技术与线程实现模型", "desc": "做多线程应用开发，对于线程的理解是非常重要的，我们要为我们创建的每一个线程负责。这篇文章主要聊聊操作系统线程相关的主题，在了解线程定义、用户态与内核态、模态切换、线程上下文切换的基础之上再对常见的三种线程模型进行进一步介绍，希望对大家能够有所帮助。"}
{"publishtime": "2016/06/24·", "title": "协同过滤（CF）算法详解和实现", "desc": "Web2.0 的一个核心思想就是“集体智慧”，基于协同过滤的推荐策略的基本思想就是基于大众行为，为每个用户提供个性化的推荐，从而使用户能更快速更准确的发现所需要的信息。协同过滤的方式不需要对物品或者用户严格的建模，而且不要求物品的描述是机器可理解的，是中领域无关的推荐方法，同时这个方法计算出来的推荐是开放的，可以共用他人的经验，很好的支持用户发现潜在的兴趣偏好。"}
{"publishtime": "2016/06/24··", "title": "记笔记，手写与打字哪个更有效？", "desc": "教育工作者们急切地想要知道，计算机在教学和学习中的大范围应用，是否会在实质上影响到学生的学习效果和状态。很多已有的研究项目主要侧重探究电脑和其他类别的计算设备如何克服在多任务状态下，降低学习理解度以及学习效率等问题。截至目前为止，很少有人深入探究学生记笔记的具体方式，如，通过键盘打字或者普通手写，会对学生在课堂上的学习表现产生什么样的影响。"}
{"publishtime": "2016/06/24·", "title": "QQ空间直播秒开优化实践", "desc": "2016年应该是直播元年，直播应用百团大战，QQ 空间也在6.5版本上线了直播功能，从无到有、快速搭建了直播间。“先扛住再优化”，第一个版本和竞品相比，我们进入直播间的速度比较慢。根据外网统计在6.5版本的用户端看到画面需要4.4s，因此在6.5发布之后，着手启动了优化工作，目标：观看直播需要达到秒进体验（1s内看到画面）。"}
{"publishtime": "2016/06/24·", "title": "统领学习的二八法则", "desc": " 学习与使用你记忆中的东西紧密相关。阅读一本非虚构书籍、参加一场讲座、或者浏览一份文档，不完全等于学习。只有当你使用知识时，学习才真正发生。"}
{"publishtime": "2016/06/24··", "title": "MySQL单表百万数据记录分页性能优化", "desc": "自己的一个网站，由于单表的数据记录高达了一百万条，造成数据访问很慢，Google分析的后台经常报告超时，尤其是页码大的页面更是慢的不行。"}
{"publishtime": "2016/06/24··", "title": "一个屌丝程序猿的人生（28）", "desc": "只见人群之中突然冲出一个人影，挡在林萧三人跟前，一脸嚣张的说道：“你们谁是领头的？”"}
{"publishtime": "2016/06/20·,·", "title": "一些容易混淆的 C 和 C++ 的不兼容特性", "desc": "C 不是 C++ 的子集， 但 C++ 一直以兼容 C 代码为目标之一。 本文列举了一些 C 和 C++ 都支持的特性， 但二者又有一些细节的区别。"}
{"publishtime": "2016/06/23··", "title": "去大公司，还是小公司？", "desc": "职场生涯总会面临着选择，尤其对我们这些 IT 人来说，跳槽的频率应该是所有行业中相当大的了。那么我们跳来跳去，究竟该选择什么样的公司 ？ 大 or 小 。工作三年多了，经历一大一小，最近也面试了不少家公司，形态各异，说说自己的感受想法。"}
{"publishtime": "2016/06/20·", "title": "Spark性能优化指南：基础篇", "desc": "在大数据计算领域，Spark已经成为了越来越流行、越来越受欢迎的计算平台之一。Spark的功能涵盖了大数据领域的离线批处理、SQL类处理、流式/实时计算、机器学习、图计算等各种不同类型的计算操作，应用范围与前景非常广泛。"}
{"publishtime": "2016/06/23·", "title": "路在何方：小白程序猿打怪与升级的故事（8）", "desc": "就这样，正式开始了程序员生活。刚刚上班比较轻松，没有什么事情，有些无聊。第三天，坐我旁边的同事凑过来跟我说，如果你没有什么事情的话，来帮我做点东西。"}
{"publishtime": "2016/06/20··", "title": "编写高效率的C#代码", "desc": "作者选读了一下一本很不错的C#语言使用的书，特此记载下便于对项目代码进行重构和优化时查看。并附上泛型、LINQ、多线程之间的思维导图，其中标记的颜色越深表示在实际中的实际意义越大。"}
{"publishtime": "2016/06/23·,", "title": "Linux中的线程局部存储（2）", "desc": "上篇提到了一种，其实在Linux中还有一种更为高效的线程局部存储方法，就是使用关键字__thread来定义变量。"}
{"publishtime": "2016/06/19·", "title": "就待在这辆巴士上", "desc": "2004年6月，在新英格兰摄影学院的校园里，阿诺快步走到麦克风前，准备发表一场毕业典礼演讲。他抬起头来看着这些即将毕业的学生，然后给他们分享了一个简单的理论。根据他的判断，正是这一理论导致了成功与失败之间的差异。"}
{"publishtime": "2016/06/23·", "title": "lambda表达式之进化", "desc": "在C#我们可以自定义委托，但是C#为什么还要内置泛型委托呢？因为我们常常要使用委托，如果系统内置了一些你可能会用到的委托，那么就省去了定义委托，然后实例化委托的步骤，这样一来既使代码看起来简洁而干净又能提高程序员的开发速度，何乐不为呢！"}
{"publishtime": "2016/06/19··", "title": "编程超过 30 年，我是如何避开倦怠期的？", "desc": "我读了一些关于程序员的对编程感到倦怠的文章，读完后我开始思考为什么我在工作了这么多年之后（从 1981 年开始），还依然对编程充满兴趣。为什么我依然喜欢写代码？"}
{"publishtime": "", "title": "未知", "desc": "暂无简介"}
{"publishtime": "2016/06/18·", "title": "C# 使用消息队列，包括远程访问", "desc": "多个客户端连接到一个小型的数据转发服务器上，开始使用的是Socket通信实现这个功能，一旦数据服务器接收到来自不同客户端发来的消息，就对这些消息进行处理，但考虑到客户端是每隔一个很短的时间周期向服务器发送信息，并且连接客服端数量比较多的时候，就会担心产生并发访问的问题。"}
{"publishtime": "2016/06/18··", "title": "Cache应用中的服务过载案例研究", "desc": "简单地说，过载是外部请求对系统的访问量突然激增，造成请求堆积，服务不可用，最终导致系统崩溃。本文主要分析引入Cache可能造成的服务过载，并讨论相关的预防、恢复策略。"}
{"publishtime": "2016/06/18·", "title": ".Net委托类型解析", "desc": "不像Windows API中使用C语言风格的函数指针这种不安全的方式进行回调。.Net中此功能使用使用更为安全和面向对象的委托(delegate)来完成。委托是一个类型安全的对象，它指向程序中另一个以后会被调用的方法。"}
{"publishtime": "2016/06/18··", "title": "我从编程总结的 22 个经验", "desc": "本文是我在这些年来在软件开发工作中受到的启发，还有总结出来的不错经验。"}
{"publishtime": "2016/06/17·", "title": "路在何方：小白程序猿打怪与升级的故事（4）", "desc": "顿下来后，简单的收拾了一下，才发现天已经暗下来了，刚刚和小年的争执也似乎好像没有发生一样。"}
{"publishtime": "2016/06/17··", "title": "C#中数组Array、ArrayList、泛型List<T>的比较", "desc": "数组是一个存储相同类型元素的固定大小的顺序集合。数组是用来存储数据的集合，通常认为数组是一个同一类型变量的集合。Array 类是 C# 中所有数组的基类，它是在 System 命名空间中定义。"}
{"publishtime": "2016/06/17·", "title": "C# 7.0 新特性（3）： 模式匹配", "desc": "模式匹配也许能算的上C#本次更新最重量级的升级，也是最受关注的特性（也许没有之一），通过模式匹配，我们可以简化大量的条件代码。"}
{"publishtime": "2016/06/23·", "title": "C#由变量捕获引起对闭包的思考", "desc": "一个列表可以通过lamda如where或者predicate来实现，而在C#1.0中我们必须来写一个方法来实现predicate的逻辑，紧接着创建委托实例是通过指定的方法名来创建。"}
{"publishtime": "2016/06/17·", "title": "C# 7.0 新特性（1）： 基于Tuple的“多”返回值方法", "desc": "比起6.0及以前的C#，7.0中其实只是基于Tuple 做了语法简化的语法糖罢了，只是给人一种多个返回值的错觉。这个特性虽然不是多么振奋人心的变化，但是解决了之前很多码农的一些痒点。"}
{"publishtime": "2016/06/23·", "title": "那天我们招了一个盲人程序员", "desc": "2014年8月我们发布了一则招聘开发者的广告，并同时附上了在线编程测试的链接。应聘者得通过测试之后，我们才会和他们进行视频面试。"}
{"publishtime": "2016/06/17·", "title": "前后端分离开发模式下后端质量的保证：单元测试", "desc": "在今天， 前后端分离已经是首选的一个开发模式。这对于后端团队来说其实是一个好消息，减轻任务并且更专注。在测试方面，就更加依赖于单元测试对于API以及后端业务逻辑的较验。当然单元测试并非在前后端分离流行之后才有，它很早就存在，只是鲜有人重视且真的能够用好它。"}
{"publishtime": "2016/06/23··", "title": "身份证号码验证算法", "desc": "公民身份号码是特征组合码，由十七位数字本体码和一位校验码组成。"}
{"publishtime": "2016/06/17·", "title": "无锁数据结构（基础篇）：内存模型", "desc": "假设在前文中大家已窥探了处理器的内部结构。为了并行代码的正确执行，我们需提示处理器对内部执行的读写优化做一些限制。这些提示就是内存栅障，在某种程度，对内存访问进行管理。"}
{"publishtime": "2016/06/23·", "title": "路在何方：小白程序猿打怪与升级的故事（7）", "desc": "一天很快就过去了，到了下午四点，我跟钱老师打了声招呼，提前离开了公司。因为今天晚上的住宿还没有着落，我必须今天之内把房子租好"}
{"publishtime": "2016/06/17··", "title": "DNS 原理入门", "desc": "DNS 是互联网核心协议之一。不管是上网浏览，还是编程开发，都需要了解一点它的知识。"}
{"publishtime": "2016/06/22··", "title": "高并发性能调试经验分享", "desc": "后台服务端开发都有可能遇到在多线程和高并发环境下，如果有一个平均运行一百万次才出现一次的 bug。在针对 nginx 事件框架和 openssl 协议栈进行了一些深度改造，以提升 nginx 的 HTTPS 完全握手计算性能的项目中遇到概率极低的nginx的bug问题。通过构建分布式自动测试系统对bug进行重现和调试"}
{"publishtime": "2016/06/17·", "title": "寻址野史", "desc": "如何定位内存单元？只有定位到心仪的内存单元，才能够写入和读取数据。CPU为了享受到这些内存单元，必须解决这个问题。否则的话，很有可能翻的是嬛嬛却召见了皇后，多桑心啊。"}
{"publishtime": "2016/06/22··", "title": "15 张令人喷饭的 IT 趣图（第3季）", "desc": "主页君给各位汇总近期「程序员的那些事」上推荐的精彩趣图/漫画。"}
{"publishtime": "2016/06/17··", "title": "一个屌丝程序猿的人生（26）", "desc": "心中带着疑惑，林萧接起了电话说道：“喂，哪位？”"}
{"publishtime": "2016/06/22··", "title": "PHP源码阅读：count函数", "desc": "在PHP编程中，在遍历数组的时候经常需要先计算数组的长度作为循环结束的判断条件，而在PHP里面对数组的操作是很频繁的，因此count也算是一个常用函数，下面研究一下count函数的具体实现。"}
{"publishtime": "2016/06/16·", "title": "理解数组在PHP内部的实现", "desc": "欢迎来到”给PHP开发者的PHP源码”系列的第四部分，这一部分我们会谈论PHP数组在内部是如何表示和在代码库里使用的。"}
{"publishtime": "2016/06/21·,", "title": "Linux 中的线程局部存储（1）", "desc": "在Linux系统中使用C/C++进行多线程编程时，我们遇到最多的就是对同一变量的多线程读写问题，大多情况下遇到这类问题都是通过锁机制来处理，但这对程序的性能带来了很大的影响。"}
{"publishtime": "2016/06/16··", "title": "“字节序”是个什么鬼？", "desc": "女友加班，机智的她早已在昨晚准备好食材，回家只需下锅便可。谁知开会就是个无底洞，到了B1，还有B2，无穷匮也。辛苦如她，为了能让她一回家就吃上热腾腾的饭菜，我准备亲自下厨，奉献出我的第一次。食材都已备好，我相信没有那么难，估摸着应该和我习以为常的流程处理差不多……"}
{"publishtime": "2016/06/21·,", "title": "C++11新特性之新类型与初始化", "desc": "这是C++11新特性介绍的第一部分，比较简单易懂，但是也有一些有趣的地方。"}
{"publishtime": "", "title": "未知", "desc": "暂无简介"}
{"publishtime": "2016/06/21·", "title": "路在何方：小白程序猿打怪与升级的故事（6）", "desc": "随后两天，跟小年在人民广场，徐家汇，淮海路这样的地标路段转了转，也和平哥在一起吃了几顿饭，毕竟平哥还要找工作，不好老去骚扰他。"}
{"publishtime": "2016/06/21··", "title": "你有认真对待自己吗？", "desc": "很多时候我们太在意对方，太在意父母的期望，太在意男友或女友的想法，太在意金钱，太在意物质，却忘了自己。"}
{"publishtime": "2016/06/21··", "title": "AngularJS 入门教学视频【完结】", "desc": "这个视频系列教程由 Code School 出品，共 12 集，目前已更新至第 12 集，由@梦境漫游指南 主导汉化。"}
{"publishtime": "2016/06/21··", "title": "fork()函数与Linux中的多线程编程", "desc": "在操作系统的基本概念中进程是程序的一次执行，且是拥有资源的最小单位和调度单位（在引入线程的操作系统中，线程是最小的调度单位）。在Linux系统中创建进程有两种方式：一是由操作系统创建，二是由父进程创建进程（通常为子进程）。"}
{"publishtime": "2016/06/21·", "title": "一个屌丝程序猿的人生（27）", "desc": "“林萧，妈回去了。你一个人在北京照顾好自己，缺钱了给我打电话。”韩霞放下车窗，面色担忧的跟林萧告别。方才来宋刚学校之前，武达浪已经独自一人离开，如今事情已经办妥，韩霞也要赶回老家去了。"}
{"publishtime": "2016/06/20·", "title": "路在何方：小白程序猿打怪与升级的故事（5）", "desc": "回到酒店，匆匆洗漱后，带着一身的疲倦就躺下了。本以为可以安然入睡，但是却辗转反侧难以入眠。未知的工作，耸立的高楼，优越的小年，迷茫的未来，各种碎片在我脑海里面翻滚着，激荡着，每个问题好像都是一双强劲有力的手，使劲的把我拖向思考的深渊。"}
{"publishtime": "2016/06/20·", "title": "Linux 编程中的文件锁之 flock", "desc": "在多线程开发中，互斥锁可以用于对临界资源的保护，防止数据的不一致，这是最为普遍的使用方法。那在多进程中如何处理文件之间的同步呢？"}
{"publishtime": "2016/08/01··", "title": "为什么很多硅谷工程师偏爱 OS X，而不是 Linux 或 Windows？", "desc": "我看过许多诸如 Google、Dropbox、Quora 等公司的视频，发现有超过 90% 的工程师都在使用 Mac。Mac 为什么这么流行？难道大家没发现下面这些问题嘛？"}
{"publishtime": "2016/06/20·", "title": "五分钟理解一致性哈希算法", "desc": "一致性哈希算法在1997年由麻省理工学院提出的一种分布式哈希（DHT）实现算法，设计目标是为了解决因特网中的热点(Hot spot)问题，初衷和CARP十分类似。一致性哈希修正了CARP使用的简 单哈希算法带来的问题，使得分布式哈希（DHT）可以在P2P环境中真正得到应用。"}
{"publishtime": "2016/07/31··", "title": "玩转 Windows 10 中的 Linux 子系统", "desc": "在今年的 Build 2016 上，微软向全世界介绍了他们还处于 Beta 阶段的 Windows 下的 Linux 子系统WSL，它可以让开发者们在 Windows 10 下通过 Bash shell 运行原生的 Ubuntu 用户态二进制程序。如果你参与了 Windows Insider 计划，你就可以在最新的 Windows 10 年度升级版的 Insider 构建版中体验这个功能了。"}
{"publishtime": "2016/06/20··", "title": "Spark性能优化指南：高级篇", "desc": "继基础篇讲解了每个Spark开发人员都必须熟知的开发调优与资源调优之后，本文作为《Spark性能优化指南》的高级篇，将深入分析数据倾斜调优与shuffle调优，以解决更加棘手的性能问题。"}
{"publishtime": "2016/07/31··", "title": "年轻人，你为啥使用 Linux", "desc": "Linux 越来越流行，很多 OS X 或 Windows 用户都转移到 Linux 阵营了。但是你知道是什么让他们开始使用 Linux 的吗？一个 Reddit 用户在网站上问了这个问题，并且得到了很多有趣的回答。 "}
{"publishtime": "2016/06/20··", "title": "大众点评支付渠道网关系统的实践之路", "desc": "业务的快速增长，要求系统在快速迭代的同时，保持很好的扩展性和可用性。其中，交易系统除了满足上述要求之外，还必须保持数据的强一致性。对系统开 发人员而言，这既是机遇，也是挑战。本文主要梳理大众点评支付渠道网关系统在面对这些成长烦恼时的演进之路，以及过程中的一些思考和实践。"}
{"publishtime": "2016/07/31··", "title": "七种WebSocket框架的性能比较", "desc": "最近我又使用几个框架实现了websocket push服务器的原型，并专门对这七种实现做了测试。 本文记录了测试结果和一些对结果的分析。"}
{"publishtime": "2016/06/20·", "title": "高可用性系统在大众点评的实践与经验", "desc": "所谓高可用性指的是系统如何保证比较高的服务可用率，在出现故障时如何应对，包括及时发现、故障转移、尽快从故障中恢复等等。本文主要以点评的交易系统的演进为主来描述如何做到高可用，并结合了一些自己的经验。需要强调的是，高可用性只是一个结果，应该更多地关注迭代过程，关注业务发展。"}
{"publishtime": "2016/07/31·", "title": "四种框架分别实现百万websocket常连接的服务器", "desc": "著名的 C10K 问题提出的时候， 正是 2001 年。这篇文章可以说是高性能服务器开发的一个标志性文档，它讨论的就是单机为1万个连接提供服务这个问题，当时因为硬件和软件的限制，单机1万还是一个非常值得挑战的目标。"}
{"publishtime": "", "title": "未知", "desc": "暂无简介"}
{"publishtime": "2016/07/31··", "title": "Getty：Java NIO 框架设计与实现", "desc": "Getty是我为了学习 Java NIO 所写的一个 NIO 框架，实现过程中参考了 Netty 的设计，同时使用 Groovy 来实现。虽然只是玩具，但是麻雀虽小，五脏俱全，在实现过程中，不仅熟悉了 NIO 的使用，还借鉴了很多 Netty 的设计思想，提升了自己的编码和设计能力。"}
{"publishtime": "2016/07/30··", "title": "那些被岁月遗忘的 UNIX 经典著作", "desc": "那些几乎被这个时代所遗忘的 UNIX 时代的经典著作"}
{"publishtime": "2016/07/30·", "title": "Java 线程池框架核心代码分析", "desc": "多线程编程中，为每个任务分配一个线程是不现实的，线程创建的开销和资源消耗都是很高的。线程池应运而生，成为我们管理线程的利器。Java 通过Executor接口，提供了一种标准的方法将任务的提交过程和执行过程解耦开来，并用Runnable表示任务。本文来分析一下 Java 线程池框架的实现ThreadPoolExecutor。"}
{"publishtime": "2016/07/30·", "title": "RedisHttpSession 的设计与实现", "desc": "RedisHttpSession 是我的一个 Java 开源项目，通过将 Session 存储在 Redis 中实现多服务器间共享 Session，同时这一过程是完全透明的。主要用于支持 RESTfuls API。下面我将对其核心类进行分析，阐述它的设计以及实现细节。"}
{"publishtime": "2016/07/29··", "title": "关于持续集成打包平台的Jenkins配置和构建脚本实现细节", "desc": "本文作为《使用Jenkins搭建iOS/Android持续集成打包平台》配套，对搭建持续集成打包平台中涉及到的执行命令、构建脚本（build.py），以及Jenkins的配置进行详细的补充说明。"}
{"publishtime": "2016/07/29·", "title": "从0到1搭建移动App功能自动化测试平台 (4)：自动化测试代码⎡工程化⎦", "desc": "在本系列的上一篇文章中，我通过系统登录这一典型功能点，演示了编写自动化测试脚本的整个流程，并对测试脚本进行了初步优化。"}
{"publishtime": "2016/07/27··", "title": "Linux 死锁检测模块 Lockdep 简介", "desc": "死锁是指多个进程（线程）因为长久等待已被其他进程占有的的资源而陷入阻塞的一种状态。当等待的资源一直得不到释放，死锁会一直持续下去。死锁一旦发生，程序本身是解决不了的，只能依靠外部力量使得程序恢复运行，例如重启，开门狗复位等。"}
{"publishtime": "2016/07/27·,·", "title": "C++ 异常处理机制的实现", "desc": "相对于传统语言，C++ 的革命性特征之一，就是它对异常处理的支持。传统异常处理技术有缺陷并且易于出错，而 C++ 提供了一个非常优秀的替代方案。它将正常流程代码与错误处理代码清晰的隔离出来，使得程序更加健壮，易于维护。这篇文章将讨论编译器是如何实现异常处理的。"}
{"publishtime": "2016/07/27·", "title": "大型项目程序配置管理演化之路", "desc": "今天我们就来聊聊程序的配置管理，看我们如何在软件发展的各个阶段实现更好的程序配置管理，来支撑持续交付。"}
{"publishtime": "2016/07/27·", "title": "如何定义一个好的变量名", "desc": "在日常编程中最烦恼的就是给变量取名，一段好代码，既要能完美地运行，还要能较容易地维护。这就意味着需要让日后维护代码的人能很快地看懂你的代码，而且，在团队合作中，其他开发者也会经常阅读你那部分代码。如果你的代码中充满了a,b,c,a1,a2,a3…那简直就是一个噩梦。因此，好的变量名非常重要。"}
{"publishtime": "2016/07/27··", "title": "一周时间，初试 ML", "desc": "在外行人眼里，上手机器学习 (ML) 似乎是件不可能的事情。要是方法不对的话，确实如此。事实上，经过用一周时间对主干知识的钻研，我发现机器学习比想像中容易很多。本文从我自己入门周的亲身体会出发，希望给其他想要学习 ML 却又无从下手的朋友一点启发。"}
{"publishtime": "2016/07/26··", "title": "最简单实现跨域的方法：用 Nginx 反向代理", "desc": "跨域，指的是浏览器不能执行其他网站的脚本。它是由浏览器的同源策略造成的，是浏览器对javascript施加的安全限制。"}
{"publishtime": "2016/07/26·", "title": "被 Facebook 开除是什么样的一种经历？", "desc": "某一天我被开除了，因为我做了一件违反了政策的事。我不会详述这件事，因为我要保护身份和所涉及到这件事的人。但所有听我说过这件事的人都表示非常惊讶。我所做的事无非就是“乱穿马路”（jaywalking）：违反规定，可其他人也经常这么做，并且没有造成什么损失。但不知是什么原因引起了人事部门的注意，接着就展开了一场调查……"}
{"publishtime": "2016/07/26·", "title": "NSA 是如何破解大量加密信息的？", "desc": "近几年有谣言说 NSA 可以解密已加密网络中的大部分数据。在 2012 年，James Bamford 发布了一篇 文章，引用了匿名的 NSA 前成员的说法，他证实“NSA已经取得了计算力的突破性进展，他们有能力破解当前已公开的加密算法”。"}
{"publishtime": "2016/07/26··", "title": "很认真地聊一聊程序员的自我修养", "desc": "最近看了《浅谈程序员的英语学习》，对于文章中的观点我非常认同，英语是非常重要的，但文章站的高度还是太高，具体表述的学习方法我不是很认同，也认为不太实际，恰好之前有一篇一直没有发表的文章想重新发布，就借此机会和大家很认真的谈一谈程序员的自我修养问题。"}
{"publishtime": "", "title": "未知", "desc": "暂无简介"}
{"publishtime": "2016/06/16·", "title": "路在何方：小白程序猿打怪与升级的故事（3）", "desc": "就这么疯玩疯玩的度过了07年春节，基本上一整个冬天都奉献给了KTV和酒吧，当然，跟小年也是天天早出晚归的腻在一起。"}
{"publishtime": "2016/06/16·,", "title": "PHP 的变量实现", "desc": "这是”给PHP开发者的PHP源码”系列的第三篇，我们打算扩展上一篇来帮助理解PHP内部是怎么工作的。这一次深入PHP最有用的结构之一：变量。"}
{"publishtime": "2016/06/16·", "title": "C# 7.0 新特性（2）： 本地方法", "desc": "简而言之，本地方法就是在方法体内部定义一个方法。其实咋眼一看，这个新特新并没有什么新意，因为目前大量C#的项目中，都可以使用delegate或基于delegate变形的各种方案。但是请仔细推敲一下，方法体内部delegate，是否真的那么完美无缺？"}
{"publishtime": "2016/06/16··", "title": "VS Code（1.2.0）最新亮点和特性全介绍", "desc": "五月发布的VS Code加入了一些很棒的新特性，如自动去除插入的空格、快速修复、代码补全、在VS Code中调用系统Shell等，并改进了许多现有功能并且修复了重要的Bug。"}
{"publishtime": "2016/06/16·", "title": "商业智能指南", "desc": "什么是商业智能？按照 Gartner 的说法，BI 是一个涵盖性术语，包括应用产品，基础设施，工具和确保能接触到的最佳范例，和完善信息的分析以及决策和性能的优化。"}
{"publishtime": "2016/06/16··", "title": "Java集合框架源码剖析：ArrayDeque", "desc": "Java中有名为Stack的类，却没有名为Queue的类，当需要使用队列时的首选是什么？为什么ArrayDeque既可以当作栈又可以当作队列？为什么ArrayDeque在当作堆栈时有着比LinkedList更高的效率？本文从源码层面给出解答。"}
{"publishtime": "2016/06/15··", "title": "两种编程高手", "desc": "第一种：给一段复杂的程序，比如有7个局部变量，5层循环和if嵌套，他能赤手空拳上阵，迅速领会程序意图、找到bug，不用借助任何工具甚至纸笔。"}
{"publishtime": "2016/06/15·", "title": "路在何方：小白程序猿打怪与升级的故事（2）", "desc": "  我妈兴冲冲的对我说，“你工作可能有着落了！”，我心里一阵激动，就像是许久干旱的田地突然终于被灌溉了一丝丝清甜的甘泉一样，充满了惊喜与希望。"}
{"publishtime": "2016/06/15·", "title": "dotnet core开发体验之开始MVC", "desc": "在上一篇文章《dotnet core多平台开发体验 》，体验了一把dotnet core 之后，现在想对之前做的例子进行改造，想看看加上mvc框架是一种什么样的体验，于是我就要开始诞生今天的这篇文章来分享我的感受了。"}
{"publishtime": "2016/06/15··", "title": "程序员、技术领导、管理者各有烦恼，你占了几条？", "desc": "我做软件开发工作已超过10年的时间，我热爱我的事业，我希望有一天我会被人们称呼为老程序员。但这一路走来，我经历了许多可怕的事情，这些事情让我讨厌我的工作。在职业生涯早期，我曾期望有人能给我一份职场指南，这样当一些新的不幸的厄运发生，我就不会感到如此的孤单和沮丧。"}
{"publishtime": "2016/06/15··", "title": "Java 帝国之函数式编程(上)", "desc": "Java 8的函数式编程是怎么回事？"}
{"publishtime": "2016/06/15·", "title": "一个屌丝程序猿的人生（25）", "desc": "“选什么编程语言？”林萧闻言一时有些犹豫，虽然他对于编程连入门都算不上，但他也很清楚，编程语言一旦选择了，如果未来想要再换，那可就不是一句话就能换得了的事了。"}
{"publishtime": "2016/06/15·", "title": "C#函数式编程", "desc": "提起函数式编程，大家一定想到的是语法高度灵活和动态的LISP,Haskell这样古老的函数式语言，往近了说ruby,javascript，F#也是函数式编程的流行语言。然而自从.net支持了lambda表达式，C#虽然作为一种指令式程序设计语言，在函数式编程方面也毫不逊色。"}
{"publishtime": "2016/06/15··", "title": "从无重复大数组找TOP N元素的最优解说起", "desc": " 现今，处理大数据问题一个倾向的思路就是充分利用系统资源，充分发挥多核、大内存计算型服务器的能力，为我们提高效率，多线程是在JAVA中以及有了非常好用的API以及concurrent包下的工具类，能否有效利用这些工具提速我们的程序也很关键。"}
{"publishtime": "2016/06/15··", "title": "小波变换教程（1）：基本原理", "desc": "我刚开始接触小波变换的时候，曾经为了搞清楚小波变换这个这个神奇的世界到底发生了什么而苦苦挣扎，因为在这个领域的入门教材非常少。因而，我决定为新手们写一份教程。我自认为也是一个新手，必须承认，我也有很多理论细节没有弄清楚。不过，就工程应用而言，我认为弄清楚所有的理论细节大可不必。"}
{"publishtime": "2016/06/14··", "title": "如何做一个开心的程序员？", "desc": "经常有人发帖讨论「怎么做一个成功的程序员」，「如何才能成为一个优秀的程序员」，我并不太同意这些文章中的看法，想在这里我想提出一些我对于程序员这个职业自己的想法。"}
{"publishtime": "2016/06/14·", "title": "路在何方：小白程序猿打怪与升级的故事（1）", "desc": "我是07年从一个三本毕业的小白，初入社会到今天经历了许许多多的事情，和玩一个游戏一样，不断的打怪，不断的升级，才有了今天。但是，我并没有停止，追逐梦想和生活的现实，到底应该何去何从？路，到底在何方？"}
{"publishtime": "2016/06/14·", "title": "微服务概述", "desc": "“微服务”这个术语在过去几年如雨后春笋般涌现，它是一种构建可独立部署服务套件的软件设计方式。虽然这样的架构风格没有明确的定义，但它们在组织方式、业务能力、自动化部署、智能化终端以及对语言与数据的去中心化等方面具备共同的特征。"}
{"publishtime": "2016/06/14··", "title": "Google VR 开发简介", "desc": "Google 有两个 Virtual Reality(VR) 平台，一个是Cardboard，一个廉价的VR解决方案，2015年Goolgle的I/O推出。另一个就是今年的I/O大会刚刚推出的Daydream，期待着Daydream能够带来更加优质的，性价比高的VR解决方案。"}
{"publishtime": "2016/06/14·", "title": "WebAPI在MVC4下的调整（4）", "desc": "WebAPI是建立在MVC和WCF的基础上的，原来微软老是喜欢封装的很多，这次终于愿意将http编程模型的相关细节暴露给我们了。在之前的介绍中，基本上都基于.NET 4.5之后版本，其System.Net.Http程序集非常的丰富，而老版本的则相对较弱。"}
{"publishtime": "", "title": "未知", "desc": "暂无简介"}
{"publishtime": "2016/06/14·", "title": "使用 .NET Core 实现依赖关系注入", "desc": "使用 .NET，通过 new 运算符调用构造函数即可轻松实现对象实例化。遗憾的是，此类调用会强制实施客户端代码到已实例化对象的紧密耦合的连接，此外还会引用其程序集/NuGet 包。"}
{"publishtime": "2016/06/14··", "title": "该试试 SQLite 的 5 个理由", "desc": "如果你还没听说，SQLite是一款能够实际运作在真实产品环境中的惊艳的数据库。在这篇文章中，我会列出5大理由来解释为什么你应该试试 SQLite。"}
{"publishtime": "2016/06/14·", "title": "可空类型Nullable到底是什么鬼", "desc": "举个栗子吧，我们定义一个人（Person），它有三个属性出生日期（BeginTime）、死亡日期（EndTime）、年龄（Age）。如果这个人还健在人世，请问怎么给死亡日期赋值？有人很聪明说“为空啊”。是的，这就是我们的需求，微软在C#2.0的时候就为我们引入了可null值类型（ System.Nullable ）。"}
{"publishtime": "2016/06/14·", "title": "大数据系统数据采集产品的架构分析", "desc": "任何完整的大数据平台，一般包括以下的几个过程：数据采集、数据存储、数据处理、数据展现（可视化，报表和监控）。其中，数据采集是所有数据系统必不可少的，随着大数据越来越被重视，数据采集的挑战也变的尤为突出。"}
{"publishtime": "2016/06/14·", "title": "使用开源软件快速搭建数据分析平台", "desc": "最近，国内涌现出了不少数据分析平台产品。这些产品的目标应该都是self service的BI，利用可视化提供数据探索的功能，并且加入机器学习和预测的功能。"}
{"publishtime": "2016/06/13·", "title": "用 JS 实现简单的神经网络算法", "desc": "神经网络试图模拟大脑的神经元之间的关系来处理信息。它的计算模型通常需要大量彼此连接的节点。每个神经元通过某种特殊的输出函数来处理来自其它相邻神经元的加权输入值。"}
{"publishtime": "2016/06/13·", "title": "PHP源码阅读：count 函数", "desc": "在PHP编程中，在遍历数组的时候经常需要先计算数组的长度作为循环结束的判断条件，而在PHP里面对数组的操作是很频繁的，因此count也算是一个常用函数，下面研究一下count函数的具体实现。"}
{"publishtime": "2016/06/13··", "title": "番茄工作法的时间管理套路", "desc": "在这篇文章之前写过一篇「番茄工作法」，它可以提高我的效率，接下来来分析一下为什么它能够提高我们的效率？"}
{"publishtime": "2016/06/13·", "title": "什么是反射、反射可以做些什么", "desc": "反射是指程序可以访问、检测和修改它本身状态或行为的一种能力。反射的核心Type类，Type对象提供的属性和方法可以获取对象的一切信息，如：方法、字段、属性、事件…等等。"}
{"publishtime": "2016/06/13·", "title": "Google 怎么样做 50 PB 数据排序的？", "desc": "Google 怎么样做 50 PB 数据排序的？本文会回顾前几年我们做的一些 PB 量级测试的经历。这其中包括 MapReduce 迄今为止做过的最大量级的测试：50PB 数据的排序。"}
{"publishtime": "2016/06/12··", "title": "时间管理之番茄工作法", "desc": "不知道大家有没有一种被时间追赶的感觉？"}
{"publishtime": "2016/06/12··", "title": "程序员为什么要时刻保持危机感？", "desc": "假期回来，第一天上班，领导找我说，你的人都划入各个事业部，管理权也都放在各事业部，于是我就成了一个光杆司令，后续未知。小组是个技术团队，现有10人左右，承接着公司各个事业部的技术开发任务。公司业务人员已经分成了事业部，由于技术的平台性和共享性，技术一直是以研发中心存在的单独部门，没有分开。"}
{"publishtime": "2016/06/12·", "title": "无锁数据结构（基础篇）：内存栅障", "desc": "内存栅障是多核处理器软件设计者不太了解的东西，究竟是什么原因促使 CPU 设计者引入它呢？要详尽地回答这个问题，需要从CPU缓存的工作机制入手，特别是如何做确保缓存很好地工作。"}
{"publishtime": "2016/06/12·", "title": "ASP.NET Core 源码阅读之 Microsoft.Extensions.DependencyInjection", "desc": "对于框架使用者来说，注册一项服务最自然的方式就是提供服务的接口和实现这个接口的服务实例，比如IEmail是用户需求的服务，而Outlook类就是服务的实例类型，用这两种信息注册一项服务是最自然的。"}
{"publishtime": "2016/06/12·", "title": "抛弃EF，20分构建一个属于自己的ORM框架", "desc": "相信EF大家都不陌生了，因为数据库表跟程序实体是一一对应的原因，我们能够通过lambda这种函数式的编程方式进行操作数据库，感觉非常清晰明了。与我们直接写SQL相比，lambda是强类型，拥有更好的扩展性，伸缩性，而且编程更加的方便，快捷。"}
{"publishtime": "2016/06/11·,", "title": "理解 PHP 内部函数的定义", "desc": "在上一篇中，ircmaxell 说明了你可以在哪里找到PHP的源码，它的基本目录结构以及简单地介绍了一些C语言（因为PHP是用C语言来写的）。这篇我们谈论的是定位PHP内部函数的定义，以及理解它们的原理。"}
{"publishtime": "2016/06/11·", "title": "WebAPI的一种单元测试方案", "desc": "本文中作者介绍一种webApi的in-memory调用方法，也能够达到对webApi的测试，并且由于是in-memory调用，效率也比较高，非常适写单元测试。"}
{"publishtime": "2016/06/11·", "title": "异步编程最佳实践", "desc": "使用async void标记的方法有不同的错误处理语义。async Task或async Task方法抛出异常时，异常会被捕获并放到Task对象上。然而，标记为async void的方法没有Task对象，所以async void方法抛出的任何异常都会直接放到SynchronizationContext上，它是在async void方法开始的时候激活的。"}
{"publishtime": "2016/06/11··", "title": "面向过程，面向对象，函数式对同一个问题的思考方式", "desc": "之所以对函数式代码感兴趣是因为函数式代码富有表现力，可以使用简短、紧凑的代码完成工作，同时能对特定的问题给出优雅的解决方案。现代的编程语言不约而同的朝着面向对象、函数式、动态、解释执行的方向发展，例如Ruby,Swift。"}
{"publishtime": "2016/06/11·", "title": "Redis 分区实现原理", "desc": "分区不仅仅是Redis中的概念，几乎是所有数据存储系统都会涉及到的概念，这篇文章将会在理解分区基本概念的基础之上进一步了解Redis对分区的支持。"}
{"publishtime": "", "title": "未知", "desc": "暂无简介"}
